================================================================================
$Header: /home/rda/hol/RCS/CHANGES,v 1.5 2002/03/27 15:04:19 rda Exp rda $

ProofPower Changes History
================================================================================

2.5.7:

PPTex: None

PPXpp:

1) The yes/no/cancel dialogue that is popped up when a selection to be executed
does not end in a new-line now works properly.

2) A new font `holsans10' is available. This is a 10-pt sans-serif font that is
suitable for medium resolution screens (e.g., 1024x768 pixels on a 14' or 15'
laptop screen).

PPHol:

1) A bug in the printing of `Q's in file names has been fixed.

PPZed:

None.

PPDaz:

1) Use package clauses and all the forms of renaming declarations other than
exceptions are now supported formally provided they do not introduce duplicate
names into the name space.

2) Ada '95 use type clauses are now supported.

3) Discriminant parts and discriminant constraints are now supported formally.

4) The full Ada syntax for exit, exit-when and return statements is now
supported formally, including return statements in procedures.  The
restrictions that required return statements in particular places in functions
have been dropped.

5) A subprogram declaration for a subprogram whose body will be provided later
in the same declarative part is now supported formally. This includes
full formal support for recursive and mutually recursive procedures and
functions.

6) A package name may now appear more than once in the with clauses at the head
of a compilation unit.

================================================================================

2.5.6:

PPTex: None

PPXpp: None

PPHol:

1) pp_make_database now accepts the parent database name with or
without the compiler/architecture-dependent suffix.

PPZed: None

PPDaz:

1) Capital `Q's are now pretty-printed properly by the Ada output
functions.

2) Capital `Q's in Ada strings are now translated properly.

================================================================================

2.5.5:

PPTex: None

PPXpp:

1) When started with the name of a non-existent file, xpp now gives you an
option to start editing an empty buffer with the file name set to the name of
the non-existent file.

2) A bug in the command-line processing has been fixed: you may now omit the
-file and -command option keywords. "xpp <file> <cmd> <args>" is equivalent to
"xpp -file <file> -comand <cmd> <args>".

3) xpp now sets the environment variable PPLINELENGTH to the width of the
journal window when the command is started or restarted.  This effect can be
overridden by setting the environment variable explicitly before invoking xpp.

PPHol:

1) The function ExtendedIO.execute has been withdrawn and replaced by
ExtendedIO.system.  The interface offered by ExtendedIO.execute did not allow
the spawned process to be reaped properly on termination.  Equivalent
functionality to ExtendedIO.execute is available in the Standard ML Basis
library, if required.

2) The initial value of the line_length integer control is taken from the
environment variable PPLINELENGTH if that is set and contains a decimal integer
greater than 19. This control determines the length of lines produced by
various listing facilities such as print_theory.

3) A number of bugs have been fixed relating to ProofPower-HOL aliases.
undeclare_alias may now be used effectively to hide a constant name.

4) The scripts pp and pp_make_database have had a number of bug fixes and
enhancements. Thanks to Phil Clayton of QinetiQ for many of these.  See the
reference manual pages for these scripts for more details.

5) A number of bugs in the system initialisation functions have been fixed. In
particular, the state of the system controls module (which manages flags,
integer controls and string controls) is properly preserved now.

6) The obsolete script pp_read has been withdrawn and is no longer supplied.

PPZed:

1) The implementation of the Z library no longer undeclares the aliases for the
HOL integer arithmetic operations.

2) Consecutive underscores are now allowed inside Z identifiers.

PPDaz:

1) The symbol for expansion of a statement label (i.e., for an informal
refinement step) has been changed to a refinement sign preceded by an
exclamation mark. This prevents the conceptual overloading of the symbol used
for expanding declaration k-slots, and means that all informal development
steps contain an exclamation mark.

2) SPARK program output function bug fixes: if a formal parameter mode is
omitted in the original Ada code, then it is now printed without an explicit
mode when the program is printed. All forms of loop statement are now pretty
printed correctly as are percent signs in string literals.

3) VC generator fixes: type conversions using the pre-defined real types are
now translated into Z correctly. A bug which prevented the same name being used
for formal parameters of different types in different subprograms under some
circumstances has been fixed.

4) A number of bugs which caused problems to do with the database hierarchy
under Poly/ML have been fixed.

5) A package name may now be given several times in a context clause.

6) The global variable INFORMAL_FUNCTION in the theory cn has been renamed to
Informal_Function to avoid the possibility of a clash with an Ada name.

7) The soundness checks made when the program is printed now allow a function
to end in a case statement without an others part. When the checks fail, the
program is now printed (or output) in its entirety.

8) The array sliding conversion introduced in version 2.5.4 is now also
being applied when array and record aggregates are used to construct
arrays of arrays.

================================================================================
