================================================================================
$Header: /home/rda/opp/RCS/README.opp.src,v 1.26 2004/02/21 14:19:19 rda Exp rda $

This is the README file for the Open ProofPower product suite, version $PPVER
The open source suite comprises the following five packages:

 PPTex - The ProofPower documentation preparation system
 PPDev - The ProofPower developer toolkit
 PPHol - The ProofPower tools supporting specification and proof in HOL
 PPZed - The ProofPower tools supporting specification and proof in Z
 PPXpp - The X/Motif user interface for ProofPower


See the file LICENSE for your rights to use and modify this software.

A sixth package is also available under licence from Lemma 1 Ltd.

 PPDaz - The Compliance Tool which supports specification
         and proof of Ada code using Z.

PPDaz is not part of the open source suite.

ProofPower is Copyright (c) Lemma 1 Limited 2002.

See the CHANGES file for changes in this version.

See the ProofPower web-site for further information about ProofPower,
including the documentation suite in PDF format. The ProofPower web-site
is at:

        http://www.lemma-one.com/ProofPower/index/index.html

================================================================================

1. INSTALLATION

WHAT YOU WILL NEED:

To install the software you will need a system running a UNIX or UNIX-like
operating system such as Solaris, Linux or MacOS X with:


a) an ANSI-C compiler: e.g., gcc
b) Common UNIX utilities (nroff, ex, nl etc.)
c) X Windows and Motif run-time and developer software
d) a Standard ML compiler: either Poly/ML or Standard ML of New Jersey
e) the Tex and LaTeX typesetting software

If you do not have some of the software needed to install ProofPower,
see under SYSTEM REQUIREMENTS below for more information on
what is needed and where it may be obtained.

WHAT YOU DO:

A) Unpack the tarball OpenProofPower-$PPVER.tgz working in an empty directory
of your choice. E.g., 

        mkdir $HOME/pp_bld
        cd $HOME/pp_bld
        gunzip -c </tmp/OpenProofPower-$PPVER.tgz | tar xvf -

B) Run the "configure" script:

        ./configure

The "configure" script works out default values for installation options such
as which directory to put the ProofPower installation in and which Standard ML
compiler.  It creates a script "install" to carry out the installation using
these options and gives you a report on what options it will use.


C) If you are happy with the output from "configure", run the install script:

        ./install

This will install the software giving a brief report on what is being done. The
installation process produces some  log files, and the report tells you where
to find these in case of errors.

The ProofPower software is now installed in the location chosen by the "configure"
script. For example, if it chose "/usr/local/pp", the directory "/usr/local/pp/bin"
will contain the binaries, "/usr/local/pp/doc" will contain the
documentation and so on. ProofPower users will wish to add the binary directory
to their search path (see SYSTEM ADMINISTRATION FOR PROOFPOWER below for more
information).

Some of the ProofPower documents contain diagrams. If these appear to be missing
when you view the documents, you may need to set the TEXINPUTS environment
to tell the DVI browser where to look for the documents (see under TEXINPUTS below).

If you wish to change the installation options chosen by "configure", or if
an error occurs see under THE CONFIGURE AND INSTALL SCRIPTS below for more
information about what the scripts do and how you can control their behaviour.

If you wish to configure a user account to use ProofPower, or wish to know
more about how to carry out system administration tasks involving the
installed ProofPower system see under SYSTEM ADMINISTRATION FOR PROOFPOWER
below for more information.

If you have problems with the installation, please let us know. A good way
of doing this is via the ProofPower mailing list. See the ProofPower
web-site for contact details and for more information about subscribing
to the mailing list.

2. SYSTEM REQUIREMENTS

ProofPower has been developed under x86-Linux, Sparc-Solaris 2.X and
PowerPC-Mac OS X.  You may well be able to compile and run it under other
operating systems in the UN*X family. You will certainly need:

a) an ANSI-C compiler: e.g., gcc
b) Common UNIX text-processing utilities (nroff, ex, nl etc.)
c) X Windows and Motif run-time and developer software
d) a Standard ML compiler: either Poly/ML or Standard ML of New Jersey
e) the Tex and LaTeX typesetting software

Sections 2.A to 2.E below give more information on these items. These sections
assume you are familiar with the process of downloading and installing open source
software for your system.

When unpacked, the distribution occupies about 17Mb. Compilation of the full
open source distribution increases this to about 150Mb (for Poly/ML) or 250Mb
(for Standard ML of New Jersey). About 100Mb (Poly/ML) or 125Mb (Standard ML of
New Jersey) of this comprises the original source files and various temporary
files and this can be reclaimed if desired.

The time taken by the compilation and installation depends on your hardware and
the compiler you use. E.g., using Poly/ML it takes about 10 minutes on a
notebook with a 798MHz Pentium III CPU and  256Mb of memory; on the same system
using Standard ML of New Jersey it takes about 25 minutes.

For Apple PowerPC systems, at least 256Mb of RAM is recommended by Apple for
their X Windows implementation and we endorse this recommendation. ProofPower
can be installed with as little as 128Mb of RAM but the performance will be much
improved if you have more RAM.

2.A C Compiler

The PPTex and PPXpp packages are implemented in ANSI C. The GNU C compiler
(gcc) is recommended. GNU C is bundled with all Linux distributions. GNU C is
also included in the Darwin Developer Tools supplied with Mac OS X (see
section 0.7 below).

PPXpp will not compile on Solaris with the C compiler provided as part of
Sun's BSD compatibility package.  If you do not have an ANSI C compiler
installed under Solaris, the GNU C compiler may be obtained via:

        http://gcc.gnu.org/

On Mac OS X you will need to install the Darwin Developer Tools
These include gcc and much more and are supplied
with Mac OS X, but are not installed by default. To install them open  the
folder /Applications/Installers/Developer Tools, double click on Developer.mpkg
and follow the instructions in the Installer program.

2.B Other UN*X Utilities.

Installation of PPHol, PPXpp and  PPZed uses the ex text editor. The
installation script expects ex to be in a directory on your search path. Under
Linux, ex is supplied with the vi-like text editors such as VIM, Elvis or NVI.

Installation of PPXpp uses the nroff text processor. This comes bundled with
Solaris and Mac OS X. It is bundled on some Linux distributions but not all (it
is usually supplied with the distribution, but not all installation options
will install it). It is usually supplied in the groff or groff-for-man packages
or you can find it by searching for groff at:

        http://www.gnu.org

Mac OS X does not include some of the text processing utilities that are used
to build ProofPower. The GNU textutils package provides what is needed and can
be obtained via the GNU website at the above web address.

2.C X Windows and Motif

PPXpp uses X Windows and the Motif library. You will need Motif version 2.1 or
later. The X Windows software is bundled with Solaris 2.X, with all common
Linux distributions and with MacOS X 10.3 or later.

LessTif is a Motif clone that is included in some older Linux distributions.
The LessTif developers do intend to make LessTif comply with Motif 2.1, but
at the time of writing, PPXpp uses Motif 2.1 features which are not properly
supported by LessTif. If you have LessTif installed on your system, we
recommend you replace it with OpenMotif or other Motif 2.1 (or 2.2) compliant
Motif implementation.

Solaris:

The Motif runtime and development software you need is bundled with Solaris 2.X.

Linux:

Under Linux, PPXpp has been built and tested under the commercial version of
Motif supplied by Metro Link and also under the OpenGroup's free version of
Motif, OpenMotif.  Several vendors who support the OpenMotif initiative provide
binary distributions for OpenMotif which can be downloaded via:

        http://www.opengroup.org/openmotif

Lemma 1 used the Metro Link OpenMotif RPMs which may be obtained from the
Downloads link on the OpenMotif web site or from the Metro Link web site:

        http://www.metrolink.com/products/motif/download.html

You will need to install the runtime and development RPMs to build PPXpp.

Mac OS X:

For Mac OS X, we used the OpenMotif 2.2 source distribution which may be
obtained via the OpenMotif web site.

2.D Standard ML Compiler

The PPDev, PPHol and PPZed packages are primarily implemented in Standard ML.
They have been built and tested using Poly/ML versions 4.1.2 and 4.1.3 and also
using Standard ML of New Jersey version 110.0.7. 

Poly/ML is the recommended compiler and may be obtained from:

        http://www.polyml.org

To install Poly/ML: visit http://www.polyml.org and follow the instructions for
downloading and installing Poly/ML 4.1.3 for your operating system.
When you install Poly/ML, if you follow the convention of having the
Poly/ML database in /usr/lib/poly/ML_dbase  then
the "configure" script will find it automatically.
If your Poly/ML installation does not follow this convention see
under THE CONFIGURE AND INSTALL SCRIPTS below for how to work with it.

Standard ML of New Jersey also works well and may be obtained from:

        http://cm.bell-labs.com/cm/cs/what/smlnj/index.html

At the time of writing, Standard ML of New Jersey was only available for Mac OS X
in a recent development version. ProofPower has not been extensively tested under
Standard ML of New Jersey on Mac OS X.

If you are using Standard ML of New Jersey, then you will need the bin subdirectory
of the installation directory to be on your path - this directory includes a script
called .arch-n-opsys which is used by some of the scripts in ProofPower.

2.E LaTeX

The ProofPower document preparation system requires the TeX/LaTeX typesetting
software. This comes bundled with most Linux distributions.  The teTeX
implementation of TeX & LaTeX for Linux or Solaris is available from

        http://www.tug.org/tetex/

Tex-Live teTeX for Mac OS X is an easy to install implementation available from:

        http://www.rna.nl/tex.html

If you want the ProofPower documentation in PDF or PostScript format, you will
need either dvipdfm or dvips program to do the conversion from the DVI format
(see discussion of PPDOCFORMAT below).  If you do not have these they can be
obtained via:

        http://www.ctan.org

3. THE CONFIGURE AND INSTALL SCRIPTS

The "configure" script inspects the environment and various aspects
of your system and uses these to generate a script "install" which
actually builds and installs the software. They are run from
the directory OpenProofPower.$PPVER created when you unpack the
ProofPower tarball.

The "configure" script chooses various installation options by
examining your system. You can influence its choices by setting
environment variables on the command line when you run the script.
For example, the call:

        PPHOME=/opt/pp$PPVER PPCOMPILER=SMLNJ configure

tells configure to use /opt/pp$PPVER as the home (i.e., target)
directory for the installation and to use Standard ML of New Jersey
regardless of whether the preferred compiler Poly/ML is available.

By default, this will be the first of /usr/share/pp, /usr/local/pp, /opt/pp
and $HOME/pp that looks likely to work.

The installation may be done in the directory, e.g., /usr/share/pp or /usr/local/pp
or $HOME/pp, in which you intend to install the binaries and supporting
documents and files or in any other directory of your choice. 

You may alter the choice of installation directory using the environment variable
PPHOME. So, for example, if you have write access to an existing directory
/usr/local/pp, and that is where you want to install the software just use:

        ./configure

If instead, you want to install in /usr/local/pp_latest then use.
        
        PPHOME=/usr/local/pp_latest ./configure

There are some other environment variables you may wish to use, e.g., to
install the developer kit, which is not installed by default.  See the comments
at the top of the script configure for more information.  The more commonly
useful of these variables, PPPOLYDBASE, PPDOCFORMAT and PPCOMPILER are also
described below.

If you are using Poly/ML you may need to use the environment variable
PPPOLYDBASE to supply the name of the file containing the Poly/ML compiler
database. This defaults to /usr/lib/poly/ML_dbase, which is appropriate for
Poly/ML installed under Linux using the RPM.  If, for example, you have built
Poly/ML yourself and installed it in $HOME/bin, then you might use:

        PPPOLYDBASE=$HOME/bin/ML_dbase ./configure

The installation process takes a copy of the Poly/ML compiler database where
necessary, so ProofPower users do not need access to the original compiler
database.

The environment variable PPDOCFORMAT may be used to have the documentation
converted from DVI format into PostScript (PPDOCFORMAT=PS) or Portable
Document Format (PPDOCFORMAT=PDF). The configure script generates
an HTML file, index.html, in the doc subdirectory of the installation
directory. This HTML file contains links to the documents in the
format you have selected.

WARNING: the configure script uses the script distclean described below to
clean up the src directory. It will attempt to delete any files or directories
you have created in this directory.

The install script can be given an option which can be useful if you
are patching an existing installation, e.g., to upgrade just one of the
packages or to convert the documents into a new format. The call

        ./install -d

will just install the chosen packages together with the DVI formatted documents
for that package. The call

        ./install +d

will just do the document format conversions specified when you ran
configure and generate a new HTML index file.

If you are upgrading one of the packages then run configure using PPTARGETS to
select the package in question and then run install with the -d option. This
will give you the revised versions of any documents for that package in the DVI
format and will preserve your existing HTML index file.  If you now want the
documents in a different format, run configure with PPDOCFORMAT set to PS or
PDF as appropriate and with PPTARGETS set to select all the packages you have
installed and then run install with the +d option. This will convert all the
documents and regenerate the HTML index file.

The compilation and installation processes produce a large number of temporary
file in the src directory. You may remove these using the script distclean:

        ./distclean

Alternatively you may now delete the src directory and the directory containing
it (providing you are not using that to hold the binaries).

If the installation fails for some reason, when you have fixed the problem, it
is generally advisable to call ./distclean to tidy up the src directory before
restarting the installation.

WARNING: distclean will try to delete everything in the src directory that is
not part of the original distribution.

You may wish to have ProofPower available under both Poly/ML and Standard ML of
New Jersey, to do this use the PPCOMPILER environment variable to install first
using one compiler and then using the other.  The resulting set-up will default
to using the second compiler you used, but the user will be able to choose
which compiler to use via the PPCOMPILER environnment variable (which can take
the value POLYML or SMLNJ).

The PPTex, PPTex, PPHol and PPZed packages include UN*X-style manual pages
for the command line interfaces. These are installed as troff source files in
the subdirectory man/man1 of the installation directory.

4. SYSTEM ADMINISTRATION FOR PROOFPOWER

4.A Setting the UNIX search path

No special configuration is required to run ProofPower unless it has been
installed in a non-standard way. Most users will want to include the bin
subdirectory of the ProofPower home directory in their search path.

Examples:

    i) If you use the Bourne shell, or similar, and set up your
      search path explicitly, e.g., in $HOME/.login, with a
      shell command such as:

        PATH=/bin:/usr/bin:/usr/X11R6/bin:/usr/local/bin
        export PATH

    You might change this to:

        PATH=/usr/local/pp/bin:/bin:/usr/bin:/usr/X11R6/bin:/usr/local/bin
        export PATH

    ii) If you use the default path for your system you might use the
      following Bourne shell commands instead to extend the default
      value set up for your system.

        PATH=/usr/local/pp/bin:$PATH
        export PATH

    iii) If you use the C-shell, the command to use might be:

         setenv PATH /usr/local/pp/bin:$PATH

Some people prefer to extend the search path at the end rather than the beginning, as
in PATH=$PATH:/usr/local/pp/bin. But note that a printer maintenance utility
called "xpp" is installed on some Linux systems and will be called in preference
to the ProofPower program "xpp" if it is on your search path and you put the
ProofPower bin directory at the end of the search path.

Please consult the manual pages for the shell you use or a local expert if you
need further advice on setting the path (and note that if you log in with the
X Windows system already running you may need to put the shell initialisation
in an X start-up file, typically called $HOME/.xsession).


4.B Installing ProofPower in the standard bin directories.

If you wish to make the ProofPower software generally available on your
system, you can place symbolic links to the ProofPower executables
in one of the standard bin directories. For example, if you have installed
into /home/sw/pp$PPVER, you might do

        ln -s /home/sw/pp$PPVER/bin/* /usr/local/bin

Note that it is not advisable just to make links to some of the executables
and you must include a link to the findfile program for this method to work.
The reason is that the shell scripts use findfile to locate the ProofPower
home directory (by expanding out the name of the symbolic link used
to call them).

4.C Installing ProofPower without Super-user Privileges

If you want to install the software in a public directory such as /usr/local/pp
or /opt/pp and do not wish to run install with super-user privileges, the
following approach is recommended: (1) as super-user create the installation
directory and then change its ownership to an unprivileged username. E.g.

        mkdir /usr/local/pp
        chown yourname /usr/local/pp

then (2) under the unprivileged username, run configure and install and then
change the permissions of the installation directory to remove all write access
and so prevent accidental changes to the files in it. (Ordinary users do not
need write access to the files in the installation directory)

        ./configure
        ./install
        chmod -R -w /usr/local/pp

If you need to copy the installation directory and you are using Poly/ML, you
will need to use the poly command to change the absolute path name parent of
the example databases set up by the installation process (example_hol.polydb
and example_zed.polydb). Alternatively, you can delete these databases and then
rebuild them using the shell scripts install_holdemo and install_zeddemo in the
installation directory.
 
4.D Customising xpp

You can customise the xpp program by adding an X resource file in
$HOME/app-defaults/Xpp containing custom X resource settings - see the xpp
user guide (usr031) for more information.

4.E Summary of Environment Variables

There are a number of environment variables that can be used to change the
behaviour of ProofPower - e.g., to control the TeX input search path used
when you run texdvi. The following is a complete list.

PPENVDEBUG - control diagnostics for the handling of the environment (tuning)

By default no diagnostics. If set to a non-empty string the scripts and
xpp tell you what they are using for the various variables.

PPCOMPILER - ML compiler to use

Treated exactly as before, default is planted in script during
installation, and so is whichever of SML/NJ or Poly/ML was installed
after the other.

PPHOME - home directory for ProofPower

Default is calculated using $0, e.g. /usr/local/pp/bin/pp to locate
`basename $0`/findfile and then running that to get the real path name
for $0 with symbolic links expanded, /usr/local/pp273/bin/pp, then apply
dirname to the result twice to give /usr/local/pp273.

TEXINPUTS, BIBINPUTS, BSTINPUTS - for TeX, LaTeX and BibTeX

Default is "$PPHOME/tex:". The ":" at the end means look in the standard
places as well. The default is set internally to the ProofPower shell
scripts such as texdvi that run LaTeX and BibTeX. If you use other
programs such as xdvi that depend on TEXINPUTS, you may need to set
this environment variable to pick up some files (e.g., to view the PostScript
diagrams included in some of the documents with xdvi).

PPDATABASEPATH - search path for databases

Default is ".:$HOME/db:$PPHOME/db".

N.b., if you want "." on the PPDATABASEPATH, you need to put it there. It
is only tagged on automatically if you are defaulting this variable.

Developer note: you need to set this to something like ".:$HOME/ppdev"
where $HOME/ppdev is the place where you're accumulating the results of
make -f <product>.mkf bininst.


PPCOMPACT - control whether pp_make_database should do a compacting
garbage collection

Default "y".  Only relevant when PPCOMPILER is Poly/ML.  Set to "n" or
"N" to suppress compaction.  Previously treated any value other than
"n" or "N" as meaning compact; now must be "y", "Y", "n" or "N".


PPETCPATH - search path for sievekeyword and sieveview


Rob Arthan. Lemma 1 Ltd.

================================================================================
