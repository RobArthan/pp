=========================================================================================
$Header: /home/rda/bld/dev/RCS/README.opp.src,v 1.2 2002/10/20 18:45:29 rda Exp rda $

This is the README file for the Open ProofPower product suite, version $PPVER
The open source suite comprises the following five packages:

 PPTex - The ProofPower documentation preparation system
 PPDev - The ProofPower developer toolkit
 PPHol - The ProofPower tools supporting specification and proof in HOL
 PPZed - The ProofPower tools supporting specification and proof in Z
 PPXpp - The X/Motif user interface for ProofPower

The source for all five of these packages is in the src directory.

A sixth package is also available under licence from Lemma 1 Ltd.

 PPDaz - The Compliance Tool which supports specification
         and proof of Ada code using Z.

ProofPower is Copyright (c) Lemma 1 Limited 2002.

The ProofPower CD-ROM distribution includes Standard ML of New Jersey.
Standard ML of New Jersey is Copyright (c) 1989-1998 by Lucent Technologies.

See the CHANGES file for changes in this version.
=========================================================================================

0. SYSTEM REQUIREMENTS

TBS (from notes somewhere on tychonov)

1. INSTALLATION

For the open source distribution, the information below supersedes the
installation instructions in the individual README.<product> files that you
will find in the src directory. Those files do contain some useful information
about configuring your user account for the various packages and about
using the software.

As you are reading this file, you have probably already unpacked
the gzipped tar archive. If not, begin by unpacking it as follows:

	gunzip -c OpenProofPower-$PPVER.tgz | tar xvf -

This can be done either in the directory, e.g., /usr/share/pp or /usr/local/pp
or $HOME/pp, in which you intend to install the binaries or in any other
directory of your choice.

Now run the configure script: By default, this will install the software
in the first of /usr/share/pp, /usr/local/pp, /opt/pp and $HOME/pp
that looks likely to work. You may alter this using the environment
variable PPINSTALLDIR. So, for example, if you have write access
to an existing directory /usr/share/pp, and that is where you want
to install the software just use:

	./configure

If instead, you want to install in /usr/share/pp_latest then use.
	
	PPINSTALLDIR=/usr/share/pp_latest configure

There are some other environment variables you may wish to use,
e.g., to install the developer kit, which is not installed by default.
See the comments at the top of the script configure for more information.

The script configure creates a script install that you may then use to compile
and install the software in your chosen installation directory:

	install

If you want to install the software in a public directory such as /usr/share/pp
or /opt/pp and do not wish to run install with super-user privileges, the
following approach is recommended. (1) as super-user create the installation
directory and then change its ownership to your username. E.g.

	mkdir /usr/share/pp
	chown yourname /usr/share/pp

Now under your username, run configure and install and then change the
permissions of the installation directory to remove all write access
and so prevent accidental changes to the files in it. (Ordinary users
do not need write access to any of these files.)

	configure
	install
	chmod -R -w /usr/share/pp

The compilation and installation process produces a large number of
temporary file in the src directory. You may remove these using
the script distclean:

	distclean

Alternatively you may now delete the src directory and the directory containing
it (providing you are not using that to hold the binaries).

2. CONFIGURATION TO USE PROOFPOWER

The individual README.<product> files in the source directory give
more detailed information about the individual packages. The following
gives some example initialisation scripts for simple usage. The main
issues are to set up your shell initialisation script (.bashrc, .profile,
.cshrc) to include the binaries on your search path and to tell TeX and
LaTeX where to find the style files, fonts etc. and to set up your X
environment so that it finds the applications default (resource) files
for the xpp program.

Note that the example files below are for Linux, however with suitable modifications
they should work under Solaris provided you take into account the differences
in the installation of X Windows and SML-NJ on your Solaris system as compared
with a typical Linux system (see SOLARIS notes below).

LINUX:

Under Linux, if you install the software into /usr/share/pp, the
following sample shell initialisation file (.profile or .bash_profile)
and sample .xinitrc file should provide a working starting point for
the configuration.  Please read the README.<product> files for further
information.

==== Sample shell initialisation file for ProofPower under Linux ====

PPINSTALLDIR=/usr/share/pp
export PPINSTALLDIR

TEXINPUTS=.:$PPINSTALLDIR/tex:
BIBINPUTS=.:$PPINSTALLDIR/tex:
BSTINPUTS=.:$PPINSTALLDIR/tex:

export TEXFONTS TEXINPUTS BIBINPUTS BSTINPUTS

XUSERFILESEARCHPATH=$PPINSTALLDIR/app-defaults/%N:/usr/lib/X11/app-defaults/%N

export XUSERFILESEARCHPATH

SYSPATH=/usr/local/bin:/bin:/usr/bin:/usr/X11R6/bin

PATH=.:$PPINSTALLDIR/bin:/usr/share/smlnj/bin:$SYSPATH

export PATH

==== End of sample shell initialisation file for ProofPower ====

==== Sample .xinitrc file under Linux ====

xset +fp $PPINSTALLDIR/fonts fp rehash
. /usr/X11R6/lib/X11/xinit/xinitrc

==== End of sample .xinitrc file ====

SOLARIS:

Under Solaris, if you are using Sun's bundled distribution of X
Windows, then you can adapt the Linux examples given above (and in the
other README files) by replacing:

        "/usr/X11R6" by "/usr/openwin"
        "/usr/lib/X11" by "/usr/openwin/lib/X11"
and     "/usr/share/smlnj" by "/usr/local/smlnj".

If you have a custom installation of X Windows, then consult your local
systems administrator for the appropriate directory names.

4. ERRATA


a) On at least some versions of Solaris, if xpp is started with a
-command option in the background, then it will hang on the SIGTTOU
condition. E.g.,

	xpp -command hol &

will hang until you bring the session back into the foreground.
The easiest work-around is to start xpp in the foreground:

	xpp -command hol

then break in:

	Control+Z

then set the process running in the background:

	bg

A similar problem may occur on some version of Solaris when you
use the Command/Restart menu item in xpp. To work around this,
ask the shell to list the background processes

	jobs

If the failing xpp is listed as job 3, for example, bring it
into the foreground:

	fg %3

It should then unblock, and you can then break in and set it
running in the background again as described above.

b) Under Poly/ML, the first time you run pp_make_database for a parent database
you need write access to that database. This may lead to file permissions
problems.  For the packages PPHol, PPZed and PPDaz you should therefore run
pp_make_database to make a child of each of the databases.  This will happen if
you install the documentatation packages for PPHol and PPZed and run the demo
installation scripts and if you run the installation confidence test for PPDaz
(see USR501).  Alternatively, immediately after installation, issue the
commands:

	pp_make_database -p hol holchild
	pp_make_database -p zed zedchild
	pp_make_database -p daz dazchild

You can then delete the files holchild.polydb, zedchild.polydb and
dazchild.polydb that will have been created.

c) The Compliance Tool installation guide refers to a directory
"sun4bin" this should read "bin".

Rob Arthan. Lemma 1 Ltd.

=========================================================================================
