######################################################################
#
#	opp.mkf $Header: /home/rda/opp/RCS/opp.mkf,v 1.32 2009/05/17 12:09:02 rda Exp rda $
#
#	makefile for the Open ProofPower source distribution
#
######################################################################


# default make target,  gives help
default:
	@echo "The following are the most useful make commands:"
	@echo " "
	@echo "make -f opp.mkf dist      - builds the distribution"
	@echo "make -f opp.mkf clean     - removes intermediate files"
	@echo "make -f opp.mkf src       - source (RCS) release of opp tools"
	@echo "make -f opp.mkf label     - label the RCS files with the version"
	@echo " "
	@echo "Various environment variables influence the behaviour:"
	@echo " "
	@echo "    PPVER       - product version"
	@echo "                  taken from file version if not set"
	@echo "    PPTARGETS   - short names of packages to include"
	@echo "                  all but daz and qcz if not set"
	@echo "                  use "all" to get everything"
	@echo "    PPTGZNAME   - stem of name for tarball, e.g., PPDaz"
	@echo "                  OpenProofPower or ProofPowerPro if not set"
	@echo "    PPPRODNAME  - used to form name of installation directory,"
	@echo "                  OpenProofPower or ProofPowerPro if not set"
	@echo "    PPTARGETDIR - directory for source (RCS) release of opp tools"
	@echo "                  creates a clean directory called release if not set"
	@echo "    PPBASELINE  - symbolic name to use when getting files out of rcs"

######################################################################
#
#	Makefile Definitions
#
######################################################################

# Control for RCS checking out: expand keywords to values only
# (needed for document dates)
COFLAGS=-kv

TARGETS=$(shell echo $${PPTARGETS:-"pptex dev hol zed xpp"})
EXTRAS=$(shell echo $${PPEXTRAS:-})
BASELINE=$(shell echo $${PPBASELINE:-})
ifeq ($(TARGETS), all-commercial)
TARGETS=pptex dev xpp hol zed daz qcz
PRODNAME=$(shell echo $${PPPRODNAME:-"ProofPowerPro"})
TGZNAME=$(shell echo $${PPTGZNAME:-"ProofPowerPro"})
else
TGZNAME=$(shell echo $${PPTGZNAME:-"OpenProofPower"})
PRODNAME=$(shell echo $${PPPRODNAME:-"OpenProofPower"})
ifeq ($(TARGETS), all)
TARGETS=pptex dev xpp hol zed $(EXTRAS)
endif
endif
SHORTNAME=opp
VERSION=$(shell echo $${PPVER:-`cat version  2>/dev/null || echo XXX.YYY.ZZZ`})
LABEL=V$(shell echo $${PPVER:-`cat version  2>/dev/null || echo XXX_YYY_ZZZ`} | tr . _)
PRODUCT=$(PRODNAME)-$(VERSION)
TARBALL=$(TGZNAME)-$(VERSION)
CWD=$(shell pwd)
RELRELDIR=$(PRODUCT)
ABSRELDIR=$(CWD)/$(PRODUCT)
RELDIR=$(shell echo "$${PPTARGETDIR:-release}")
PRODUCTSRC=PPOpp-$(VERSION)

######################################################################
#
#	Text files and scripts to go in the release & release/src directories
#
######################################################################

RELFILES=README
RELFILES+=LICENSE
RELFILES+=CONTRIBUTORS
RELFILES+=CHANGES
RELFILES+=configure
RELFILES+=distclean

RELSRCFILES=install.mkf
RELSRCFILES+=index.html.src
RELSRCFILES+=lemma1.gif
RELSRCFILES+=newpplogo.gif

######################################################################
#
#	Making the README file
#
######################################################################

README: README.$(SHORTNAME).src
	sed -e '/$$PPVER/s/$$PPVER/'"$(VERSION)/g" \
			< README.$(SHORTNAME).src > README

REMAKE_README: README.$(SHORTNAME).src
	sed -e '/$$PPVER/s/$$PPVER/'"$(VERSION)/g" \
			< README.$(SHORTNAME).src > README

#####################################################################
#
#	Constructing the build directory (where most temporary files go)
# 	The target is called blddir rather than bld to ensure it gets
#	remade every time.
#
######################################################################

blddir:
	rm -rf bld
	mkdir bld
	( cd bld; ln -s ../RCS; )

#####################################################################
#
#	Constructing the release directory
#
######################################################################

release: REMAKE_README blddir $(RELFILES) $(RELSRCFILES)
	rm -rf "$(ABSRELDIR)"
	mkdir "$(ABSRELDIR)"
	for f in $(TARGETS); \
	do (	cd bld; \
		if [ "$(BASELINE)" != "" ]; \
		then co -r$(BASELINE) -kv `$(MAKE) -s -f $$f.mkf packinglist`; \
		fi; \
		PPTARGETDIR="$(ABSRELDIR)" $(MAKE) -s -f $$f.mkf srcrel; ); \
	done
	cp $(RELFILES) "$(ABSRELDIR)"
	cp $(RELSRCFILES) "$(ABSRELDIR)"/src
	chmod -R a-w "$(ABSRELDIR)"
	chmod -R g-w "$(ABSRELDIR)"
	chmod -R u+w "$(ABSRELDIR)"

#####################################################################
#
#	Building the configure script (done every time)
#
######################################################################

configure: rebuildconfigure

rebuildconfigure:
	if [ "$(BASELINE)" != "" ]; \
	then co -r$(BASELINE) -kv -p configure.sh; \
	else co -kv -p configure.sh; \
	fi > configure
	chmod a+x configure

#####################################################################
#
#	Labelling the RCS files
#
######################################################################

label: blddir
	cd bld; \
	for f in $(TARGETS); \
	do	rcs -N$(LABEL): `$(MAKE) -s -f $$f.mkf packinglist`; \
	done
	

#####################################################################
#
#	Constructing the gzipped tar archive
#
######################################################################

dist	: release
	tar cvf $(TARBALL).tar "$(RELRELDIR)"
	gzip $(TARBALL).tar && \
	mv $(TARBALL).tar.gz $(TARBALL).tgz


######################################################################
#
#	Source (RCS) release of the opp bits and pieces
#
######################################################################

PACKINGLIST = opp.mkf
PACKINGLIST += CHANGES
PACKINGLIST += CONTRIBUTORS
PACKINGLIST += LICENSE
PACKINGLIST += README.opp.src
PACKINGLIST += configure.sh
PACKINGLIST += distclean.sh
PACKINGLIST += index.html.src
PACKINGLIST += install.mkf
PACKINGLIST += lemma1.gif
PACKINGLIST += newpplogo.gif

# useful target to print out the names of all the files in the source release

packinglist:
	@echo $(PACKINGLIST)

reldir:
	if [ "$${PPTARGETDIR:-}" = "" ]; \
	then \
		rm -rf "$(RELDIR)"; \
	fi
	[ -d   "$(RELDIR)" ] || mkdir "$(RELDIR)"
	
srcdir:	reldir
	[ -d   "$(RELDIR)"/src ] || mkdir "$(RELDIR)"/src

rcsrel:	srcdir
	[ -d   "$(RELDIR)"/src/RCS ] || mkdir "$(RELDIR)"/src/RCS
	@for f in $(PACKINGLIST); \
	do \
		cp RCS/$$f,v "$(RELDIR)"/src/RCS/$$f,v; \
	done
	chmod -R a-w "$(RELDIR)"
	chmod -R g-w "$(RELDIR)"
	chmod -R u+w "$(RELDIR)"

src:	rcsrel
	cd "$(RELDIR)" && tar cvf "$(CWD)"/$(PRODUCTSRC).src.tar ./*
	cd "$(CWD)" && gzip $(PRODUCTSRC).src.tar && \
	mv $(PRODUCTSRC).src.tar.gz $(PRODUCTSRC).src.tgz

######################################################################
#
#	Tidying Up
#
######################################################################

clean:
	rm -rf bld $(RELRELDIR) $(RELFILES)
	rcsclean

