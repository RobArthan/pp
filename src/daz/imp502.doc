% imp502.doc   %Z% $Date$ $Revision$ $RCSfile$
=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{DAZ PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Implementation: Compliance Notation Abstract Syntax}  %% Mandatory field
\TPPref{ISS/HAT/DAZ/IMP502}  %% Mandatory field
\def\SCCSversion{$Revision$%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$%
}}
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{D.J.~King & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{D.J.~King & DAZ Team Leader}
\TPPabstract{
This document contains the implementation for the SPARK paragraph processor.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
	Library}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}

\item[Issue \SCCSversion, \FormatDate{$Date$%
} ] Initial Draft.

\end{description}
\subsection{Changes Forecast}
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document contains the implementation for the parser for
HOL/Z.
The detailed design for this material is in \cite{ISS/HAT/DAZ/DTD502}.
\subsection{Introduction}
\subsection{Purpose and Background}
\subsection{Algorithms}
\subsection{Dependencies}
\subsection{Known Deficencies}
\subsection{Possible Enhancements}
=TEX
\section{PREAMBLE}
=SML
structure €CNTypes› = struct
=TEX

\section{LEXIS}
The following data type represents the lexical classes which are the
terminals of the grammar:
$SpecificationStatement$ is not a terminal and the syntax of a specification statement is part of the grammar. The Z predicates for pre- and post-condition are terminals and are captured by the $Z$ type constructor. Other terminals required are:
=SML
datatype €SPARK_LEX_CLASS›
			=	€AbstractExpression›
			|	€Abs›
			|	€Ampersand›
			|	€And›
			|	€Array›
			|	€At›
			|	€Bar›
			|	€BBody›
			|	€Becomes›
			|	€Begin›
			|	€Case›
			|	€CharacterLiteral›
			|	€Colon›
			|	€Comma›
			|	€CompLabel›
			|	€Constant›
			|	€Con›
			|	€Crd›
			|	€DecLabel›
			|	€Delta›
			|	€Digits›
			|	€Div›
			|	€DotDot›
			|	€Dot›
			|	€Else›
			|	€ElsIf›
			|	€End›
			|	€Equals›
			|	€Exit›
			|	€FatDot›
			|	€For›
			|	€FunctionName›
			|	€Function›
			|	€GoesTo›
			|	€GreaterEquals›
			|	€GreaterThan›
			|	€Identifier›
			|	€If›
			|	€In›
			|	€Is›
			|	€KSlot›
			|	€LessEquals›
			|	€LessGreat›
			|	€LessThan›
			|	€Limited›
			|	€Loop›
			|	€Minus›
			|	€Mod›
			|	€Na›
			|	€NotEquals›
			|	€Not›
			|	€Null›
			|	€NumericLiteral›
			|	€Of›
			|	€Ord›
			|	€Or›
			|	€Others›
			|	€Out›
			|	€Package›
			|	€Plus›
			|	€PPartLabel›
			|	€Prime›
			|	€Private›
			|	€ProcedureName›
			|	€Procedure›
			|	€Record›
			|	€RefinedBy›
			|	€Rem›
			|	€Renames›
			|	€ReplacedBy›
			|	€Return›
			|	€Reverse›
			|	€RRange›
			|	€Semi›
			|	€Separate›
			|	€SpecLabel›
			|	€StarStar›
			|	€Star›
			|	€StmtLabel›
			|	€StringLiteral›
			|	€SubType›
			|	€Then›
			|	€TypeMark›
			|	€Type›
			|	€Till›
			|	€Use›
			|	€VPartLabel›
			|	€WhenOthers›
			|	€When›
			|	€While›
			|	€With›
			|	€Xor›
			|	€ZDecl›
			|	€Eos›
			|	€Z›
			|	€GrkDelta›
			|	€LSqBrack›
			|	€RSqBrack›
			|	€LBrace›
			|	€RBrace›
			|	€PrimedIdentifier›;
=TEX
=SML
datatype €SPARK_TOKEN›	=	€SPARKZ› of ZLex.Z_TOKEN list
			|	€SPARKText› of string
			|	€SPARKString› of string
			|	€SPARKKSlot› of Lex.INPUT list
			|	€SPARKEos›;
=TEX
=SML
type €LEX_ITEM› = SPARK_LEX_CLASS * SPARK_TOKEN;
=TEX


\section{EPILOGUE}
=SML
end (* of structure CNTypes *);
=TEX
\small
\twocolumn[\section{INDEX}]
\printindex
\end{document}
