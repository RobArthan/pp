% %Z% $Date$ $Revision$ $RCSfile$ 
=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{DAZ PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{SHOLIS VCs Proof Scripts}  %% Mandatory field
\def\TPPheadtitle{SHOLIS VCs Proof Scripts}
\TPPref{ISS/HAT/DAZ/WRK512}  %% Mandatory field
\def\SCCSversion{$Revision$
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$%
}}  %% Mandatory field (with sensible default)
\TPPstatus{Informal}
%\TPPstatus{Informal}
\TPPtype{Technical}
%\TPPkeywords{HOL}
\TPPauthor{G.M.~Prout & HAT Team\\R.D.~Arthan & HAT Team}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.~Arthan & WIN01}
\TPPabstract{% Proof Scripts for Strand 1 of Proof Work Phase 1 (see ISS/HAT/DAZ/PLN010).
}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
      Library}}

%\TPPclass{CLASSIFICATION}
\newfont{\icllogo}{icllogo50}
\def\TPPheadlhs{$\vcenter{\halign{##\cr\icllogo ICL\cr}}$}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\pagebreak
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu,daz}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}
\item[Issue 1.1
] Initial Draft.
\end{description}

\subsection{Changes Forecast}

\pagebreak
\section{GENERAL}

\subsection{Scope}


\subsection{Introduction}

\newpage
\section{THE LITERATE SCRIPTS}


\subsection{Setting up of the environment}

Set up flags so the compliance tool works correctly .

=SML
set_flags [("z_type_check_only", false),("z_use_axioms", true)];
=TEX



\subsection{Useful Lemmas}
Lemmas about override and BOOLEAN:
=SML
set_pc"z_library_ext";
set_goal([], Ò[X, Y](µf : X ≠ Y; x:U; y : U∑(f ´ {x Ì y})x = y)Æ);
a(REPEAT strip_tac);
a(z_app_eq_tac);
a(REPEAT strip_tac);
a(z_spec_nth_asm_tac 2 ÒyÆ);
val €z_´_lemma1› = pop_thm();
=TEX
=SML
set_pc"z_library";
set_goal([], Ò[X, Y](µf : X ﬂ Y; x:dom f;y:U ∑
	dom(f ´ {x Ì y}) = dom f)Æ);
a(PC_T1 "z_library_ext" REPEAT strip_tac);
(* *** Goal "1" *** *)
a(z_∂_tacÒy''Æ);
a(asm_rewrite_tac[]);
(* *** Goal "2" *** *)
a(z_∂_tacÒy'Æ);
a(asm_rewrite_tac[]);
(* *** Goal "3" *** *)
a(cases_tacÒx1 = xÆ);
(* *** Goal "3.1" *** *)
a(z_∂_tacÒyÆ);
a(DROP_NTH_ASM_T 2 ante_tac THEN asm_rewrite_tac[] THEN 
	POP_ASM_T discard_tac THEN ¥_tac);
a(PC_T1"z_library_ext"REPEAT strip_tac);
(* *** Goal "3.2" *** *)
a(z_∂_tacÒy''Æ);
a(PC_T1"z_library_ext"REPEAT strip_tac);
val €z_´_lemma2› = pop_thm();
=TEX
=SML
set_pc"z_library";
set_goal([], Ò[X, Y](µf : X ≠ Y; x:X;y:Y ∑
	f ´ {x Ì y} ç X ≠ Y)Æ);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 3 ante_tac THEN rewrite_tac[z_≠_thm]);
a(¥_T strip_asm_tac);
a(lemma_tacÒdom (f ´ {x Ì y}) = XÆ);
(* *** Goal "1" *** *)
a(all_var_elim_asm_tac1);
a(ALL_ASM_FC_T rewrite_tac[z_´_lemma2]);
(* *** Goal "2" *** *)
a(asm_rewrite_tac[]);
a(all_asm_fc_tac[z_ﬂ_thm]);
a(rewrite_tac[z_ﬂ_thm]);
a(REPEAT strip_tac);
(* *** Goal "2.1" *** *)
a(PC_T1"z_library_ext"asm_prove_tac[]);
(* *** Goal "2.2" *** *)
a(cases_tacÒx'=xÆ);
(* *** Goal "2.2.1" *** *)
a(all_var_elim_asm_tac1);
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac 
	THEN PC_T1"z_library_ext"REPEAT strip_tac);
(* *** Goal "2.2.1.1" *** *)
a(all_asm_fc_tac[z_ﬂ_thm]);
(* *** Goal "2.2.1.2" *** *)
a(z_spec_nth_asm_tac 3 ÒyÆ);
(* *** Goal "2.2.1.3" *** *)
a(z_spec_nth_asm_tac 2 ÒyÆ);
(* *** Goal "2.2.1.4" *** *)
a(asm_rewrite_tac[]);
(* *** Goal "2.2.2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac THEN  DROP_NTH_ASM_T 2 ante_tac THEN
	 PC_T1"z_library_ext"REPEAT strip_tac);
a(all_asm_fc_tac[z_ﬂ_thm]);
val €z_´_lemma3› = pop_thm();
=TEX
=SML
set_pc"z_library";
set_goal([], Ò[X, Y, Z](µf : X ≠ Y ≠ Z; x:X;y:Y;z:Z∑
	(f ´ {x Ì f x ´ {y Ì z}})x y= z)Æ);
a(REPEAT strip_tac);
a(all_asm_fc_tac[z_fun_ç_clauses]);
a(ALL_ASM_FC_T rewrite_tac[z_´_lemma1]);
val €z_´_lemma4› = pop_thm();
=TEX
=SML
set_pc"z_library";
set_goal([], Ò[X, Y, Z](µf : X ≠ Y ≠ Z; x:X;y:Y;z:Z∑
	f ´ {x Ì f x ´ {y Ì z}} ç X ≠ Y ≠ Z)Æ);
a(REPEAT strip_tac);
a(lemma_tacÒf x ´ {y Ì z} ç Y ≠ ZÆ);
(* *** Goal "1" *** *)
a(all_asm_fc_tac[z_fun_ç_clauses]);
a(ALL_ASM_FC_T rewrite_tac[z_´_lemma3]);
(* *** Goal "2" *** *)
a(ALL_ASM_FC_T rewrite_tac[z_´_lemma3]);
val €z_´_lemma5› = pop_thm();
=TEX
=SML
set_goal([], ¨µX Y Z V∑ÒV = X ≠ Y ≠ Z ¥ (µf : V; x:X;y:Y;z:Z∑
	f ´ {x Ì f x ´ {y Ì z}} ç V)ÆÆ);
a(REPEAT strip_tac);
a(all_var_elim_asm_tac1);
a(all_asm_fc_tac[z_´_lemma5]);
val €z_´_lemma6› = pop_thm();
=TEX
=SML
set_pc"z_library";
set_goal([], Ò[X, Y](µf : X ≠ Y; x2:X;x1:U; y : U | ≥x2=x1 ∑
	(f ´ {x1 Ì y})x2 = f x2)Æ);
a(REPEAT strip_tac);
a(z_app_eq_tac);
a(REPEAT strip_tac);
(* *** Goal "1" *** *)
a(lemma_tacÒ(x2, f_a) ç fÆ THEN1 PC_T1 "z_library_ext" asm_prove_tac[]);
a(ALL_ASM_FC_T rewrite_tac [z_fun_app_clauses]);
(* *** Goal "2" *** *)
a(all_asm_fc_tac[z_≠_app_thm]);
a(PC_T1 "z_library_ext" asm_prove_tac[]);
val €z_´_lemma7›  = pop_thm();
=TEX
=SML
set_pc"z_library";
set_goal([], Ò[X, Y, Z](µf : X ≠ Y ≠ Z; x:X;y2:Y;y1:U;z:Z| ≥y2=y1∑
	(f ´ {x Ì f x ´ {y1 Ì z}})x y2= f x y2)Æ);
a(REPEAT strip_tac);
a(all_asm_fc_tac[z_fun_ç_clauses]);
a(ALL_ASM_FC_T rewrite_tac[z_´_lemma7,z_´_lemma1]);
val €z_´_lemma8› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ X:BOOLEAN∑not X = Boolean true ¥ X  = Boolean falseÆ );
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_var_elim_asm_tac1);
a(POP_ASM_T (strip_asm_tac o rewrite_rule[]));
val €z_bool_lemma1› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ X:BOOLEAN∑not X = Boolean false ¥ X  = Boolean trueÆ );
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_var_elim_asm_tac1);
a(POP_ASM_T (strip_asm_tac o rewrite_rule[]));
val €z_bool_lemma2› = pop_thm();
=TEX
Lemmas about mod and intmod:
=SML
set_pc"cn";
set_goal([],Òµ i : Ó; j : Ó ∑ j > i ¥ i mod j = iÆ);
a(REPEAT strip_tac);
a(ante_tac (z_µ_elimÒ(i ¶ i,j ¶ j,d ¶ 0,r ¶ i)Æ z_div_mod_unique_thm));
a(all_asm_fc_tac[z_abs_thm]);
a(asm_rewrite_tac[]);
a(PC_T1"z_lin_arith"asm_prove_tac[]);
val €z_mod_lemma› = pop_thm();
=TEX
=SML
set_pc"z_library";
set_goal([],Òµ i : Ó; j : Ó ∑ 0 º i * jÆ); 
a(REPEAT strip_tac);
a(z_º_induction_tacÒiÆ);
(* *** Goal "1" *** *)
a(rewrite_tac[]);
(* *** Goal "2" *** *)
a(rewrite_tac[z_times_plus_distrib_thm]);
a(LEMMA_TÒj º i * j + jÆasm_tac THEN1 asm_rewrite_tac[]);
a(all_asm_fc_tac[z_º_trans_thm]);
val €z_º_times_zero_lemma› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([],Òµ i : Ó; j : Ó \ {0} ∑ i intdiv j = i div j ± i intmod j = i mod j
	± i rem j = i mod jÆ);
a(z_µ_tac THEN ¥_T strip_asm_tac);
a(all_asm_fc_tac[z_abs_thm]);
a(lemma_tacÒ0 º i * jÆ THEN1 all_asm_fc_tac[z_º_times_zero_lemma]);
a(strip_asm_tac(z_get_specÒ(_ intdiv _)Æ));
a(POP_ASM_T (ante_tac o z_µ_elimÒ(x ¶ i,y ¶ j)Æ));
a(asm_rewrite_tac[]);
a(¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(asm_rewrite_tac[]);
a(ante_tac 
 (z_µ_elimÒ(i ¶ i,j ¶ j,d ¶ i div j,r ¶ i mod j)Æ  z_div_mod_unique_thm));
a(asm_rewrite_tac[]);
a(¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(GET_NTH_ASM_T 3 ante_tac);
a(PC_T1 "z_lin_arith" prove_tac[]);
val €z_intdiv_div_lemma› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([],Òµ i : Ó; j : Ó ∑ j > i ¥ i intmod j = iÆ);
a(REPEAT strip_tac);
a(ante_tac(z_µ_elimÒ(i ¶ i,j ¶ j)Æz_mod_lemma));
a(asm_rewrite_tac[]);
a ¥_tac;
a(ante_tac(rewrite_rule[](z_µ_elimÒ(i ¶ i,j ¶ j)Æz_intdiv_div_lemma)));
a(asm_rewrite_tac[]);
a(LEMMA_TÒ≥ j = 0Æ rewrite_thm_tac);
(* *** Goal "1" *** *)
a(PC_T1"z_lin_arith"asm_prove_tac[]);
(* *** Goal "2" *** *)
a(REPEAT strip_tac);
val €z_intmod_lemma› = pop_thm();
=TEX
Lemmas about singleton sets w.r.t. functions:
=SML
set_pc"cn";
set_goal([], Òµx:â1 U; y:U; z:U ∑ x ∏ {y} ç x ≠ z § y ç zÆ);
a(PC_T1"z_library_ext" prove_tac[]);
val €∏_singleton_fun_lemma› = pop_thm();
=TEX
=SML
set_goal([], Òµx: U; y:U; z:U ∑ {x} ∏ {y} ç {x} ≠ z § y ç zÆ);
a(PC_T1"z_library_ext" prove_tac[]);
val €singleton_∏_fun_lemma› = pop_thm();
=TEX
=SML
set_goal([], Òµx:U; y:U; z:U | z ç x ∑ (x ∏ {y}) z = yÆ);
a(REPEAT strip_tac THEN z_app_eq_tac);
a(PC_T1"z_library_ext" asm_prove_tac[]);
val €∏_singleton_app_lemma› = pop_thm();
=TEX
=SML
set_goal([], Òµx: U; y:U ∑ ({x} ∏ {y}) x = yÆ);
a(REPEAT strip_tac THEN z_app_eq_tac);
a(PC_T1"z_library_ext" prove_tac[]);
val €singleton_∏_app_lemma› = pop_thm();
=TEX
\pagebreak
\section{VC PROOFS} 
\subsection{Subsidiary Lemmas}
=SML
set_pc"cn";
set_goal([], Òµ s:ALARMSTATE; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑
	(s d a).RAISED ç BOOLEANÆ);
a(rewrite_tac[z_get_specÒALARMSTATEÆ,z_get_specÒALARMSTATE1Æ]); 
a(REPEAT strip_tac);
a(all_asm_fc_tac[z_≠_app_thm]);
a(all_asm_fc_tac[z_≠_app_thm]);
a(DROP_NTH_ASM_T 2 ante_tac);
a(rewrite_tac[z_get_specÒALARMDATAÆ]);
a(REPEAT strip_tac);
val €vc501_lemma› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ t:TIMERSTATE; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑ 
		(t d a).ACTIVE ç BOOLEANÆ);
a(rewrite_tac[z_get_specÒTIMERSTATEÆ,z_get_specÒTIMERSTATE1Æ]); 
a(REPEAT strip_tac);
a(all_asm_fc_tac[z_≠_app_thm]);
a(all_asm_fc_tac[z_≠_app_thm]);
a(DROP_NTH_ASM_T 2 ante_tac);
a(rewrite_tac[z_get_specÒTIMERDATAÆ]);
a(REPEAT strip_tac);
val €vc807_lemma1› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ s:ALARMSTATE ; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑ 
	((s d a).REOCCURS = RESET ¥ ≥ (s d a).REOCCURS = NORESET)Æ);
a(REPEAT strip_tac);
a(asm_rewrite_tac[z_get_specÒRESETÆ,z_get_specÒNORESETÆ]);
val €vc807_lemma2› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ s:ALARMSTATE ; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑ 
	(≥(s d a).REOCCURS = RESET ¥  (s d a).REOCCURS = NORESET)Æ);
a(rewrite_tac[z_get_specÒALARMSTATEÆ,z_get_specÒALARMSTATE1Æ]); 
a(REPEAT strip_tac);
a(all_asm_fc_tac[z_≠_app_thm]);
a(all_asm_fc_tac[z_≠_app_thm]);
a(DROP_NTH_ASM_T 5 ante_tac);
a(DROP_NTH_ASM_T 2 ante_tac);
a(rewrite_tac[z_get_specÒALARMDATAÆ,z_get_specÒALARMRESETÆ,z_get_specÒRESETÆ,
	z_get_specÒNORESETÆ]);
a(PC_T1"z_lin_arith"prove_tac[]);
val €vc807_lemma3› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ s:ALARMSTATE ; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑ 
	(s d a).LEVEL = 0 ≤ (s d a).LEVEL = 1 ≤ (s d a).LEVEL = 2Æ);
a(rewrite_tac[z_get_specÒALARMSTATEÆ,z_get_specÒALARMSTATE1Æ]); 
a(z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(all_asm_fc_tac[z_≠_app_thm]);
a(all_asm_fc_tac[z_≠_app_thm]);
a(DROP_NTH_ASM_T 2 ante_tac);
a(rewrite_tac[z_get_specÒALARMDATAÆ,z_get_specÒALARMLEVELÆ,
	z_get_specÒAUDIOVISUALFLASHÆ,z_get_specÒVISUALINVERSEÆ]);
a(¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(DROP_NTH_ASM_T 3 ante_tac THEN DROP_NTH_ASM_T 2 ante_tac);
a(DROP_ASMS_T discard_tac);
a(PC_T1"z_lin_arith"prove_tac[]);
val €vc807_lemma4› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Ò(LEVEL ¶ AUDIOVISUALFLASH,RAISED ¶ Boolean true,
	REOCCURS ¶ NORESET) ç  ALARMDATAÆ);
a(rewrite_tac[z_get_specÒALARMDATAÆ,z_get_specÒALARMLEVELÆ,
	z_get_specÒAUDIOVISUALFLASHÆ	,z_get_specÒVISUALINVERSEÆ,
	z_get_specÒNORESETÆ,z_get_specÒALARMRESETÆ,z_get_specÒRESETÆ]);
val €vc807_lemma5› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Ò(LEVEL ¶ VISUALFLASH,RAISED ¶ Boolean true,
	REOCCURS ¶ NORESET) ç  ALARMDATAÆ);
a(rewrite_tac[z_get_specÒALARMDATAÆ,z_get_specÒALARMLEVELÆ,
	z_get_specÒAUDIOVISUALFLASHÆ	,
	z_get_specÒVISUALFLASHÆ,z_get_specÒVISUALINVERSEÆ,
	z_get_specÒNORESETÆ,z_get_specÒALARMRESETÆ,z_get_specÒRESETÆ]);
val €vc807_lemma6› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ t:TIMERSTATE; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑ 
		(t d a).TIMEOUT ç BASICTYPESoTIMEÆ);
a(rewrite_tac[z_get_specÒTIMERSTATEÆ,z_get_specÒTIMERSTATE1Æ]); 
a(REPEAT strip_tac);
a(all_asm_fc_tac[z_≠_app_thm]);
a(all_asm_fc_tac[z_≠_app_thm]);
a(DROP_NTH_ASM_T 2 ante_tac);
a(rewrite_tac[z_get_specÒTIMERDATAÆ]);
a(REPEAT strip_tac);
val €vc901_lemma› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ s:ALARMSTATE ; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑
	(LEVEL ¶ (s d a).LEVEL,RAISED ¶ (s d a).RAISED,
	REOCCURS ¶ RESET) ç  ALARMDATAÆ);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 3 (asm_tac o rewrite_rule
	[z_get_specÒALARMSTATEÆ,z_get_specÒALARMSTATE1Æ])); 
a(all_asm_fc_tac[z_≠_app_thm]);
a(all_asm_fc_tac[z_≠_app_thm]);
a(DROP_NTH_ASM_T 2 ante_tac);
a(rewrite_tac[z_get_specÒALARMDATAÆ,z_get_specÒALARMLEVELÆ,
	z_get_specÒAUDIOVISUALFLASHÆ	,
	z_get_specÒVISUALFLASHÆ,z_get_specÒVISUALINVERSEÆ,
	z_get_specÒNORESETÆ,z_get_specÒALARMRESETÆ,z_get_specÒRESETÆ]);
a(REPEAT strip_tac);
val €vc902_lemma1› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ t:TIMERSTATE; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑ 
		(ACTIVE ¶ Boolean false,TIMEOUT ¶ (t d a).TIMEOUT) ç TIMERDATAÆ);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 3(asm_tac o rewrite_rule
	[z_get_specÒTIMERSTATEÆ,z_get_specÒTIMERSTATE1Æ])); 
a(all_asm_fc_tac[z_≠_app_thm]);
a(all_asm_fc_tac[z_≠_app_thm]);
a(DROP_NTH_ASM_T 2 ante_tac);
a(rewrite_tac[z_get_specÒTIMERDATAÆ,z_get_specÒALARMLEVELÆ,
	z_get_specÒAUDIOVISUALFLASHÆ	,
	z_get_specÒVISUALFLASHÆ,z_get_specÒVISUALINVERSEÆ,
	z_get_specÒNORESETÆ,z_get_specÒALARMRESETÆ,z_get_specÒRESETÆ]);
a(REPEAT strip_tac);
val €vc902_lemma2› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµy:U; z:U ∑ 0 .. 2 ∏ {y} ç 0 .. 2 ≠ z § y ç zÆ);
a(lemma_tacÒ0 .. 2 ç â1 UÆ THEN1 
	(PC_T1 "z_library_ext" rewrite_tac []
	THEN REPEAT strip_tac THEN z_∂_tacÒ0Æ THEN rewrite_tac[]));
a(REPEAT strip_tac THEN ALL_FC_T1 fc_canon1
	(MAP_EVERY strip_asm_tac)[∏_singleton_fun_lemma]);
val €vc1501_1_lemma› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ s:ALARMSTATE ; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑
	(LEVEL ¶ (s d a).LEVEL,RAISED ¶ Boolean false,
	REOCCURS ¶ (s d a).REOCCURS) ç  ALARMDATAÆ);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 3 (asm_tac o rewrite_rule
	[z_get_specÒALARMSTATEÆ,z_get_specÒALARMSTATE1Æ])); 
a(all_asm_fc_tac[z_≠_app_thm]);
a(all_asm_fc_tac[z_≠_app_thm]);
a(DROP_NTH_ASM_T 2 ante_tac);
a(rewrite_tac[z_get_specÒALARMDATAÆ,z_get_specÒALARMLEVELÆ,
	z_get_specÒAUDIOVISUALFLASHÆ	,
	z_get_specÒVISUALFLASHÆ,z_get_specÒVISUALINVERSEÆ,
	z_get_specÒNORESETÆ,z_get_specÒALARMRESETÆ,z_get_specÒRESETÆ]);
a(REPEAT strip_tac);
val €vc1101_lemma› = pop_thm();
=TEX
=SML
set_pc"cn";
set_goal([], Òµ s:ALARMSTATE ; d:BASICTYPESoDISPLAYPOSITION; a:ALARMTYPE∑
	(LEVEL ¶ VISUALINVERSE,RAISED ¶ (s d a).RAISED,
	REOCCURS ¶ (s d a).REOCCURS) ç  ALARMDATAÆ);
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 3 (asm_tac o rewrite_rule
	[z_get_specÒALARMSTATEÆ,z_get_specÒALARMSTATE1Æ])); 
a(all_asm_fc_tac[z_≠_app_thm]);
a(all_asm_fc_tac[z_≠_app_thm]);
a(DROP_NTH_ASM_T 2 ante_tac);
a(rewrite_tac[z_get_specÒALARMDATAÆ,z_get_specÒALARMLEVELÆ,
	z_get_specÒAUDIOVISUALFLASHÆ	,z_get_specÒVISUALINVERSEÆ]);
a(REPEAT strip_tac);
val €vc120705_lemma› = pop_thm();
=TEX
\subsection{Conjecture Proofs}
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc501_1");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_asm_fc_tac[vc501_lemma]);
a(all_asm_fc_tac[z_bool_lemma1]);
a(all_asm_fc_tac [rewrite_rule[] (z_get_specÒDisplayAttributeÆ)]);
a(asm_rewrite_tac[]);
val €vc501_1› = save_pop_thm"vc501_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc501_2");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_asm_fc_tac[vc501_lemma]);
a(all_asm_fc_tac[z_bool_lemma2]);
a(all_asm_fc_tac [rewrite_rule[] (z_get_specÒDisplayAttributeÆ)]);
a(asm_rewrite_tac[]);
val €vc501_2› = save_pop_thm"vc501_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc501_3");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_asm_fc_tac[vc501_lemma]);
a(all_asm_fc_tac[z_bool_lemma2]);
a(all_asm_fc_tac [rewrite_rule[] (z_get_specÒDisplayAttributeÆ)]);
a(asm_rewrite_tac[]);
val €vc501_3› = save_pop_thm"vc501_3";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc701_1");
a(rewrite_tac[] THEN REPEAT strip_tac);
(* *** Goal "1" *** *)
a(all_asm_fc_tac[]);
(* *** Goal "2" *** *)
a(PC_T1 "z_lin_arith" asm_prove_tac[]);
val €vc701_1› = save_pop_thm"vc701_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc702_1");
a(rewrite_tac[] THEN z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(±_tac);
(* *** Goal "1" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN taut_tac);
(* *** Goal "2" *** *)
a(z_∂_tacÒATYPEÆ);
a(GET_NTH_ASM_T 4 ante_tac THEN rewrite_tac[z_get_specÒALARMTYPEÆ,
	z_get_specÒALARMTYPEvFIRSTÆ,
	z_get_specÒROLLALARMÆ]);
a(REPEAT strip_tac);
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒAudioVisualFlashAlarmsÆ]);
a(all_asm_fc_tac[vc501_lemma,vc807_lemma1]);
a(POP_ASM_T (ante_tac o rewrite_rule[z_get_specÒTimerInvariantÆ]));
a(DROP_NTH_ASM_T 5 ante_tac 
	THEN DROP_NTH_ASM_T 2(strip_asm_tac o rewrite_rule[])
	THEN asm_rewrite_tac[]);
a(DROP_NTH_ASM_T 2(ante_tac o rewrite_rule[]));
a(REPEAT strip_tac);
val €vc702_1› = save_pop_thm"vc702_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc702_2");
a(rewrite_tac[] THEN z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(±_tac);
(* *** Goal "1" *** *)
a(DROP_NTH_ASM_T 3 ante_tac THEN taut_tac);
(* *** Goal "2" *** *)
a(DROP_NTH_ASM_T 2 ante_tac);
a(cases_tacÒAUDIOVFEXISTS = Boolean trueÆTHEN asm_rewrite_tac[]);
(* *** Goal "2.1" *** *)
a(REPEAT strip_tac);
a(z_∂_tacÒIÆTHEN asm_rewrite_tac[]);
a(PC_T1 "z_lin_arith" asm_prove_tac[]);
(* *** Goal "2.2" *** *)
a(REPEAT strip_tac);
a(z_spec_nth_asm_tac 3 ÒIÆ);
(* *** Goal "2.2.1" *** *)
a(PC_T1 "z_lin_arith" asm_prove_tac[]);
(* *** Goal "2.2.2" *** *)
a(lemma_tacÒI = ATYPEÆ THEN1 PC_T1 "z_lin_arith" asm_prove_tac[]);
a(all_var_elim_asm_tac1);
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒAudioVisualFlashAlarmsÆ]);
a(all_asm_fc_tac[vc501_lemma,vc807_lemma1]);
a(POP_ASM_T (ante_tac o rewrite_rule[z_get_specÒTimerInvariantÆ]));
a(DROP_NTH_ASM_T 6 ante_tac 
	THEN DROP_NTH_ASM_T 2(strip_asm_tac o rewrite_rule[])
	THEN asm_rewrite_tac[]);
a(DROP_NTH_ASM_T 2(ante_tac o rewrite_rule[]));
a(REPEAT strip_tac);
val €vc702_2› = save_pop_thm"vc702_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc807_1");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_asm_fc_tac[vc501_lemma]);
a(all_asm_fc_tac[z_bool_lemma1]);
a(asm_tac vc807_lemma5);
a(asm_tac (rewrite_rule[z_get_specÒALARMSTATE1Æ](z_get_specÒALARMSTATEÆ)));
a(all_asm_fc_tac[z_´_lemma6]);
a(GET_NTH_ASM_T 10 ante_tac THEN DROP_NTH_ASM_T 2 rewrite_thm_tac);
a ¥_tac;
a(PC_T1 "z_library_ext"
 	asm_rewrite_tac[z_get_specÒRaiseAlarmÆ,z_get_specÒAlarmChangeÆ,
	z_get_specÒRaiseNewAlarmÆ,z_get_specÒRaiseWithinTimeoutAlarmÆ,
	z_get_specÒRaiseAudioVisualFlashAlarmÆ,z_get_specÒRaiseTimedOutAlarmÆ]);
a(REPEAT ±_tac);
(* *** Goal "1" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒAudioVisualFlashAlarmsÆ]);
a(all_asm_fc_tac[z_´_lemma4]);
a(POP_ASM_T rewrite_thm_tac);
a(DROP_NTH_ASM_T 7 (ante_tac o
	 rewrite_rule[z_get_specÒTimerInvariantÆ]));
a(asm_rewrite_tac[]);
a(all_asm_fc_tac[vc807_lemma1]);
a(POP_ASM_T (ante_tac o rewrite_rule[]));
a(REPEAT strip_tac);
(* *** Goal "2" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒWithinTimeoutAlarmsÆ]);
a(asm_rewrite_tac[]);
(* *** Goal "3" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒAudioVisualFlashAlarmsÆ]);
a(asm_rewrite_tac[]);
(* *** Goal "4" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒTimedOutAlarmsÆ]);
a(asm_rewrite_tac[]);
val €vc807_1› = save_pop_thm"vc807_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc807_2");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_asm_fc_tac[vc501_lemma]);
a(all_asm_fc_tac[z_bool_lemma2]);
a(all_asm_fc_tac[vc807_lemma2]);
a(asm_tac vc807_lemma5);
a(asm_tac (rewrite_rule[z_get_specÒALARMSTATE1Æ](z_get_specÒALARMSTATEÆ)));
a(all_asm_fc_tac[z_´_lemma6]);
a(GET_NTH_ASM_T 12 ante_tac THEN DROP_NTH_ASM_T 2 rewrite_thm_tac);
a ¥_tac;
a(PC_T1 "z_library_ext"
 	asm_rewrite_tac[z_get_specÒRaiseAlarmÆ,z_get_specÒAlarmChangeÆ,
	z_get_specÒRaiseNewAlarmÆ,z_get_specÒRaiseWithinTimeoutAlarmÆ,
	z_get_specÒRaiseAudioVisualFlashAlarmÆ,z_get_specÒRaiseTimedOutAlarmÆ]);
a(REPEAT ±_tac);
(* *** Goal "1" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒInactiveAlarmsÆ]);
a(asm_rewrite_tac[]);
(* *** Goal "2" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒWithinTimeoutAlarmsÆ]);
a(DROP_NTH_ASM_T 9 (ante_tac o
	 rewrite_rule[z_get_specÒTimerInvariantÆ]));
a(asm_rewrite_tac[]);
a(¥_T rewrite_thm_tac);
(* *** Goal "3" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒAudioVisualFlashAlarmsÆ]);
a(all_asm_fc_tac[z_´_lemma4]);
a(POP_ASM_T rewrite_thm_tac);
a(DROP_NTH_ASM_T 9 (ante_tac o
	 rewrite_rule[z_get_specÒTimerInvariantÆ]));
a(asm_rewrite_tac[]);
a(all_asm_fc_tac[vc807_lemma1]);
a(POP_ASM_T (ante_tac o rewrite_rule[]));
a(REPEAT strip_tac);
(* *** Goal "4" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒTimedOutAlarmsÆ,
	z_get_specÒAudioVisualFlashAlarmsÆ]);
a(all_asm_fc_tac[z_´_lemma4]);
a(asm_rewrite_tac[]);
val €vc807_2› = save_pop_thm"vc807_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc807_3");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_asm_fc_tac[vc501_lemma]);
a(all_asm_fc_tac[z_bool_lemma2]);
a(all_asm_fc_tac[vc807_lemma3]);
a(asm_tac vc807_lemma6);
a(asm_tac (rewrite_rule[z_get_specÒALARMSTATE1Æ](z_get_specÒALARMSTATEÆ)));
a(all_asm_fc_tac[z_´_lemma6]);
a(GET_NTH_ASM_T 13 ante_tac THEN DROP_NTH_ASM_T 2 rewrite_thm_tac);
a ¥_tac;
a(PC_T1 "z_library_ext"
 	asm_rewrite_tac[z_get_specÒRaiseAlarmÆ,z_get_specÒAlarmChangeÆ,
	z_get_specÒRaiseNewAlarmÆ,z_get_specÒRaiseWithinTimeoutAlarmÆ,
	z_get_specÒRaiseAudioVisualFlashAlarmÆ,z_get_specÒRaiseTimedOutAlarmÆ]);
a(REPEAT ±_tac);
(* *** Goal "1" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒInactiveAlarmsÆ]);
a(asm_rewrite_tac[]);
(* *** Goal "2" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒWithinTimeoutAlarmsÆ,
	z_get_specÒVisualFlashAlarmsÆ]);
a(all_asm_fc_tac[z_´_lemma4]);
a(asm_rewrite_tac[]);
(* *** Goal "3" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒAudioVisualFlashAlarmsÆ]);
a(asm_rewrite_tac[z_get_specÒVISUALINVERSEÆ,z_get_specÒAUDIOVISUALFLASHÆ]);
(* *** Goal "4" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒTimedOutAlarmsÆ]);
a(asm_rewrite_tac[]);	
val €vc807_3› = save_pop_thm"vc807_3";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc807_4");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_asm_fc_tac[vc501_lemma]);
a(all_asm_fc_tac[z_bool_lemma2]);
a(all_asm_fc_tac[vc807_lemma3]);
a(PC_T1 "z_library_ext"
 	asm_rewrite_tac[z_get_specÒRaiseAlarmÆ,z_get_specÒAlarmChangeÆ,
	z_get_specÒRaiseNewAlarmÆ,z_get_specÒRaiseWithinTimeoutAlarmÆ,
	z_get_specÒRaiseAudioVisualFlashAlarmÆ,
	z_get_specÒRaiseTimedOutAlarmÆ]);
a(REPEAT ±_tac);
(* *** Goal "1" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒInactiveAlarmsÆ]);
a(asm_rewrite_tac[]);
(* *** Goal "2" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒWithinTimeoutAlarmsÆ,
	z_get_specÒVisualFlashAlarmsÆ]);
a(DROP_NTH_ASM_T 7 (ante_tac o
	 rewrite_rule[z_get_specÒTimerInvariantÆ]));
a(asm_rewrite_tac[]);
a(DROP_NTH_ASM_T 4 ante_tac);
a(rewrite_tac[z_get_specÒVISUALFLASHÆ,z_get_specÒVISUALINVERSEÆ,
	z_get_specÒAUDIOVISUALFLASHÆ]);
a(REPEAT strip_tac THEN strip_asm_tac 
	(z_µ_elimÒ(s ¶ STATE,d ¶ DISPLAY,a ¶ ATYPE)Æ  vc807_lemma4));
(* *** Goal "3" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒTimedOutAlarmsÆ]);
a(asm_rewrite_tac[]);
val €vc807_4› = save_pop_thm"vc807_4";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc901_2");
a(z_µ_tac THEN PC_T1 "z_library_ext" rewrite_tac[z_get_specÒTimeoutAlarmÆ,
	z_get_specÒAlarmChangeÆ]);
a(¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(REPEAT strip_tac);
a(DROP_NTH_ASM_T 3 ante_tac THEN asm_rewrite_tac[]);
a(cases_tacÒ0 º CURRENTTIME + ~ (TIMERSâ0 DISPLAY ATYPE).TIMEOUTÆ);
(* *** Goal "1" *** *)
a(asm_rewrite_tac[]);
a(lemma_tacÒ(BASICTYPESoTIMEvLAST + 1) > 
	(CURRENTTIME + ~ (TIMERSâ0 DISPLAY ATYPE).TIMEOUT) ±
	0 º BASICTYPESoTIMEvLAST + 1 Æ);
(* *** Goal "1.1" *** *)
a(all_asm_fc_tac[vc901_lemma]);
a(POP_ASM_T discard_tac);
a(DROP_NTH_ASM_T 5 ante_tac THEN POP_ASM_T ante_tac THEN POP_ASM_T 
	ante_tac THEN rewrite_tac(map z_get_spec(get_consts"BASICTYPESspec")));
a(PC_T1"z_lin_arith"prove_tac[]);
(* *** Goal "1.2" *** *)
a(all_asm_fc_tac[z_intmod_lemma]);
a(DROP_NTH_ASM_T 5 ante_tac THEN POP_ASM_T rewrite_thm_tac);
a(¥_T rewrite_thm_tac);
(* *** Goal "2" *** *)
a(lemma_tacÒCURRENTTIME
                       + ~ ((TIMERSâ0 DISPLAY ATYPE).TIMEOUT
                             + BASICTYPESoTIMEvLAST + 1)
                     < BASICTYPESoTICKSPERSECÆ);
(* *** Goal "2.1" *** *)
a(all_asm_fc_tac[vc901_lemma]);
a(POP_ASM_T discard_tac);
a(DROP_NTH_ASM_T 5 ante_tac THEN POP_ASM_T ante_tac THEN POP_ASM_T 
	ante_tac THEN rewrite_tac(map z_get_spec(get_consts"BASICTYPESspec")));
a(PC_T1"z_lin_arith"prove_tac[]);
(* *** Goal "2.2" *** *)
a(asm_rewrite_tac[]);
val €vc901_2› = save_pop_thm"vc901_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc902_1");
a(z_µ_tac);
a(¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(asm_tac (rewrite_rule[z_get_specÒALARMSTATE1Æ](z_get_specÒALARMSTATEÆ)));
a(GET_NTH_ASM_T 7 ante_tac THEN GET_NTH_ASM_T 1 rewrite_thm_tac 
	THEN ¥_tac);
a(asm_tac (rewrite_rule[z_get_specÒTIMERSTATE1Æ](z_get_specÒTIMERSTATEÆ)));
a(GET_NTH_ASM_T 10 ante_tac THEN GET_NTH_ASM_T 1 rewrite_thm_tac 
	THEN ¥_tac);
a(all_asm_fc_tac[vc902_lemma1,vc902_lemma2]);
a(all_asm_fc_tac[z_´_lemma6]);
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒTimedOutAlarmsÆ]);
a(all_asm_fc_tac[z_´_lemma4]);
a(POP_ASM_T rewrite_thm_tac);
a(POP_ASM_T rewrite_thm_tac);
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒWithinTimeoutAlarmsÆ]);
a(REPEAT strip_tac);
val €vc902_1› = save_pop_thm"vc902_1";
=TEX

=SML
set_pc"cn";
set_goal([], get_conjecture"-" "vc1501_1");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(lemma_tacÒALARMSTATEvRANGE
                     ∏ {ALARMSTATE1vRANGE
                         ∏ {(LEVEL ¶ ALARMLEVELvFIRST, RAISED ¶ Boolean false,
                               REOCCURS ¶ ALARMRESETvFIRST)}} ç ALARMSTATE ±
                   TIMERSTATEvRANGE
                     ∏ {TIMERSTATE1vRANGE
                         ∏ {(ACTIVE ¶ Boolean false,
					TIMEOUT ¶ BASICTYPESoTIMEvLAST)}}
				ç TIMERSTATEÆ);
(* *** Goal "1" *** *)
a(rewrite_tac (map z_get_spec
	[ÒALARMSTATEÆ, ÒALARMSTATE1Æ, ÒTIMERSTATEÆ, ÒTIMERSTATE1Æ,
		ÒALARMDATAÆ, ÒTIMERDATAÆ] @
		auto_tac3_thms));
a(rewrite_tac[singleton_∏_fun_lemma]);
a(rewrite_tac[vc1501_1_lemma]);
(* *** Goal "2" *** *)
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒInactiveAlarmsÆ]);
a(all_asm_ante_tac THEN rewrite_tac (map z_get_spec
	[ÒALARMSTATEÆ, ÒALARMSTATE1Æ, ÒTIMERSTATEÆ, ÒTIMERSTATE1Æ,
		ÒALARMDATAÆ, ÒTIMERDATAÆ] @
		auto_tac3_thms));
a(REPEAT strip_tac THEN all_var_elim_asm_tac1);
a(rewrite_tac[singleton_∏_app_lemma]);
a(ALL_FC_T rewrite_tac
	[z_µ_elim Ò(x¶ 0..2, z¶ ATYPE,
			y¶ (LEVEL ¶ 0, RAISED ¶ Boolean false,
			REOCCURS ¶ 0))Æ ∏_singleton_app_lemma]);
val €vc1501_1› = save_pop_thm"vc1501_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-" "vc120801_2");
a(rewrite_tac[] THEN REPEAT strip_tac);
(* *** Goal "1" *** *)
a(all_var_elim_asm_tac1);
a(rewrite_tac[z_get_specÒSecondAcceptanceÆ]);
a(ASM_FC_T rewrite_tac[]);
a(rewrite_tac[z_get_specÒAlarmChangeÆ]);
a(REPEAT strip_tac);
(* *** Goal "2" *** *)
a(all_var_elim_asm_tac1);
a(rewrite_tac[z_get_specÒInactiveAcceptanceÆ]);
a(ASM_FC_T rewrite_tac[]);
a(rewrite_tac[z_get_specÒAlarmChangeÆ]);
a(REPEAT strip_tac);
val €vc120801_2› = save_pop_thm"vc120801_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-" "vc1208_2");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_var_elim_asm_tac1);
a(rewrite_tac[z_get_specÒAcceptAlarmÆ]);
a(lemma_tacÒê(AlarmChange)Æ THEN1 
	(rewrite_tac[z_get_specÒAlarmChangeÆ] THEN REPEAT strip_tac));
a(REPEAT strip_tac);
(* *** Goal "1" *** *)
a(asm_rewrite_tac[z_get_specÒFirstAcceptanceÆ]);
a(ASM_FC_T rewrite_tac[]);
a(ASM_FC_T (MAP_EVERY ante_tac) []);
a(asm_rewrite_tac(map z_get_spec[ÒSecondAcceptanceÆ, ÒInactiveAcceptanceÆ]));
a(conv_tac (MAP_C z_≥_∂_conv));
a(PC_T1 "hol" asm_rewrite_tac[]);
a(ALL_FC_T1 fc_canon2 rewrite_tac(map z_get_spec
	[ÒAcceptedAlarmsÆ, ÒNonAcceptedAlarmsÆ, ÒInactiveAlarmsÆ,
	ÒAudioVisualFlashAlarmsÆ, ÒWithinTimeoutAlarmsÆ]));
a(rewrite_tac auto_tac3_thms);
a(cases_tacÒ(STATEâ0 DISPLAY ATYPE).LEVEL = 2Æ THEN asm_rewrite_tac[]);
a(cases_tacÒ(STATEâ0 DISPLAY ATYPE).RAISED = Boolean falseÆ
		THEN asm_rewrite_tac[]);
a(REPEAT strip_tac);
(* *** Goal "2" *** *)
a(all_asm_fc_tac[]);
(* *** Goal "3" *** *)
a(asm_rewrite_tac[z_get_specÒNoAcceptanceÆ]);
a(REPEAT strip_tac);
a(all_asm_fc_tac[]);
(* *** Goal "4" *** *)
a(all_asm_fc_tac[]);
val €vc1208_2› = save_pop_thm"vc1208_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc1001_1");
a(accept_tac vc1501_1);
val €vc1001_1› = save_pop_thm"vc1001_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc11_1");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(PC_T1 "z_lin_arith" asm_prove_tac[]);
val €vc11_1› = save_pop_thm"vc11_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc1101_1");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(all_asm_fc_tac[vc902_lemma2,vc1101_lemma]);
a(asm_tac (rewrite_rule[z_get_specÒALARMSTATE1Æ](z_get_specÒALARMSTATEÆ)));
a(GET_NTH_ASM_T 9 ante_tac THEN GET_NTH_ASM_T 1 rewrite_thm_tac 
	THEN ¥_tac);
a(asm_tac (rewrite_rule[z_get_specÒTIMERSTATE1Æ](z_get_specÒTIMERSTATEÆ)));
a(GET_NTH_ASM_T 12 ante_tac THEN GET_NTH_ASM_T 1 rewrite_thm_tac 
	THEN ¥_tac);
a(all_asm_fc_tac[z_´_lemma6]);
a(lemma_tacÒI = ATYPE ≤ I ç ALARMTYPEvFIRST .. ATYPE + ~ 1Æ);
(* *** Goal "1" *** *)
a(PC_T1"z_lin_arith"asm_prove_tac[]);
(* *** Goal "2" *** *)
a(all_var_elim_asm_tac1);
a(all_asm_fc_tac[z_´_lemma4]);
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒInactiveAlarmsÆ]);
a(asm_rewrite_tac[]);
(* *** Goal "3" *** *)
a(lemma_tacÒI ç ALARMTYPEÆ);
(* *** Goal "3.1" *** *)
a(DROP_ASMS_T (MAP_EVERY ante_tac));
a(rewrite_tac(map z_get_spec	[ÒALARMTYPEÆ,ÒALARMTYPEvFIRSTÆ]));
a(REPEAT strip_tac THEN all_asm_fc_tac[z_º_trans_thm]);
(* *** Goal "3.2" *** *)
a(lemma_tacÒ≥I = ATYPEÆTHEN1 PC_T1"z_lin_arith"asm_prove_tac[]);
a(all_asm_fc_tac[]);
a(POP_ASM_T ante_tac);
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒInactiveAlarmsÆ]);
a(strip_asm_tac(z_get_specÒInactiveAlarmsÆ));
a(POP_ASM_T (ante_tac o z_µ_elimÒ(STATE ¶STATE
                 ´ {DISPLAY
                       Ì STATE DISPLAY
                           ´ {ATYPE
                                 Ì (LEVEL ¶ (STATE DISPLAY ATYPE).LEVEL,
                                     RAISED ¶ Boolean false,
                                     REOCCURS ¶ (STATE DISPLAY ATYPE).REOCCURS)}},
TIMERS ¶ TIMERS
                 ´ {DISPLAY
                       Ì TIMERS DISPLAY
                           ´ {ATYPE
                                 Ì (ACTIVE ¶ Boolean false,
                                     TIMEOUT ¶ (TIMERS DISPLAY ATYPE).TIMEOUT)}},
DISPLAY ¶ DISPLAY,ATYPE ¶I)Æ));
a(asm_rewrite_tac[]);
a(¥_T rewrite_thm_tac);
a(ALL_ASM_FC_T rewrite_tac[z_´_lemma8]);
val €vc1101_1› = save_pop_thm"vc1101_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc1202_2");
a(REPEAT strip_tac);
a(all_var_elim_asm_tac1);
a(all_asm_fc_tac[]);
val €vc1202_2› = save_pop_thm"vc1202_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc1203_2");
a(REPEAT strip_tac);
a(all_var_elim_asm_tac1);
a(all_asm_fc_tac[]);
a(asm_rewrite_tac[]);
val €vc1203_2› = save_pop_thm"vc1203_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc1204_2");
a(z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(asm_rewrite_tac[]);
val €vc1204_2› = save_pop_thm"vc1204_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc1205_1");
a(rewrite_tac[] THEN REPEAT strip_tac);
a(PC_T1"z_lin_arith"asm_prove_tac[]);
val €vc1205_1› = save_pop_thm"vc1205_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc120501_1");
a(z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(rewrite_tac[]);
a(z_∂_tac¨ATYPEÆ);
a(GET_NTH_ASM_T 3 ante_tac);
a(rewrite_tac(map z_get_spec[ÒALARMTYPEÆ,ÒALARMTYPEvFIRSTÆ,ÒROLLALARMÆ]));
a(REPEAT strip_tac);
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒNonAcceptedAlarmsÆ]);
a(all_asm_fc_tac[vc501_lemma]);
a(DROP_NTH_ASM_T 4 ante_tac THEN POP_ASM_T ante_tac);
a(rewrite_tac[]);
a(¥_tac THEN asm_rewrite_tac[]);
val €vc120501_1› = save_pop_thm"vc120501_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc120501_2");
a(rewrite_tac[] THEN z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(DROP_NTH_ASM_T 2 ante_tac);
a(cases_tacÒNONVIEXISTS = Boolean trueÆTHEN asm_rewrite_tac[]);
(* *** Goal "1" *** *)
a(REPEAT strip_tac);
a(z_∂_tacÒIÆTHEN asm_rewrite_tac[]);
a(PC_T1 "z_lin_arith" asm_prove_tac[]);
(* *** Goal "2" *** *)
a(REPEAT strip_tac);
a(z_spec_nth_asm_tac 3 ÒIÆ);
(* *** Goal "2.1" *** *)
a(PC_T1 "z_lin_arith" asm_prove_tac[]);
(* *** Goal "2.2" *** *)
a(lemma_tacÒI = ATYPEÆ THEN1 PC_T1 "z_lin_arith" asm_prove_tac[]);
a(all_var_elim_asm_tac1);
a(ALL_FC_T1 fc_canon2 rewrite_tac[z_get_specÒNonAcceptedAlarmsÆ]);
a(all_asm_fc_tac[vc501_lemma]);
a(DROP_NTH_ASM_T 5 ante_tac 
	THEN POP_ASM_T (strip_asm_tac o rewrite_rule[])
	THEN asm_rewrite_tac[]);
val €vc120501_2› = save_pop_thm"vc120501_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc1206_2");
a(rewrite_tac[] THEN z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(DROP_NTH_ASM_T 2 ante_tac);
a(asm_rewrite_tac[]);
val €vc1206_2› = save_pop_thm"vc1206_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc1207_2");
a(rewrite_tac[z_get_specÒAcceptAlarmÆ]);
a(z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(all_asm_fc_tac[] THEN asm_rewrite_tac[]);
a(asm_rewrite_tac[z_get_specÒSecondAcceptanceÆ,z_get_specÒAlarmChangeÆ]);
a(DROP_NTH_ASM_T 7 ante_tac THEN asm_rewrite_tac[]);
a(¥_T rewrite_thm_tac);
a(PC_T1 "z_library_ext" asm_prove_tac[]);
val €vc1207_2› = save_pop_thm"vc1207_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc120703_1");
a(z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(asm_rewrite_tac[]);
a(PC_T1"z_lin_arith"prove_tac[]);
val €vc120703_1› = save_pop_thm"vc120703_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc120704_1");
a(z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(LEMMA_TÒATYPE ç ATYPE .. ALARMTYPEvLASTÆasm_tac);
(* *** Goal "1" *** *)
a(DROP_NTH_ASM_T 4 ante_tac);
a(prove_tac(map z_get_spec[ÒALARMTYPEÆ,ÒALARMTYPEvLASTÆ,ÒWINDALARMÆ]));
(* *** Goal "2" *** *)
a(PC_T1"z_predicates"all_asm_fc_tac[]);
a(asm_rewrite_tac[]);
val €vc120704_1› = save_pop_thm"vc120704_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc120705_1");
a(rewrite_tac[] THEN z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(asm_tac (rewrite_rule[z_get_specÒALARMSTATE1Æ](z_get_specÒALARMSTATEÆ)));
a(GET_NTH_ASM_T 9 ante_tac THEN GET_NTH_ASM_T 1 rewrite_thm_tac 
	THEN ¥_tac);
a(asm_tac (rewrite_rule[z_get_specÒTIMERSTATE1Æ](z_get_specÒTIMERSTATEÆ)));
a(GET_NTH_ASM_T 12 ante_tac THEN GET_NTH_ASM_T 1 rewrite_thm_tac 
	THEN ¥_tac);
a(all_asm_fc_tac[vc120705_lemma]);
a(POP_ASM_T discard_tac);
a(lemma_tacÒ(ACTIVE ¶ Boolean true, TIMEOUT ¶ TIMEOUT) ç TIMERDATAÆ
	THEN1 asm_rewrite_tac[z_get_specÒTIMERDATAÆ]);
a ±_tac;
(* *** Goal "1" *** *)
a(z_µ_tac THEN ¥_T strip_asm_tac);
a(ALL_ASM_FC_T rewrite_tac[z_´_lemma8]);
(* *** Goal "2" *** *)
a(all_asm_fc_tac[z_´_lemma6]);
a(POP_ASM_T discard_tac);
a(DROP_NTH_ASM_T 2 discard_tac);
a(all_asm_fc_tac[z_´_lemma4]);
a(rewrite_tac(map z_get_spec
	[ÒInactiveAcceptanceÆ,ÒNoAcceptanceÆ,ÒFirstAcceptanceÆ]));
a(LEMMA_TÒ(ATYPE ¶ ATYPE, DISPLAY ¶ DISPLAY,
                   STATE ¶
                       STATE
                           ´ {DISPLAY
                                 Ì STATE DISPLAY
                                     ´ {ATYPE
                                           Ì (LEVEL ¶ VISUALINVERSE,
                                               RAISED ¶
                                                   (STATE DISPLAY ATYPE).RAISED,
                                               REOCCURS ¶
                                                   (STATE DISPLAY
                                                         ATYPE).REOCCURS)}},
                   STATEâ0 ¶ S,
                   TIMERS ¶
                       TIMERS
                           ´ {DISPLAY
                                 Ì TIMERS DISPLAY
                                     ´ {ATYPE
                                           Ì (ACTIVE ¶ Boolean true,
                                               TIMEOUT ¶ TIMEOUT)}},
                   TIMERSâ0 ¶ T)
               ç AlarmChangeÆrewrite_thm_tac
	THEN1 PC_T1 "z_library_ext" asm_prove_tac[z_get_specÒAlarmChangeÆ]);
a(ALL_FC_T1 fc_canon2 asm_rewrite_tac(map z_get_spec
	[ÒNonAcceptedAlarmsÆ, ÒAcceptedAlarmsÆ, ÒAudioVisualFlashAlarmsÆ,
	ÒWithinTimeoutAlarmsÆ,ÒInactiveAlarmsÆ]));
a(REPEAT strip_tac);
val €vc120705_1› = save_pop_thm"vc120705_1";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc120705_2");
a(rewrite_tac[] THEN z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(asm_tac (rewrite_rule[z_get_specÒTIMERSTATE1Æ](z_get_specÒTIMERSTATEÆ)));
a(GET_NTH_ASM_T 10 ante_tac THEN GET_NTH_ASM_T 1 rewrite_thm_tac 
	THEN ¥_tac);
a(lemma_tacÒ(ACTIVE ¶ Boolean true, TIMEOUT ¶ TIMEOUT) ç TIMERDATAÆ
	THEN1 asm_rewrite_tac[z_get_specÒTIMERDATAÆ]);
a ±_tac;
(* *** Goal "1" *** *)
a(z_µ_tac THEN ¥_T strip_asm_tac);
a(ALL_ASM_FC_T rewrite_tac[z_´_lemma8]);
(* *** Goal "2" *** *)
a(all_asm_fc_tac[z_´_lemma6]);
a(POP_ASM_T discard_tac);
a(all_asm_fc_tac[z_´_lemma4]);
a(rewrite_tac(map z_get_spec
	[ÒInactiveAcceptanceÆ,ÒNoAcceptanceÆ,ÒFirstAcceptanceÆ]));
a(LEMMA_TÒ(ATYPE ¶ ATYPE, DISPLAY ¶ DISPLAY,STATE ¶ STATE, STATEâ0 ¶ S,
                   TIMERS ¶
                       TIMERS
                           ´ {DISPLAY
                                 Ì TIMERS DISPLAY
                                     ´ {ATYPE
                                           Ì (ACTIVE ¶ Boolean true,
                                               TIMEOUT ¶ TIMEOUT)}},
                   TIMERSâ0 ¶ T)
               ç AlarmChangeÆrewrite_thm_tac
	THEN1 PC_T1 "z_library_ext" asm_prove_tac[z_get_specÒAlarmChangeÆ]);
a(ALL_FC_T1 fc_canon2 asm_rewrite_tac(map z_get_spec
	[ÒNonAcceptedAlarmsÆ, ÒAcceptedAlarmsÆ, ÒAudioVisualFlashAlarmsÆ,
	ÒWithinTimeoutAlarmsÆ,ÒInactiveAlarmsÆ]));
a(REPEAT strip_tac);
val €vc120705_2› = save_pop_thm"vc120705_2";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc120705_3");
a(rewrite_tac[] THEN z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(asm_tac (rewrite_rule[z_get_specÒALARMSTATE1Æ](z_get_specÒALARMSTATEÆ)));
a(GET_NTH_ASM_T 9 ante_tac THEN GET_NTH_ASM_T 1 rewrite_thm_tac 
	THEN ¥_tac);
a(all_asm_fc_tac[vc120705_lemma]);
a ±_tac;
(* *** Goal "1" *** *)
a(z_µ_tac THEN ¥_T strip_asm_tac);
a(ALL_ASM_FC_T rewrite_tac[z_´_lemma8]);
(* *** Goal "2" *** *)
a(all_asm_fc_tac[z_´_lemma6]);
a(POP_ASM_T discard_tac);
a(all_asm_fc_tac[z_´_lemma4]);
a(rewrite_tac(map z_get_spec
	[ÒInactiveAcceptanceÆ,ÒNoAcceptanceÆ,ÒFirstAcceptanceÆ]));
a(LEMMA_TÒ(ATYPE ¶ ATYPE, DISPLAY ¶ DISPLAY,
                   STATE ¶
                       STATE
                           ´ {DISPLAY
                                 Ì STATE DISPLAY
                                     ´ {ATYPE
                                           Ì (LEVEL ¶ VISUALINVERSE,
                                               RAISED ¶
                                                   (STATE DISPLAY ATYPE).RAISED,
                                               REOCCURS ¶
                                                   (STATE DISPLAY
                                                         ATYPE).REOCCURS)}},
                   STATEâ0 ¶ S, TIMERS ¶ TIMERS, TIMERSâ0 ¶ T)
               ç AlarmChangeÆrewrite_thm_tac
	THEN1 PC_T1 "z_library_ext" asm_prove_tac[z_get_specÒAlarmChangeÆ]);
a(ALL_FC_T1 fc_canon2 rewrite_tac(map z_get_spec
	[ÒNonAcceptedAlarmsÆ, ÒAcceptedAlarmsÆ, ÒAudioVisualFlashAlarmsÆ,
	ÒWithinTimeoutAlarmsÆ,ÒInactiveAlarmsÆ]));
a(DROP_NTH_ASM_T 11 ante_tac THEN asm_rewrite_tac[]);
a(REPEAT strip_tac);
val €vc120705_3› = save_pop_thm"vc120705_3";
=TEX
=SML
set_pc"cn";
set_goal([], get_conjecture"-""vc120705_4");
a(rewrite_tac[] THEN z_µ_tac THEN ¥_T (REPEAT_TTCL ±_THEN asm_tac));
a(PC_T1 "z_library_ext" asm_rewrite_tac(map z_get_spec
	[ÒInactiveAcceptanceÆ,ÒNoAcceptanceÆ,ÒFirstAcceptanceÆ,ÒAlarmChangeÆ]));
a(ALL_FC_T1 fc_canon2 rewrite_tac(map z_get_spec
	[ÒNonAcceptedAlarmsÆ, ÒAcceptedAlarmsÆ, ÒAudioVisualFlashAlarmsÆ,
	ÒWithinTimeoutAlarmsÆ,ÒInactiveAlarmsÆ]));
a(POP_ASM_T ante_tac THEN POP_ASM_T ante_tac);
a(asm_rewrite_tac[] THEN REPEAT strip_tac);
val €vc120705_4› = save_pop_thm"vc120705_4";
=TEX

\twocolumn[\section{INDEX}]
\printindex


\end{document}
