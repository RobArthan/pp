=IGN
********************************************************************************
int515.doc: this file is part of the PPDaz system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
% %Z% $Revision: 1.8 $ $RCSfile: int515.doc,v $ $Date: 2005/05/28 14:15:48 $
=TEX
% TQtemplate.tex
% use_file "daz_init";
% use_file "int515";
% z_print_theory"-";
% open CNZGenerator;
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{DAZ PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Praxis Issues Example}  %% Mandatory field
\TPPref{ISS/HAT/DAZ/INT515}  %% Mandatory field
\def\SCCSversion{$Revision: 1.8 $%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date: 2005/05/28 14:15:48 $%
}}  %% Mandatory field (with sensible default)
\TPPstatus{Informal}
%\TPPstatus{Informal}
\TPPtype{Technical}
%\TPPkeywords{HOL}
\TPPauthor{K.~Blackburn & IUCT Team}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.~Arthan & IUCT Team1}
\TPPabstract{%
This document contains tests based on the Praxis Issues example.
}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
      Library}}

%\TPPclass{CLASSIFICATION}
\def\TPPheadlhs{Lemma 1 Ltd.}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : Lemma 1 Ltd. \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\pagebreak
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu,daz}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}
\item[Issues 1.1] First drafts.
\item[Issue 1.2] Removed use of ICL logo font.
\item[Issue 1.3] Copyright and banner updates for open source release.
\item[Issue 1.4] DAZ-specific updates to banner for open source release
\item[Issue 1.5] DAZ-specific updates to banner for open source release
\item[Issue 1.6] Fixed dependency on proof context set-up.
\item[Issue 1.7] The SPARK program is now referred to as the Ada program.
\item[Issue 1.8] Compliance Notation reserved words are now prefixed by a dollar sign.
\item[Issue 1.9] Allowed for automated state management.
\end{description}
\subsection{Changes Forecast}
None.
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document contains test data for the Compliance Tool.
\subsection{Introduction}
This document contains the Praxis Issues example from 
\cite{SHOLIS_CNER}.

\section{PRELIMINARIES}

=SML
use_file "dtd013";
use_file "imp013";
init_mt_results();
=TEX
Function to clean up before doing a test.
=SML
fun clean_up () = (
	let	val thys = get_descendants "cn" less "cn"
					diff get_cache_theories();
		fun del_thy thy = (force_delete_theory thy handle Fail _ => ());
	in	map del_thy thys
	end;	()
);
=TEX

\section{EXAMPLE}
=SML
clean_up();
new_script{name="Issues1"};
πZAX
‹ inc : INTEGER ≠ INTEGER
˜¸¸¸¸¸¸
‹ µ X : INTEGER ∑
‹	X Ω INTEGERvLAST ± inc(X) = X + 1
‹	≤ X = INTEGERvLAST ± inc(X) = X
∞
ˇ IncTwo ¸¸¸¸¸¸¸¸¸¸¸
‹ A, Aâ0, Bâ0, B : INTEGER
˜¸¸¸¸¸¸
‹ A = inc(Aâ0) ± B = inc(Bâ0)
à¸¸¸¸¸¸¸¸¸¸¸¸¸¸

πCN
package Eg1
is
   procedure IncTwo(A, B : in out INTEGER)
    Ñ A, B [ IncTwo ];
end Eg1;
∞

=SML
new_script{name="Issues2"};
πCN
package body Eg1
is

   procedure Inc(X : in out INTEGER)
    Ñ X [ X = inc(Xâ0) ]
   is
   begin
   Ñ X [ X = inc(Xâ0) ] (11)
   end Inc;

   procedure IncTwo(A, B : in out INTEGER)
   Ñ A, B [ IncTwo ]
   is
   begin
   Ñ A, B [ IncTwo ] (12)
   end IncTwo;

end Eg1;
∞
=SML
=TEX
\section{USES OF EXAMPLE}
\subsection{Using Z Schemas in Ada Specifications}
Section A.4 of \cite{SHOLIS_CNER}:
=SML
new_script{name="A4"};
πCN
with Eg1;
procedure Eg1_UseIncTwo
is
   A,B : INTEGER;
begin
   Ñ A, B [ IncTwo ] (30)
end Eg1_UseIncTwo;
∞
=SML
fun test_A4 () = 
πCN
 (30) √ 
   Eg1.IncTwo(A, B);
∞
=SML
store_mt_results_show mt_run [
   ("A4", test_A4, (), ())
];
=TEX
=SML
set_goal([],get_conjecture "-" "vc30_2");
a(REPEAT strip_tac);
store_mt_results_show (mt_runf (op =$)) [
   ("A4_proof", concl o pop_thm, (), get_conjecture "-" "vc30_2")
];
=TEX
\subsection{Variable Scope and Specification statements}
Section A.5 of \cite{SHOLIS_CNER}:
=SML
new_script{name="A5_1"};
πCN
package Eg2_store is
   Data : INTEGER;

   procedure Update( X : in INTEGER)
    Ñ DATA [ DATA = X ];
   --# global Data;
   --# derives Data from X;

end Eg2_Store;

∞
=SML 
new_script{name="A5_2"};
fun test_A5_1 () = 
πCN
$references Eg2_Store;
--# inherit Eg2_Store;
package Eg2 is

   procedure StoreMax (A, B : in INTEGER)
    Ñ EG2_STOREoDATA [ EG2_STOREoDATA = max { A, B} ];
   --# global Eg2_Store.Data;
   --# derives Eg2_Store.Data from A, B;

end Eg2;
∞
=SML
store_mt_results_show mt_run [
   ("A5_1", test_A5_1, (), ())
];
=TEX
=SML
new_script {name="A5_3"};
fun test_A5_3 () = 
πCN
$references Eg2, Eg2_Store;
--# inherit Eg2, Eg2_Store;
package Eg2_Top is

   procedure Eg2_Store10
    Ñ EG2_STOREoDATA [ EG2_STOREoDATA = 10 ];
   --# global Eg2_Store.data;
   --# derives Eg2_Store.Data from ;

end Eg2_Top;
∞
=SML
store_mt_results_show mt_run [
   ("A5_3", test_A5_3, (), ())
];
=TEX
=SML
new_script{name="A5_4"};
fun test_A5_4 () =
πCN
with Eg2;
$references Eg2_Store;
package body Eg2_Top is
   procedure Eg2_Store10
    Ñ EG2_STOREoDATA [  EG2_STOREoDATA = 10 ]
   is
   begin
    Ñ EG2_STOREoDATA [  EG2_STOREoDATA = 10 ] (21)
   end Eg2_Store10;
end Eg2_Top;
∞
=SML
store_mt_results_show mt_run [
   ("A5_4", test_A5_4, (), ())
];
=TEX
=SML
fun test_A5_4 () = 
πCN
 (21) √ Eg2.StoreMax(1, 10);
∞
=SML
store_mt_results_show mt_run [
   ("A5_4_refine", test_A5_4, (), ())
];
=TEX
=SML
set_pc"z_library_ext";
set_goal([], get_conjecture "-" "vc21_2");
a(rewrite_tac[z_get_spec ÒmaxÆ]);
a(REPEAT strip_tac);
a(all_var_elim_asm_tac1);
a(z_app_eq_tac);
a(REPEAT strip_tac);
a(all_var_elim_asm_tac1);
a(asm_fc_tac []);
(* *** Goal "1.1" *** *)
a(all_var_elim_asm_tac1);
a(lemma_tac Ò10 ç SÆ);
(* *** Goal "1.1.1" *** *)
a(z_spec_nth_asm_tac 1 Ò10Æ);
(* *** Goal "1.1.2" *** *)
a(asm_fc_tac[]);
(* *** Goal "1.2" *** *)
a(all_var_elim_asm_tac1);
(* *** Goal "2" *** *)
a(z_∂_tac Ò(S ¶ {1, 10},m ¶ 10 )Æ);
a(REPEAT strip_tac);
(* *** Goal "2.1" *** *)
a(z_∂_tac Ò1Æ);
a(REPEAT strip_tac);
(* *** Goal "2.2" *** *)
a(all_var_elim_asm_tac1);
a(rewrite_tac[]);
(* *** Goal "2.3" *** *)
a(all_var_elim_asm_tac1);
a(rewrite_tac[]);
store_mt_results_show (mt_runf (op =$)) [
   ("A5_proof", concl o pop_thm, (), get_conjecture "-" "vc21_2")
];
=TEX
\section{EPILOGUE}
=SML
diag_line (summarize_mt_results());
=TEX
\pagebreak
\end{document}
=IGN
