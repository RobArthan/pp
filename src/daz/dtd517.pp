=IGN
********************************************************************************
dtd517.doc: this file is part of the PPDaz system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
%  ℤ
=TEX
%%%%% YOU MAY WANT TO CHANGE POINT SIZE IN THE FOLLOWING:
\documentclass[a4paper,11pt]{article}

%%%%% YOU CAN ADD OTHER PACKAGES AS NEEDED BELOW:
\usepackage{A4}
\usepackage{Lemma1}
\usepackage{ProofPower}
\usepackage{latexsym}
\usepackage{epsf}
\makeindex

%%%%% YOU WILL WANT TO CHANGE THE FOLLOWING TO SUIT YOU AND YOUR DOCUMENT:

\def\Title{Detailed Design: Script Proof Support}

\def\AbstractText{This is a structure containing methods of making the paragraphs generated by the compliance notation available to the user in a normalised form.}

\def\Reference{ISS/HAT/DAZ/DTD517}

\def\Author{K. Blackburn}


\def\EMail{C/O {\tt rda@lemma-one.com}}

\def\Phone{C/O +44 7497 030682}

\def\Abstract{\begin{center}{\bf Abstract}\par\parbox{0.7\hsize}
{\small \AbstractText}
\end{center}}

%%%%% YOU MAY WANT TO CHANGE THE FOLLOWING TO GET A NICE FRONT PAGE:
\def\FrontPageTitle{ {\huge \Title } }
\def\FrontPageHeader{\raisebox{16ex}{\begin{tabular}[t]{c}
\bf Copyright \copyright\ : Lemma 1 Ltd \number\year\\\strut\\
\end{tabular}}}

%%%%% THE FOLLOWING DEFAULTS WILL GENERALLY BE RIGHT:

\def\Version{\VCVersion}
\def\Date{\FormatDate{\VCDate}}

%% LaTeX2e port: =TEX
%% LaTeX2e port: % TQtemplate.tex
%% LaTeX2e port: \documentstyle[hol1,11pt,TQ]{article}
%% LaTeX2e port: \ftlinepenalty=9999
%% LaTeX2e port: 
\def\DRASpecs{\cite{DRA/CIS/CSE3/TR/94/27/3.0}}
\def\Volume#1{\cite[volume #1]{DRA/CIS/CSE3/TR/94/27/3.0}\/}
\def\VolumeOne{\Volume 1}
\def\VolumeTwo{\Volume 2}
\def\VolumeThree{\Volume 3}
%% LaTeX2e port: 
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
%% LaTeX2e port: \makeindex
%% LaTeX2e port: \TPPproject{DAZ PROJECT}  %% Mandatory field
%% LaTeX2e port: %\TPPvolume{}
%% LaTeX2e port: %\TPPpart{}
%% LaTeX2e port: \TPPtitle{Detailed Design: Script Proof Support}  %% Mandatory field
%% LaTeX2e port: \TPPref{ISS/HAT/DAZ/DTD517}  %% Mandatory field
%% LaTeX2e port: \def\SCCSversion{$Revision: 1.15 $%
%% LaTeX2e port: }
%% LaTeX2e port: \TPPissue{\SCCSversion}  %% Mandatory field
%% LaTeX2e port: \TPPdate{\FormatDate{$Date: 2002/10/17 16:04:45 $%
%% LaTeX2e port: }}
%% LaTeX2e port: %\TPPstatus{Approved}
%% LaTeX2e port: \TPPstatus{Draft}
%% LaTeX2e port: \TPPtype{Specification}
%% LaTeX2e port: %\TPPkeywords{SPARK}
%% LaTeX2e port: \TPPauthors{K.~Blackburn&WIN01}
%% LaTeX2e port: %\TPPauthors{K.~Blackburn&WIN01\\R.D.~Arthan&WIN01}
%% LaTeX2e port: \TPPauthorisation{R.D.~Arthan & DAZ Team}
%% LaTeX2e port: \TPPabstract{
%% LaTeX2e port: This is a structure containing methods of making the paragraphs generated by the compliance notation available to the user in a
%% LaTeX2e port: normalised form.}
%% LaTeX2e port: %\TPPabstractB{}
%% LaTeX2e port: %\TPPabstractC{}
%% LaTeX2e port: %\TPPabstractD{}
%% LaTeX2e port: %\TPPabstractE{}
%% LaTeX2e port: %\TPPabstractF{}
%% LaTeX2e port: \TPPdistribution{\parbox[t]{4.0in}{%
%% LaTeX2e port: 	A.~Smith, DRA \\
%% LaTeX2e port: 	Library}}
%% LaTeX2e port: %\TPPclass{CLASSIFICATION}
%% LaTeX2e port: %\def\TPPheadlhs{}
%% LaTeX2e port: %\def\TPPheadcentre{}
%% LaTeX2e port: %def\TPPheadrhs{}
%% LaTeX2e port: \def\TPPheadlhs{Lemma 1 Ltd.}
%% LaTeX2e port: %\def\TPPfootlhs{}
%% LaTeX2e port: %\def\TPPfootcentre{}
%% LaTeX2e port: %\def\TPPfootrhs{}
%% LaTeX2e port: 
%% LaTeX2e port: \begin{document}
%% LaTeX2e port: \TPPsetsizes
%% LaTeX2e port: \makeTPPfrontpage
%% LaTeX2e port: 
%% LaTeX2e port: \vfill
%% LaTeX2e port: \begin{centering}
%% LaTeX2e port: 
%% LaTeX2e port: \bf Copyright \copyright\ : Lemma 1 Ltd. \number\year
%% LaTeX2e port: 
%% LaTeX2e port: \end{centering}

\begin{document}

\headsep=0mm
\FrontPage
\headsep=10mm

\setcounter{section}{-1}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{daz,fmu}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}
\item[Issue 1.1 (1996/01/24) - 1.2 (1996/02/29)] Initial Drafts.
\item[Issue 1.3 (1996/03/08), 1.4 (1996/03/11)] Specifically working towards fulfilling item 6 of \cite{ISS/HAT/DAZ/MIN009} v1.2.
\item[Issue 1.5 (1996/03/12)]
Changes after RDA comments.
\item[Issue 1.6 (1996/03/13)]
Changes after RDA comments.
\item[Issue 1.7 (1996/03/20)]
Changing coverage of tools.
\item[Issue 1.8 (1996/03/26)]
Defined context of making proof contexts, etc.
\item[Issue 1.9 (1997/06/09)]
Typos.
\item[Issue 1.10 (1997/08/18)] Updated references.
\item[Issue 1.11 (1997/08/19)] Tidying.
\item[Issue 1.12 (2002/08/23)] Removed use of ICL logo font.
\item[Issue 1.13 (2002/10/17)] Copyright and banner updates for open source release.
\item[Issue 1.14 (2002/10/17)] DAZ-specific updates to banner for open source release
\item[Issue 1.15 (2002/10/17)] DAZ-specific updates to banner for open source release
\item[Issue 1.16 (2009/03/24)] Added error message needed to eliminate non-exhaustive
matches.
\item[2014/07/23]
Augmented old RCS version numbers in the changes history with dates.
Dates will be used in place of version numbers in future.

\item[2015/04/17]
Ported daz source documents onto the Lemma 1 document template
%%%% END OF CHANGES HISTORY %%%%
\end{description}
\subsection{Changes Forecast}
None.
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document responds to the first and second recommendations of \cite{ISS/HAT/DAZ/WRK509}.
This is with the intent of fulfilling item 6 of \cite{ISS/HAT/DAZ/MIN009} v1.2.

\subsection{Introduction}

\subsubsection{Purpose and Background}

This document gives the detailed designs for tools that provide an easy user interface to the non-conjecture paragraphs generated by the  Compliance Notation Tool.

\subsubsection{Dependencies}
This relies on the presence of the compliance notation material that comes prior to it in the DAZ build of \Product.

\subsubsection{Possible Enhancements}
See \cite{ISS/HAT/DAZ/WRK509}.

Saving theorems in structures.

\section{DESIGN ISSUES}\label{DESIGNISSUES}

These tools follow the alternative categorisation of definitions in
\cite{ISS/HAT/DAZ/WRK509}.

This was as follows:
\begin{itemize}
\item
The definition is of a constant -- doesn't use other compliance notation definitions for simplification.
\item
The definition is of a kind of type attribute that is always a function
(e.g. the successor attribute).
Such definitions will be presented as a conditional rewrite for the
application of the function.
This will use definitions for the type and its other attributes for simplification.
\item
The definition is of a kind of type attribute that is not always a function (e.g. scalar or a range) -- doesn't use other compliance notation definitions for simplification.
\item
The definition equates a type to a set abstraction of a standard form for the
Compliance Notation (e.g. cases 2 and 3 of subtypes).
Such definitions will be presented as defining the type equal to the intersection of a total function
and some pre-existing type, which may be more convenient for reasoning.
This will use definition of the master type for the subtype for simplification.
\item
The definition equates a type to a horizontal schema.
The horizontal schema will be ``flattened'' to have one variable introduced per
SDECL in the signature, and the variable will be in a fixed order.
\item
The definition is of a type, but is some other form than one of the standard set abstraction forms -- doesn't use other compliance notation definitions for simplification.
\end{itemize}

The names of these tools are all prefixed $cn\_$.

=TEX
\section{RECOMMENDED MODE OF USE}
The normal user will use $all\_cn\_make\_script\_support$, to generate both the supporting theorems and the supporting proof context for their current
script.
\section{THE STRUCTURE}\label{THESTRUCTURE}
\subsection{Preamble}

=DOC
signature ⦏CNTheoryProofSupport⦎ = sig
=DESCRIBE
This is the signature for the Theory Proof Support Tools.
=ENDDOC
\subsection{Supporting Tools}
=DOC
val ⦏z_norm_sig_h_schema_conv⦎ : CONV;
=DESCRIBE
Given an arbitrary horizontal schema, $ⓩ[ sig | body ]⌝$, this conversion will
return the theorem that states that the original horizontal schema is equal to one with
the signature variables placed in $z\_sig\_order$ in a list of declarations
(SDECLs) each with only a single variable.
Items in the signature that are not simple declarations will be placed as a list after the sorted simple declarations, in their original order of occurrence.
E.g.
=GFT
[x, z: X; y : Y; T; v, w :Z; S | (v, w, x, z, y, w) ∈ p ]
will become
[ v : Z; w : Z; x : X; y : Y; z : X; T; S | (v, w, x, z, y, w) ∈ p ]
=TEX
=FRULE 1 Conversion
z_norm_sig_h_schema_conv
ⓩ[ sig | pred ]⌝
├
├
⊢ [ sig | pred ] = [ sig' | pred ]
=TEX
and
=FRULE 1 Conversion
z_norm_sig_h_schema_conv
ⓩ[ sig ]⌝
├
├
⊢ [ sig ] = [ sig' ]
=TEX
where $sig'$ is the normalised form of sig.
It is possible for this conversion to cause no change.
=FAILURE
47940	?0 is not a Z schema
=ENDDOC

=DOC
val ⦏cn_simplify_canon⦎ : THM -> THM list;
=DESCRIBE
This does some Compliance Notation-specific simplifications, if
the appropriate definitions are available.
In the following examples the likely constant name suffixes are used, but are not required by the canonicalisation function.
=GFT
⊢ namevSUCC = (name \ {namevLAST} ) ◁ succ
	becomes ⊢ ∀ i : name⋎1 .. name⋎2 + ~ 1 ⦁ namevSUCC i = i + 1
	and ⊢ namevSUCC ∈ name⋎1 .. (name⋎2 + ~ 1) → name⋎1 + 1 .. name⋎2
	where name⋎1 is the bottom, and name⋎2 is the top expression of the
	range that is translated from name

⊢ namevPRED = namevSUCC ↗~↕
	becomes ⊢ ∀ i : name⋎1 + 1 .. name⋎2 ⦁ namevPRED i = i + ~ 1
	and ⊢ namevPRED ∈ name⋎1 + 1 .. name⋎2 → name⋎1 .. (name⋎2 + ~ 1)
	where name⋎1 is the bottom, and name⋎2 is the top expression of the
	range that is translated from name

⊢ namevPOS = id name
	becomes ⊢ ∀ i : name ⦁ namevPOS i = i
	and ⊢ namevPOS ∈ name → name

⊢ namevVAL = namevPOS ↗~↕
	becomes ⊢ ∀ i : name ⦁ namevVAL i = i
	and ⊢ namevVAL ∈ name → name

⊢ name = {u : master | dom u = index}
	becomes ⊢ name = (index → comp) ∩ master

⊢ name = [ sig ]
	becomes ⊢ name = [ sig' ]
	where sig' is the normalised form of sig, via z_norm_sig_z_schema_conv

⊢ name = [ sig | pred ]
	becomes ⊢ name = [ sig' | pred ]
	where sig' is the normalised form of sig, via z_norm_sig_z_schema_conv
=TEX
The canonicalisation may also do some limited simplification to theorems that
partially match the patterns given above.
If none of simplifications apply
then the canon returns the empty list.
=FAILURE
517006	Theory cn is not an ancestor of the current theory
=ENDDOC
\subsection{Script Support Tools}
=DOC
val ⦏cn_script_support_thms⦎ : string -> THM list;
val ⦏list_cn_script_support_thms⦎ : string list -> THM list;
=DESCRIBE
$cn\_script\_support\_thms$ takes a theory name as argument.
Assuming the theory is in scope it will examine each of the definitions and
axioms in the theory that declare generic variables, and perhaps save some theorems for each in the current theory, as below.

As a default Z paragraphs saved as axioms or definitions initially will be processed as if retrieved by $z\_get\_spec$, and rewritten according
to the rules of proof context $z\_library1$. Some of the paragraph forms
can define more than one value, and the function will save theorems for
each of the values defined.
The description below assumes that a single item
is defined, called ``name'', with th obvious extensions for multiple declarations.
Non-alphanumeric names may be normalised
to fit in with ML variable name rules.
\begin{description}
\item [Abbreviation Definitions]
If $cn\_simplify\_canon$ applies, then its results will be saved.
The first theorem, if any, returned by $cn\_simplify\_canon$ will be saved with name $cn\_name\_thm$;
the second theorem returned will be saved with name $cn\_name\_sig\_thm$;
and if it returns no theorems then the generic form of the theorem will be saved with name $cn\_name\_thm$.
\item [Free Type Definitions]
The signature part will be saved with name $cn\_name\_sig\_thm$ (for each constructor);
the body, if non-trivial, with name $cn\_name\_thm$ (for each constructor).
A theorem for free type name, of the form $name\ =\ U$, will be saved
with name $cn\_name\_sig\_thm$.
\item[Axiomatic Box]
The signature part will be saved with name $cn\_name\_sig\_thm$, the body, if non-trivial, with name $cn\_name\_thm$.
No theorem will be saved if there is no signature.
\item[Given Sets]
A theorem stating that the given set is equal to U will be saved with name
$cn\_name\_thm$.
\item[Constraint]
No theorem will be generated, as constraints do not define a
generic variable (though they may well constrain an existing variable).
\end{description}
Saved theorems will also be bound to an ML variable of the same name.
If a theorem is already saved with the chosen theorem name then it is assumed to be for an earlier
use of the support tool, and will be replaced, and a warning issued.
Finally, a list of the theorems generated will be returned by the function.

$list\_cn\_script\_support\_thms$ acts like $cn\_script\_support\_thms$ mapped over a list of theory names, except that duplicate names in the list will be ignored.
=SEEALSO
$cn\_make\_script\_support$,
$list\_cn\_spec\_rule$,
$cn\_spec\_rule$,
=FAILURE
517001	Theorem ?0 in theory ?1 has been replaced by a new Compliance Notation
	support theorem
517002	Cannot force the saving of theorem ?0 in theory ?1
517006	Theory cn is not an ancestor of the current theory
517007	LHS of Abbreviation Definition, ?0, not a generic variable
=ENDDOC
Warning 517007 represents a potential, non-fatal, design error if it is encountered.
=DOC
val ⦏list_cn_spec_rule⦎ : THM list -> THM list;
=DESCRIBE
$list\_cn\_spec\_rule$ takes a list of theorems and analyses those that are Z paragraphs as if by $cn\_script\_support\_thms$,
saving and returning the list of created theorems.

Note that in particular this means that the function can be applied to the results of $get\_spec$, but not those of $z\_get\_spec$.
=FAILURE
517001	Theorem ?0 in theory ?1 has been replaced by a new Compliance Notation
	support theorem
517002	Cannot force the saving of theorem ?0 in theory ?1
517006	Theory cn is not an ancestor of the current theory
=ENDDOC
=IGN
517003	?0 is not a valid ML variable name
=TEX
=DOC
val ⦏cn_spec_rule⦎ : THM -> (string * THM) list;
=DESCRIBE
$cn\_spec\_rule$ analyses its single theorem as if by $cn\_script\_support\_thms$,
except that it does not save the resulting theorem, or bind it to an ML variable.
The function instead returns the name or names that $cn\_script\_support\_thms$ would have used,
and the theorem or theorems it would have saved, except that
unchanged theorems will result in an empty list being returned.
=FAILURE
517004	Theorem ?0 cannot be processed by Compliance Notation simplification tools
517006	Theory cn is not an ancestor of the current theory
=ENDDOC

=DOC
val ⦏cn_make_script_support⦎ : string -> string -> THM list;
val ⦏list_cn_make_script_support⦎ : string list -> string -> THM list;
=DESCRIBE
$cn\_make\_script\_support$ $thyname$ $pcname$
will first try to act as $cn\_script\_support\_thms$ $thyname$. It will then
create a complete proof context called $pcname$ (any previous version will be overwritten).
As with $cn\_make\_script\_support\_thms$, it returns the list of theorems generated.

$list\_cn\_make\_script\_support$  $thynames$ $pcname$ will first try to act as $list\_cn\_script\_support\_thms$ $thynames$. It will then
create a complete proof context called $pcname$ (any previous version will be overwritten).

The proof context created will be ``cn1'' extended by:
\paragraph{Contents}
Rewriting: all saved support theorems (except equations with U);

Stripping theorems: bi-implications from support theorems, plus support theorem equations of sets promoted to bi-implications of
memberships (except where U elimination will apply).

Stripping conclusions:  as stripping conclusions.

Rewriting canonicalisation: no change;

Automatic proof procedures: appropriate support theorems will be noted as to be used in type inference tools, otherwise no change.

Existence prover: no change.

The U simplification material will be extended by appending to the equation context the one formed from the equations of the form $nm = U$, via $set\_u\_simp\_eqn\_cxt$.

\paragraph{Usage Notes}
The new proof context requires theory ``cn'', its creation theory and theory $thyname$ to be in scope.
It is not intended to be mixed with HOL proof contexts.

The new proof context is built using proof context ``cn1''.
=FAILURE
517001	Theorem ?0 in theory ?1 has been replaced by a new Compliance Notation
	support theorem
517002	Cannot force the saving of theorem ?0 in theory ?1
517006	Theory cn is not an ancestor of the current theory
=ENDDOC

=DOC
val ⦏all_cn_make_script_support⦎ : string -> THM list;
=DESCRIBE
$all\_cn\_make\_script\_support$ $pcname$ will determine all the theories that
are parents of the current one, but that are not also ancestors of ``cn''
(i.e. this does not include ``cn''),
and will execute $list\_cn\_make\_script\_support$ on this list.

That is, this will create supporting theorems and a proof context based on all the in scope Compliance Notation packages.

\paragraph{Usage Notes}
The new proof context requires theory ``cn'', its creation theory and theory $thyname$ to be in scope.
It is not intended to be mixed with HOL proof contexts.

The new proof context is built using proof context ``cn1''.
=FAILURE
517006	Theory cn is not an ancestor of the current theory
=ENDDOC
\subsection{Miscellaneous Errors}
=FAILURE
517010	Internal error: unexpected return from term_match
=TEX
\subsection{Epilogue}
=SML
end (* end of signature CNTheoryProofSupport *);
=TEX

\section{TEST POLICY}
The module tests for this module follow the guidelines
identified in the quality plan~\cite{ISS/HAT/DAZ/PLN003},
and may be found in \cite{ISS/HAT/DAZ/MDT517}.
There are no special testing considerations.

\small
\twocolumn[\section{INDEX}]
\printindex

\end{document}



