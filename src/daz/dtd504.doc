%  dtd504.doc %Z% $Date$ $Revision$ $RCSfile$
=TEX
% TQtemplate.tex
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{DAZ PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Detailed Design: Web Clause Processor}  %% Mandatory field
\TPPref{ISS/HAT/DAZ/DTD504}  %% Mandatory field
\def\SCCSversion{$Revision$%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$%
}}
%\TPPstatus{Approved}
\TPPstatus{Draft}
\TPPtype{Specification}
%\TPPkeywords{SPARK}
\TPPauthor{D.J.~King&WIN01}
\TPPauthorisation{R.D.~Arthan & HAT Team}
\TPPabstract{
This document contains the detailed design for the
compliance tool web clause processor.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
	A.~Smith, DRA \\
	Library}}
%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
\newfont{\icllogo}{icllogo50}
\def\TPPheadlhs{$\vcenter{\halign{##\cr\icllogo ICL\cr}}$}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu,daz}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}
\item[Issue 1.1-1.7] Initial Drafts.
\item[Issue 1.8] Reworked according to desk check report 016.
\item[Issue 1.9] Added $output\_hypertext\_edit\_script$ to the signature.
\item[Issue 1.10] Added $reset\_hypertext\_info$ to the signature.

\end{description}

\subsection{Changes Forecast}
None.
\section{GENERAL}
\subsection{Scope}
This document contains the detailed design for the Web Clause Processor.
It covers recognition of web clauses which are not Z paragraphs.

\subsection{Introduction}

\subsubsection{Purpose and Background}

This document responds to the requirement for a web clause processor for compliance notation identified in \cite{ISS/HAT/DAZ/HLD503} which covers compliance notation processing. The implementation of this detailed design can be found in \cite{ISS/HAT/DAZ/IMP504}.

The web clause recogniser is called by the basic {\Product} reader/writer upon recognition of the start symbol for (non-Z) web clauses. The recogniser provided here takes the input which has at the point of being called has already been processed using the compliance notation reader (see \cite{ISS/HAT/DAZ/DTD512}).
The recogniser invokes the lexical analyser \cite{ISS/HAT/DAZ/DTD501}, the parser \cite{ISS/HAT/DAZ/DTD503} and the Z document generation function \cite{ISS/HAT/DAZ/DTD507} in that order.

\subsection{Compliance}

The functionality whose design is discussed in this document lies outside the scope of the compliance argument.

%\subsubsection{Dependencies}
%\subsubsection{Possible Enhancements}
\subsubsection{Deficiencies}
None known.


\section{THE SIGNATURE}
=DOC
signature ÛWebClausesÝ = sig
=DESCRIBE
This is the signature for the structure containing the web clause recogniser for compliance notation.
=ENDDOC

\section{GENERATION OF THE WEB CLAUSE HYPERTEXT LINKS}

=DOC
val Ûoutput_hypertext_edit_scriptÝ : {out_file : string} -> unit
val Ûreset_hypertext_infoÝ : unit -> unit
=DESCRIBE
$output\_hypertext\_edit\_script$ produces an edit script from a processed literate script. The edit script is placed in a file with name $out\_file$.

The edit script will introduce hypertext links between specification statements or K-Slots, and their corresponding expansion paragraphs.

$reset\_hypertext\_info$ resets the database of information collected about hypertext links which is created when a literate script is read. 
=ENDDOC

\section{THE RECOGNISER FUNCTION}
=DOC
val Ûcn_recogniserÝ : string * string * Lex.INPUT list * string -> unit;
=DESCRIBE
The first argument of $cn\_recogniser$ is the start symbol which should be the symbol 
=INLINEFT
 ¹
=TEX
. The name of the language (``CN'') is the second argument. The third argument is the input which is generated by the compliance notation reader. The final argument is expected to be the finish symbol, 
=INLINEFT
 °
=TEX
. All these arguments are filled in by the reader/writer. It is not intended that the user should call this function directly.
=SEEALSO
$cn\_reader$
=FAILURE
504010	Incorrect symbols starting or ending of CN quotation: `?0`, `?1`, `?2`
=ENDDOC

\section{EPILOGUE}
=SML
end; (* signature WebClauses *)
=TEX

\section{TEST POLICY}
The function $cn\_recogniser$ described in this document is to be tested according to the
criteria identified in \cite{ISS/HAT/DAZ/PLN003}.

\small
\twocolumn[\section{INDEX}]
\printindex

\end{document}



