% imp506.doc   %Z% $Date$ $Revision$ $RCSfile$
=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{DAZ PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Implementation of the Specification Database}  %% Mandatory field
\TPPref{ISS/HAT/DAZ/IMP506}  %% Mandatory field
\def\SCCSversion{$Revision$%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$%
}}
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{D.J.~King & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{D.J.~King & DAZ Team Leader}
\TPPabstract{
This document contains the implementation for the SPARK paragraph processor.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
	Library}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}

\item[Issue \SCCSversion, \FormatDate{$Date$%
} ] Initial Draft.

\end{description}
\subsection{Changes Forecast}
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document contains the implementation for the parser for
HOL/Z.
The detailed design for this material is in \cite{ISS/HAT/DAZ/DTD506}.
\subsection{Introduction}
\subsection{Purpose and Background}
\subsection{Algorithms}
\subsection{Dependencies}
\subsection{Known Deficencies}
\subsection{Possible Enhancements}
=TEX
=TEX
=TEX
\section{PREAMBLE}
SML
structure €CNSpecificationDatabase› : CNSpecificationDatabase = struct
open CNTypes CNEnvironmentTypes;
=TEX
\section{INTERFACE}
=SML
type €REFINEMENT_STEP› = {
	spec : SPEC_LAB,
	refinedby : STATEMENT OPT
	};

val €refinement_steps› : REFINEMENT_STEP E_DICT ref = ref (initial_e_dict);
=TEX
=SML
fun €rstep_add_specification› (index : string) (sp : SPEC_LAB) : unit = (
	refinement_steps := e_enter index {spec=sp, refinedby=Nil, vconds=[]}
		(!refinement_steps)
);
=TEX
=SML
fun €rstep_refine_specification› (index : string) (rb : STATEMENT) : VC list = (
let	val rstep = case e_lookup index (!refinement_steps) of
			Value r => r
			|_ => fail "rstep_refine_specification" 99999 [];
	val spec = #spec rstep;
	val side = refinement_steps := e_enter index
		{spec= spec, refinedby=Value rb}
		(!refinement_steps);
in
	vconds
end
);
=SML
=TEX
\section{EPILOGUE}
=SML
end (* of structure CNSpecificationDatabase *);
=TEX
\small
\twocolumn[\section{INDEX}]
\printindex
\end{document}

val €speclab2› : Speclab = simple_speclab(ÒtrueÆ, Òc ç {aâ0, bâ0} ± aâ0 º c ± bâ0 º cÆ);

rstep_add_specification "(1)" speclab1;
rstep_refine_specification "(1)" stmt1;


rstep_add_specification "(2)" speclab2;
rstep_refine_specification "(2)" stmt2;


