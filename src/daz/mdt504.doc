=IGN
********************************************************************************
mdt504.doc: this file is part of the PPDaz system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
% mdt504.doc %Z% $Date: 2006/03/28 16:48:35 $ $Revision: 1.19 $ $RCSfile: mdt504.doc,v $
=TEX
% TQtemplate.tex
\documentstyle[hol1,11pt,TQ,hyperbasics]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{DAZ PROJECT} %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Module Tests: Web Clause Processor} %% Mandatory field
\TPPref{ISS/HAT/DAZ/MDT504} %% Mandatory field
\def\SCCSversion{$Revision: 1.19 $
}
\TPPissue{\SCCSversion} %% Mandatory field
\TPPdate{\FormatDate{$Date: 2006/03/28 16:48:35 $
}} %% Mandatory field (with sensible default)
\TPPstatus{Draft}   %% Mandatory field
\TPPtype{Specification}
\TPPkeywords{HOL}
%\TPPauthor{A.C.~Hayward & WIN01} %% Mandatory field
\TPPauthors{D.J.~King & WIN01\\A.C.~Hayward & WIN01}
\TPPauthorisation{R.B.~Jones & HAT Manager}
\TPPabstract{This document comprises test cases and test code/data for testing the Web Clause Processor as described in the document ISS/HAT/DAZ/DTD504.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
Library \\ A.C. Hayward\\ D.J. King}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : Lemma 1 Ltd. \number\year

\end{centering}

\pagebreak
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{daz,fmu}

\subsection{Changes History} % to get section number `0.3'
\begin{description}

\item[Issue 1.1, \FormatDate{94/07/29}]
First version.
\item[Issue 1.2, \FormatDate{94/08/01}]
Now working properly.
\item[Issue 1.7]
IUCT WP 7 tweak.
\item[Issue 1.8-9]
IUCT WP 2 changes.
\item[Issue 1.10]
IUCT WP 4 changes.
\item[Issue 1.11]
Corrected {\LaTeX} error and inserted pagebreaks.
\item[Issue 1.12]
{\tt xhdvi} now superseded by recent versions of {\tt xdvi}.
\item[Issue 1.13] Copyright and banner updates for open source release.
\item[Issue 1.14] DAZ-specific updates to banner for open source release
\item[Issue 1.15] DAZ-specific updates to banner for open source release
\item[Issue 1.16] Made the instructions it outputs more accurate for the usual testing environment.
\item[Issue 1.17] Added some tests for the label utilities.
\item[Issue 1.18] Allowed for automated state management.
\item[Issue 1.19] Allowed for ``1 theory per subprogram''.
\item[Issue 1.20] accommodated enhancement 139 - 1-theory-per-subprogram.
\end{description}
\subsection{Changes Forecast}
None.
\pagebreak
\section{GENERAL}
\subsection{Scope}

This document comprises test cases and test code/data for testing the Web Clause Processor as specified in \cite{ISS/HAT/DAZ/DTD504}.

\subsection{Introduction}

\subsubsection{Background and Purpose}
This document is intended to supply module tests for the Web Clause Processor  as defined in \cite{ISS/HAT/DAZ/DTD504} and implemented in \cite{ISS/HAT/DAZ/IMP504}. The tests are intended to meet the requirements for tests identified in the quality plan \cite{ISS/HAT/DAZ/PLN003}.

\subsubsection{Dependencies}

These tests depend on the test harness as implemented in DS/FMU/IED/IMP013, and its corresponding detailed design document, DS/FMU/IED/DTD013.

\subsubsection{Possible Enhancements}

None known.

\subsubsection{Deficiencies}

There are no known deficiencies.

\section{INITIALISATION}

First we need to load the test harness and initialise it.

=SML
use_file "dtd013";
use_file "imp013";
init_mt_results();
=TEX

\section{PREAMBLE}

Set up the theory database as necessary.

=SML
open_theory "cn";
force_delete_theory "FOURTH_ROOT'proc" handle (_) => ();
new_script{name="FOURTH_ROOT'proc"};
WebClauses.reset_hypertext_info();
=TEX

\section{TESTING WebClauses}

The structure WebClauses has one visible function: $cn\_recogniser$.  This takes the input from the reader writer, and passes it through the lexical analyser, the parser and then the Z document generator in that order.  To test it we give a literate script.  This has been taken from \cite{DRA/CIS/CSE3/SWI/WP/8/2}.
¹CN
procedure FOURTH_ROOT is
N,F : INTEGER;
§ square root function ¢				(1)
begin
„ F [N ¾ 0, F ** 4 ¼ (F + 1) ** 4]			(2)
end FOURTH_ROOT;
°
=SML
store_mt_results
mt_run [
    ("LabelUtilities.0",
	LabelUtilities.extract_labels_from_web_clause,
	!CNZGenerator.diag_web_clause,
	(Nil, ["1", "2"]))];
=TEX
\newpage
¹CN
(1) é function SQRT (X : INTEGER) return INTEGER
˜ [X ¾ 0, (SQRT(X)) ** 2 ¼ X < (SQRT(X) + 1) ** 2]
is
LO : INTEGER := 0;
HI : INTEGER;
§ local variables ¢					(3)
begin
LO := 0;
HI := X + 1;
while LO +1 /= HI
loop
„ LO, HI [LO ** 2 ¼ X < HI ** 2, LO ** 2 ¼ X < HI ** 2]		(4)
end loop;
return LO;
end sqrt;
°
=SML
store_mt_results
mt_run [
    ("LabelUtilities.1",
	LabelUtilities.extract_labels_from_web_clause,
	!CNZGenerator.diag_web_clause,
	(Value "1", ["__empty", "3", "4"]))];
=TEX
\newpage
¹CN
(2) Ã
F := SQRT(N);
F := SQRT(F);
°
=SML
store_mt_results
mt_run [
    ("LabelUtilities.2",
	LabelUtilities.extract_labels_from_web_clause,
	!CNZGenerator.diag_web_clause,
	(Value "2", []))];
=TEX


¹CN
(3) é
MID : INTEGER;
°
=SML
store_mt_results
mt_run [
    ("LabelUtilities.3",
	LabelUtilities.extract_labels_from_web_clause,
	!CNZGenerator.diag_web_clause,
	(Value "3", []))];
=TEX

¹CN
(4) Ã
MID := (LO + HI)/2;
if X >= MID ** 2
then LO := MID;
else HI := MID;
end if;
°
=SML
store_mt_results
mt_run [
    ("LabelUtilities.4",
	LabelUtilities.extract_labels_from_web_clause,
	!CNZGenerator.diag_web_clause,
	(Value "4", []))];
=TEX
\newpage

To check the Web Clause Processor, we check to see if various objects have been defined in the current theory as a result of compiling the sections of compliance notation above.

=SML
val conj_names1 = ["vc2_1"];
val conj_names2 = ["vc4_2", "vc4_1", "vcFOURTH_ROOToSQRT_4", "vcFOURTH_ROOToSQRT_3",
      "vcFOURTH_ROOToSQRT_2", "vcFOURTH_ROOToSQRT_1"];
fun get_conj_names (xs : (string list * (int * TERM)) list) : string list =
    map (fn (a,b) => hd a) xs;
val axiom_names = ["SQRT"];
fun get_axiom_names (xs : (string list * THM) list) : string list =
    map (fn (a,b) => hd a) xs;
get_conjectures "FOURTH_ROOT'proc";
store_mt_results mt_run [
    ("Conjectures 1", get_conj_names, (get_conjectures "FOURTH_ROOT'proc"), conj_names1),
    ("Conjectures 2", get_conj_names, (get_conjectures "FOURTH_ROOToSQRT'func"), conj_names2)];
store_mt_results mt_run [
    ("Axioms", get_axiom_names, (get_axioms "FOURTH_ROOT'proc"), axiom_names)];
=TEX


\section{HYPERTEXT TESTING}

The following script is provided to check that the hypertext edit scripts

=SML
store_mt_results mt_run [
    ("Hypertext", WebClauses.output_hypertext_edit_script, {out_file="mdt504.scr"}, ())];

=TEX
\section{LABEL UTILITIES}
=SML


=SML
diag_line(summarize_mt_results());
diag_string("TODO: Use 'docdvi -f daz.svf -e mdt504.scr mdt504; xdvi mdt504' to check hypertext links.");

=TEX

\end{document}
