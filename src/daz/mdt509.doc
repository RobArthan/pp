=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Module Tests for Z Toolkit Extensions}  %% Mandatory field
\TPPref{ISS/HAT/DAZ/MDT509}  %% Mandatory field
\def\SCCSversion{$Revision$
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$%
}}
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{SML Literate Script}
\TPPkeywords{}
%\TPPauthor{R.D.~Arthan & WIN01}  %% Mandatory field
\TPPauthor{R.D.~Arthan & WIN01}
\TPPauthorisation{D.J.~King & DAZ Manager}
\TPPabstract{This document contains tests for the material defined
in ISS/HAT/DAZ/DTD105\cite{ISS/HAT/DAZ/DTD509}.}
\TPPdistribution{\parbox[t]{4.0in}{%
	    Library
}}
\begin{document}
\makeTPPfrontpage
\vfill
\begin{centering}
\bf Copyright \copyright\ : International Computers Ltd \number\year
\end{centering}
\pagebreak
\section{Document control}
\subsection{Contents list}
\tableofcontents
\subsection{Document cross references}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes history} 
\begin{description}
\item[\SCCSversion~(\FormatDate{$Date$%}
)]]
First draft.
\end{description}
\subsection{Changes forecast}
None.
\section{GENERAL}
\subsection{Scope}
This document contains module tests for the module defined 
in \cite{ISS/HAT/DAZ/DTD509}.
\subsection{Introduction}
\subsubsection{Background and Purpose}
See \cite{ISS/HAT/DAZ/DTD509}. The tests are intended to meet
the requirements for module tests identified in the quality plan
\cite{ISS/HAT/DAZ/PLN002}.
\subsubsection{Dependencies}
These tests depend on
the test harness as implemented in DS/FMU/IED/IMP013, and
its corresponding detailed design document, DS/FMU/IED/DTD013.
\subsubsection{Possible Enhancements}
None known.
\subsubsection{Deficiencies}
None known.
\section{TEST CASES}
In addition to checking the theory design, we identify the following test cases:

\begin{description}
\item[cec.1]
The conversions for constant expression evaluation (correct operation)
\item[cec.2]
The conversions for constant expression evaluation (error cases)
\item[pc.1]
the proof contexts (successful operation)
\end{description}

(Examination of the code shows that the syntax functions are (a) essentially automatically generated using already tested code and (b) exercised in the conversions. They are therefore not explicitly tested here.)

\section{CHECKING THE THEORY DESIGN}
The theory design:
=SML
use_file "dtd013.sml";
use_file "imp013.sml";
init_mt_results();
(*
use_file "dtd509.tch";
store_mt_results mt_run [("theory design of Z Arithmetic Tools",
	theory_check_success,
	(),
	true)];
*)
=TEX
\section{THE TESTS}
=SML
open_theory"cn";
set_pc"z_predicates";
force_delete_theory "mdt509" handle Fail _ => ();
new_theory"mdt509";
=TEX
\subsection{Group cec.1}
The conversions for constant expression evaluation (correct operation)
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("cec.1.1.1", cn_intdiv_conv, ñ12 intdiv 5®, ñ2®),
	("cec.1.1.2", cn_intdiv_conv, ñ12 intdiv ~5®, ñ~2®),
	("cec.1.1.3", cn_intdiv_conv, ñ~12 intdiv 5®, ñ~2®),
	("cec.1.1.4", cn_intdiv_conv, ñ~12 intdiv ~5®, ñ2®),
	("cec.1.1.5", cn_intdiv_conv, ñ10 intdiv 2®, ñ5®),
	("cec.1.1.6", cn_intdiv_conv, ñ10 intdiv ~2®, ñ~5®),
	("cec.1.1.7", cn_intdiv_conv, ñ~10 intdiv 2®, ñ~5®),
	("cec.1.1.8", cn_intdiv_conv, ñ~10 intdiv ~2®, ñ5®)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("cec.1.2.1", cn_rem_conv, ñ14 rem 5®, ñ4®),
	("cec.1.2.2", cn_rem_conv, ñ14 rem ~5®, ñ4®),
	("cec.1.2.3", cn_rem_conv, ñ~14 rem 5®, ñ~4®),
	("cec.1.2.4", cn_rem_conv, ñ~14 rem ~5®, ñ~4®),
	("cec.1.2.5", cn_rem_conv, ñ10 rem 2®, ñ0®),
	("cec.1.2.6", cn_rem_conv, ñ10 rem ~2®, ñ0®),
	("cec.1.2.7", cn_rem_conv, ñ~10 rem 2®, ñ0®),
	("cec.1.2.8", cn_rem_conv, ñ~10 rem ~2®, ñ0®)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("cec.1.3.1", cn_intmod_conv, ñ14 intmod 5®, ñ4®),
	("cec.1.3.2", cn_intmod_conv, ñ14 intmod ~5®, ñ~1®),
	("cec.1.3.3", cn_intdiv_conv, ñ~14 intmod 5®, ñ1®),
	("cec.1.3.4", cn_intmod_conv, ñ~14 intmod ~5®, ñ~4®),
	("cec.1.3.5", cn_intmod_conv, ñ10 intmod 2®, ñ0®),
	("cec.1.3.6", cn_intmod_conv, ñ10 intmod ~2®, ñ0®),
	("cec.1.3.7", cn_intmod_conv, ñ~10 intmod 2®, ñ0®),
	("cec.1.3.8", cn_intmod_conv, ñ~10 intmod ~2®, ñ0®)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("cec.1.4.1", cn_star_star_conv, ñ2 ** 0®, ñ1®),
	("cec.1.4.2", cn_star_star_conv, ñ3 ** 0®, ñ1®),
	("cec.1.4.3", cn_star_star_conv, ñ4 ** 1®, ñ4®),
	("cec.1.4.4", cn_star_star_conv, ñ4 ** 2®, ñ16®),
	("cec.1.4.5", cn_star_star_conv, ñ5 ** 3®, ñ125®),
	("cec.1.4.6", cn_star_star_conv, ñ6 ** 3®, ñ216®),
	("cec.1.4.7", cn_star_star_conv, ñ6 ** 4®, ñ1296®),
	("cec.1.4.8", cn_star_star_conv, ñ0 ** 0®, ñ1®),
	("cec.1.4.9", cn_star_star_conv, ñ0 ** 1®, ñ0®),
	("cec.1.4.10", cn_star_star_conv, ñ0 ** 5®, ñ0®)
];
=TEX
\subsection{Group cec.2}
The conversions for constant expression evaluation (error cases)
=SML
store_mt_results_show
mt_run_fail [
("cec.2.1", cn_intdiv_conv, ¬x:ú®,
		gen_fail_msg"cn_intdiv_conv" 509011 [string_of_term ¬x:ú®]),
("cec.2.2", cn_rem_conv, ¬x:ú®,
		gen_fail_msg"cn_rem_conv" 509012 [string_of_term ¬x:ú®]),
("cec.2.3", cn_intmod_conv, ¬x:ú®,
		gen_fail_msg"cn_intmod_conv" 509013 [string_of_term ¬x:ú®]),
("cec.2.4", cn_star_star_conv, ¬x:ú®,
		gen_fail_msg"cn_star_star_conv" 509014 [string_of_term ¬x:ú®])
];
=TEX
=TEX
=TEX
\section{SUMMARY OF RESULTS}
=SML
diag_string(summarize_mt_results());
=TEX

\end{document}

