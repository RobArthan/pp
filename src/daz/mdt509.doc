=IGN
********************************************************************************
mdt509.doc: this file is part of the PPDaz system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Module Tests for Z Toolkit Extensions}  %% Mandatory field
\TPPref{ISS/HAT/DAZ/MDT509}  %% Mandatory field
\def\SCCSversion{$Revision: 1.10 $
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date: 2005/09/01 13:27:49 $%
}}
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{SML Literate Script}
\TPPkeywords{}
%\TPPauthor{R.D.~Arthan & WIN01}  %% Mandatory field
\TPPauthor{R.D.~Arthan & WIN01}
\TPPauthorisation{D.J.~King & DAZ Manager}
\TPPabstract{This document contains tests for the material defined
in ISS/HAT/DAZ/DTD105\cite{ISS/HAT/DAZ/DTD509}.}
\TPPdistribution{\parbox[t]{4.0in}{%
	    Library
}}
\begin{document}
\makeTPPfrontpage
\vfill
\begin{centering}
\bf Copyright \copyright\ : Lemma 1 Ltd. \number\year
\end{centering}
\pagebreak
\section{Document control}
\subsection{Contents list}
\tableofcontents
\subsection{Document cross references}
\bibliographystyle{fmu}
\bibliography{fmu,daz}

\subsection{Changes history}
\begin{description}
\item[Issues 1.1-1.3] Initial drafts.
\item[Issue 1.4]
Added proof context cn1.
\item[Issue 1.4]
Proof context cn1 now defined elsewhere.
\item[Issue 1.6] Copyright and banner updates for open source release.
\item[Issue 1.7] DAZ-specific updates to banner for open source release
\item[Issue 1.8] DAZ-specific updates to banner for open source release
\item[Issue 1.9] The Z universal set is now called É
\item[Issue 1.10] Allowed for corrected precedence of logical negation.
\item[Issue 1.11] Allowed for automated state management.
\end{description}
\subsection{Changes forecast}
None.
\section{GENERAL}
\subsection{Scope}
This document contains module tests for the module defined
in \cite{ISS/HAT/DAZ/DTD509}.
\subsection{Introduction}
\subsubsection{Background and Purpose}
See \cite{ISS/HAT/DAZ/DTD509}. The tests are intended to meet
the requirements for module tests identified in the quality plan
\cite{ISS/HAT/DAZ/PLN002}.
\subsubsection{Dependencies}
These tests depend on
the test harness as implemented in DS/FMU/IED/IMP013, and
its corresponding detailed design document, DS/FMU/IED/DTD013.
\subsubsection{Possible Enhancements}
None known.
\subsubsection{Deficiencies}
None known.
\section{TEST CASES}
In addition to checking the theory design, we identify the following test cases:

\begin{description}
\item[cec.1]
The conversions for constant expression evaluation (correct operation)
\item[cec.2]
The conversions for constant expression evaluation (error cases)
\item[pc.1]
the proof contexts (successful operation)
\end{description}

(Examination of the code shows that the syntax functions are (a) essentially automatically generated using already tested code and (b) exercised in the conversions. They are therefore not explicitly tested here.)

\section{CHECKING THE THEORY DESIGN}
The theory design:
=SML
use_file "dtd013.sml";
use_file "imp013.sml";
init_mt_results();
use_file "dtd509.tch";
store_mt_results mt_run [("theory design of Z Arithmetic Tools",
	theory_check_success,
	(),
	true)];
=TEX
\section{THE TESTS}
=SML
open_theory"cn";
set_pc"z_predicates";
force_delete_theory "mdt509" handle Fail _ => ();
new_theory"mdt509";
=TEX
\subsection{Group cec.1}
The conversions for constant expression evaluation (correct operation)
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("cec.1.1.1", cn_intdiv_conv, Ò12 intdiv 5Æ, Ò2Æ),
	("cec.1.1.2", cn_intdiv_conv, Ò12 intdiv ~5Æ, Ò~2Æ),
	("cec.1.1.3", cn_intdiv_conv, Ò~12 intdiv 5Æ, Ò~2Æ),
	("cec.1.1.4", cn_intdiv_conv, Ò~12 intdiv ~5Æ, Ò2Æ),
	("cec.1.1.5", cn_intdiv_conv, Ò10 intdiv 2Æ, Ò5Æ),
	("cec.1.1.6", cn_intdiv_conv, Ò10 intdiv ~2Æ, Ò~5Æ),
	("cec.1.1.7", cn_intdiv_conv, Ò~10 intdiv 2Æ, Ò~5Æ),
	("cec.1.1.8", cn_intdiv_conv, Ò~10 intdiv ~2Æ, Ò5Æ)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("cec.1.2.1", cn_rem_conv, Ò14 rem 5Æ, Ò4Æ),
	("cec.1.2.2", cn_rem_conv, Ò14 rem ~5Æ, Ò4Æ),
	("cec.1.2.3", cn_rem_conv, Ò~14 rem 5Æ, Ò~4Æ),
	("cec.1.2.4", cn_rem_conv, Ò~14 rem ~5Æ, Ò~4Æ),
	("cec.1.2.5", cn_rem_conv, Ò10 rem 2Æ, Ò0Æ),
	("cec.1.2.6", cn_rem_conv, Ò10 rem ~2Æ, Ò0Æ),
	("cec.1.2.7", cn_rem_conv, Ò~10 rem 2Æ, Ò0Æ),
	("cec.1.2.8", cn_rem_conv, Ò~10 rem ~2Æ, Ò0Æ)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("cec.1.3.1", cn_intmod_conv, Ò14 intmod 5Æ, Ò4Æ),
	("cec.1.3.2", cn_intmod_conv, Ò14 intmod ~5Æ, Ò~1Æ),
	("cec.1.3.3", cn_intmod_conv, Ò~14 intmod 5Æ, Ò1Æ),
	("cec.1.3.4", cn_intmod_conv, Ò~14 intmod ~5Æ, Ò~4Æ),
	("cec.1.3.5", cn_intmod_conv, Ò10 intmod 2Æ, Ò0Æ),
	("cec.1.3.6", cn_intmod_conv, Ò10 intmod ~2Æ, Ò0Æ),
	("cec.1.3.7", cn_intmod_conv, Ò~10 intmod 2Æ, Ò0Æ),
	("cec.1.3.8", cn_intmod_conv, Ò~10 intmod ~2Æ, Ò0Æ)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("cec.1.4.1", cn_star_star_conv, Ò2 ** 0Æ, Ò1Æ),
	("cec.1.4.2", cn_star_star_conv, Ò3 ** 0Æ, Ò1Æ),
	("cec.1.4.3", cn_star_star_conv, Ò4 ** 1Æ, Ò4Æ),
	("cec.1.4.4", cn_star_star_conv, Ò4 ** 2Æ, Ò16Æ),
	("cec.1.4.5", cn_star_star_conv, Ò5 ** 3Æ, Ò125Æ),
	("cec.1.4.6", cn_star_star_conv, Ò6 ** 3Æ, Ò216Æ),
	("cec.1.4.7", cn_star_star_conv, Ò6 ** 4Æ, Ò1296Æ),
	("cec.1.4.8", cn_star_star_conv, Ò0 ** 0Æ, Ò1Æ),
	("cec.1.4.9", cn_star_star_conv, Ò0 ** 1Æ, Ò0Æ),
	("cec.1.4.10", cn_star_star_conv, Ò0 ** 5Æ, Ò0Æ)
];
=TEX
\subsection{Group cec.2}
The conversions for constant expression evaluation (error cases)
=SML
store_mt_results_show
mt_run_fail [
("cec.2.1", cn_intdiv_conv, ¨x:˙Æ,
		gen_fail_msg"cn_intdiv_conv" 509011 [string_of_term ¨x:˙Æ]),
("cec.2.2", cn_rem_conv, ¨x:˙Æ,
		gen_fail_msg"cn_rem_conv" 509012 [string_of_term ¨x:˙Æ]),
("cec.2.3", cn_intmod_conv, ¨x:˙Æ,
		gen_fail_msg"cn_intmod_conv" 509013 [string_of_term ¨x:˙Æ]),
("cec.2.4", cn_star_star_conv, ¨x:˙Æ,
		gen_fail_msg"cn_star_star_conv" 509014 [string_of_term ¨x:˙Æ])
];
=TEX
=TEX
\subsection{pc.1}
the proof contexts (successful operation)
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("pc.1.1.1", PC_C1 "'cn" rewrite_conv[], Òx mem yÆ, ÒBoolean (ê(x ç y))Æ),
	("pc.1.1.2", PC_C1 "'cn" rewrite_conv[], Òx notmem yÆ, ÒBoolean (ê(≥x ç y))Æ),
	("pc.1.1.3", PC_C1 "'cn" rewrite_conv[], Òx eq yÆ, ÒBoolean (ê(x = y))Æ),
	("pc.1.1.4", PC_C1 "'cn" rewrite_conv[], Òx noteq yÆ, ÒBoolean (ê(≥x = y))Æ),
	("pc.1.1.5", PC_C1 "'cn" rewrite_conv[], Òx less yÆ, ÒBoolean (ê(x < y))Æ),
	("pc.1.1.6", PC_C1 "'cn" rewrite_conv[], Òx less_eq yÆ, ÒBoolean (ê(x º y))Æ),
	("pc.1.1.7", PC_C1 "'cn" rewrite_conv[], Òx greater yÆ, ÒBoolean (ê(x > y))Æ),
	("pc.1.1.8", PC_C1 "'cn" rewrite_conv[], Òx greater_eq yÆ, ÒBoolean (ê(x æ y))Æ)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("pc.1.2.1", PC_C1 "'cn" rewrite_conv[], Ònot(Boolean p)Æ, ÒBoolean (ê(≥p))Æ),
	("pc.1.2.2", PC_C1 "'cn" rewrite_conv[], ÒBoolean p and Boolean qÆ, ÒBoolean (ê(p ± q))Æ),
	("pc.1.2.3", PC_C1 "'cn" rewrite_conv[], ÒBoolean p or Boolean qÆ, ÒBoolean (ê(p ≤ q))Æ),
	("pc.1.2.4", PC_C1 "'cn" rewrite_conv[], ÒBoolean p xor Boolean qÆ, ÒBoolean (ê(≥(p § q)))Æ),
	("pc.1.2.5", PC_C1 "'cn" rewrite_conv[], ÒBoolean p = Boolean qÆ, Ò(ê(p § q))Æ)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("pc.1.3.1", PC_C1 "cn" rewrite_conv[], ÒN eq 0 or not (N less 4) = TRUEÆ, ÒN = 0 ≤ 4 º NÆ),
	("pc.1.3.2", PC_C1 "cn" rewrite_conv[], ÒFALSE ç BOOLEANÆ, ÒtrueÆ),
	("pc.1.3.3", PC_C1 "cn" rewrite_conv[], Ò(not 1 less 2) or 3 mem {1,2,3}Æ, ÒBoolean trueÆ),
	("pc.1.3.4", PC_C1 "cn" rewrite_conv[], Ò(17 div 2 less (90 rem 100))Æ, ÒBoolean trueÆ),
	("pc.1.3.5", PC_C1 "cn" rewrite_conv[], ÒBOOLEANÆ, Ò{Boolean false, Boolean true}Æ),
	("pc.1.3.6", PC_C1 "cn" rewrite_conv[], ÒBOOLEANvFIRSTÆ, ÒBoolean falseÆ),
	("pc.1.3.7", PC_C1 "cn" rewrite_conv[], ÒBOOLEANvLASTÆ, ÒBoolean trueÆ),
	("pc.1.3.8", PC_C1 "cn" rewrite_conv[], ÒBOOLEANvSUCCÆ, Ò{Boolean false Ì Boolean true}Æ),
	("pc.1.3.9", PC_C1 "cn" rewrite_conv[], ÒBOOLEANvPREDÆ, Ò{Boolean true Ì Boolean false}Æ),
	("pc.1.3.10", PC_C1 "cn" rewrite_conv[], ÒBOOLEANvPOSÆ, Òid {Boolean false, Boolean true}Æ),
	("pc.1.3.11", PC_C1 "cn" rewrite_conv[], ÒBOOLEANvVALÆ, Òid {Boolean false, Boolean true}Æ)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("pc.1.4.1", PC_C1 "cn_ext" rewrite_conv[],
		Ò{x:˙ | x intmod 3 = 0} = {x:˙ ∑ 3*x}Æ,
		Òµx1:É∑x1 intmod 3 = 0 § (∂x:˙∑3 * x = x1)Æ)
];
=IGN

=TEX
=TEX
\section{SUMMARY OF RESULTS}
=SML
diag_string(summarize_mt_results());
=TEX

\end{document}

