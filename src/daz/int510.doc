% %Z% $Date$ $Revision$ $RCSfile$
=IGN

use_file"zz";

=TEX
\documentstyle[hol1,11pt,TQ,hyperbasics]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{DAZ PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Hypertext Facilities Test Material}  %% Mandatory field
\def\TPPheadtitle{Hypertext Facilities Test Material}
\TPPref{ISS/HAT/DAZ/INT510}  %% Mandatory field
\def\SCCSversion{$Revision$%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$%
}}  %% Mandatory field (with sensible default)
\TPPstatus{Informal}
%\TPPstatus{Informal}
\TPPtype{Technical}
%\TPPkeywords{HOL}
\TPPauthor{D.J.~King & HAT Team}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.~Arthan & WIN01}
\TPPabstract{%
This document contains the test material for the hypertext link generation facility provided by the function $output\_hypertext\_edit\_script$.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
      Library}}

%\TPPclass{CLASSIFICATION}
\newfont{\icllogo}{icllogo50}
\def\TPPheadlhs{$\vcenter{\halign{##\cr\icllogo ICL\cr}}$}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\pagebreak
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu,daz}

\subsection{Changes History}  % to get section number `0.3'

\begin{description}

\item[Issues 1.1 - ] Initial Drafts.

\end{description}

\subsection{Changes Forecast}

None.

\pagebreak

\section{GENERAL}

\subsection{Scope}

This document contains test data for the Compliance Tool as specified in \cite{ISS/HAT/DAZ/HLD501}.

\subsection{Introduction}

This document contains compliance notation scripts to test the hypertext linking facilities.

\section{LITERAL SCRIPTS}


Load the test harness.

=IGN
use_file "dtd013";
use_file "imp013";
=TEX

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
=SML
fun clean_up () = (
	let	val thys = get_descendants "cn" less "cn";
		fun del_thy thy = (force_delete_theory thy handle Fail _ => ());
	in	map del_thy thys
	end;	()
);
=TEX

\section{TESTING FOR ALL TYPES OF EXPANSION}

=SML
clean_up();
force_delete_theory"hyper.1" handle Fail _ => ();
new_script{name = "hyper.1", state = initial_cn_state};
=TEX


\subsection{Compilation Unit}

¹CN
Ü	§ compilation unit ¢					(101)	
°

¹CN
Ü  procedure PROC0
Ü  -- an example with no k-slots or spec. statements
Ü  is
Ü  	DUMMY: INTEGER;
Ü  begin
Ü  	null;
Ü  end PROC0;
°

¹CN
Ü  procedure PROC1 (X : INTEGER)
Ü  -- An example with a k-slot and a specification statement
Ü  is
Ü  	§ PROC1 declarations ¢				(201)
Ü  begin
Ü  	„ X [X = X‰0 * 2]					(202)
Ü  end PROC1;
°

¹CN
Ü  function FUNC1 (X : INTEGER) return INTEGER
Ü  is
Ü  begin
Ü  	„ FUNC1 [FUNC1 X = X * 2]				(301)
Ü  end FUNC1;
°

¹CN
Ü  package PACK1
Ü  is
Ü  	procedure PROC2 (X : INTEGER)
Ü  	„ X [X = 0];
Ü  	
Ü  	function FUNC2 (X : INTEGER) return INTEGER
Ü  	„ FUNC2 [FUNC2 X = X * 2];
Ü   
Ü  end PACK1;
°

¹CN
Ü	package  PACK2
Ü	is
Ü  		procedure PROC21 (X : INTEGER)
Ü  		„ X [X = 21];
Ü   
Ü  	end PACK2;
°

ÿ Sch üüüüüüüüüüüüüüü
Ü comp : ú;
Ü T : ú
ˆüüüüüüüüüüüüüü

\newpage
¹CN
Ü  package body PACK1
Ü  is
Ü	package body PACK2 is
Ü
Ü  		procedure PROC21 (X : INTEGER)
Ü  			„ X [X = 21]
Ü		is
Ü		begin
Ü			„ X [ X = 21]				(510)
Ü		end PROC21;
Ü	begin	COMP := 0;
Ü  	end PACK2;
Ü  	procedure PROC2 (X : INTEGER)
Ü  	is
Ü		§ PROC2 declarations ¢			(501)
Ü  	begin
Ü  		„ {X ¾ 0}					(502)
Ü  	end PROC2;
Ü  	
Ü  	function FUNC2 (X : INTEGER) return INTEGER
Ü  	is
Ü		§ FUNC2 declarations ¢			(503)
Ü  	begin
Ü  		„ FUNC2 [FUNC2 X = X * 2]			(504)
Ü  	end FUNC2;
Ü  
Ü  	procedure PROC3 (X, Y : INTEGER)
Ü  	„ Y {
Ü				Y = 0
Ü			²	Y ¾ X
Ü	     }
Ü  	is separate;
Ü  
Ü  	function FUNC3 (X : INTEGER) return INTEGER
Ü  	„ FUNC3 [FUNC3 X = X * 3]
Ü  	is separate;
Ü  
Ü  end PACK1;
°



\subsection{Replaced by Compilation Unit}

¹CN
Ü  (101) é	§ compilation unit 1 ¢			(102)
°

¹CN
Ü  (102) é
Ü  package P is
Ü  
Ü  	procedure PROC1 (X : INTEGER)
Ü  	„ X [X = 0];
Ü  	
Ü  	function FUNC1 (X : INTEGER) return INTEGER
Ü  	„ FUNC1 [FUNC1 X = X * 2];
Ü  
Ü  	§ kslot ¢						(103)
Ü  private
Ü  
Ü  	PRIV : INTEGER;
Ü  
Ü  	§ kslot ¢						(104)
Ü  end P;
°

\subsection{Replaced by Private Part}

¹CN
Ü  (104) é
Ü  
Ü  	PP : INTEGER;
°


\subsection{Replaced by Visible Part}

¹CN
Ü
Ü
Ü  (103) é
Ü  	X, Y : INTEGER;
Ü  
°

\subsection{Replaced by Arbitrary Ada}

¹CN
Ü   (510) !é
Ü		IO.OUPUT (`Diagnostic message`);
Ü   		-- Some Comment or other.
°

\newpage

\subsection{Replaced by Declaration}

¹CN
Ü  (201)
Ü  	é	K : INTEGER;
Ü   		§ more PROC1 declarations ¢			(203)
°

¹CN
Ü  (203)
Ü  	é	L : INTEGER;
Ü   		§ more PROC1 declarations ¢			(204)
°

\newpage
\subsection{Replaced by Statements}

¹CN
Ü  (202) é	§ statements ¢					(205)
°

¹CN
Ü  (205) é	§ statements ¢					(206)
Ü   		L := X * 4;
Ü		K := L / 2 + L / 2;
Ü		X := K / 2;
°

\subsection{Refined by Statement}

=IGN
	stmt
	for-non-static
	spec-i-vars
	log-con
	proc-i-vars
=TEX

¹CN
Ü  (301)
Ü	Ã	„ FUNC1 [	FUNC1 X = 
Ü				X
Ü				* 2]				(302)
°

¹CN
Ü  (302) Ã	null;
°

\section{TESTS FOR OTHER SPECIAL LEXICAL CLASSES}

\subsection{Z fragments in Specification Statements}

Expansion for $PACK1.PROC2$.
¹CN
Ü  (502) Ã
Ü		CON P : ú
Ü			· „ X
Ü				 [P=1, X=P]			(505)
°

¹CN
Ü  (505) -- some general comment
Ü          Ã
Ü		 „ X
Ü			 [X=1]					(506)
°

¹CN
Ü  (506) Ã
Ü		 „ X
Ü			 {true}					(507)
Ü
Ü			X := 1;
°

\subsection{Annotations}
¹CN
Ü  (507) Ã
Ü		--# xyz
Ü		 „ 
Ü			 [true]					(506)
°

\subsection{String and Character Literals}
¹CN
Ü  (204) é
Ü			STR : STRING;
°

¹CN
Ü  (206) é		§ more statements ¢			(207)
Ü			STR := "This is a string literal";
°

¹CN
Ü  (207) é		§ more statements ¢			(208)
Ü			CH := "X";
°


¹CN
Ü   (208) é		K :=  ûfirst §3,4,5¢ý;
°


\section{TESTING FOR MULTIPLE SCRIPTS}

=SML
output_hypertext_edit_script{out_file="int510a"};

val hyper1_state = get_cn_state();
new_script {name="hyper.2",state=hyper1_state};
=TEX

¹CN
Ü  separate (PACK1)
Ü  procedure PROC3 (X, Y : INTEGER)
Ü  	„ {Y = 0
Ü			²	Y ¾ X
Ü	     }
Ü  is
Ü  begin
Ü  	„ {Y = 0
Ü			²	Y ¾ X
Ü	     }							(601)
Ü  end PROC3;
°


¹CN
Ü  (601) Ã	null;
°

=SML
output_hypertext_edit_script{out_file="int510b.scr"};
val hyper2_st = get_cn_state();
=TEX
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


=DUMP int510.sh
docdvi -1 -e int510a.scr -e int510b.scr int510
=TEX
=SH
chmod +x int510.sh
=TEX


%%\twocolumn[\section{INDEX OF DEFINED TERMS}]
%%\printindex
\end{document}
=IGN

