=TEX
% TQtemplate.tex
\documentstyle[hol,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Module Tests for Lexical Analyser}  %% Mandatory field
\TPPref{DS/FMU/IED/MDT015}  %% Mandatory field
\def\SCCSversion{$Revision$
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$
}}  %% Mandatory field (with sensible default)
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{R.D.~Arthan & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.~Arthan & FST Team Leader}
\TPPabstract{
This document comprises test cases and test code/data for
testing the lexically analyser described in the document
DS/FMU/IED/DTD015.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
      Library \\ R.D. Arthan\\ D.J. King}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\pagebreak
\section{DOCUMENT CONTROL}
\subsection{Contents list}
\tableofcontents
\subsection{Document cross references}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes history}  % to get section number `0.3'
\begin{description}
\item[Issue 1.1]
First version, based on DS/FMU/IED/DTD011.
\item[Issue 1.2]
Changed tests in accordance with changed interface to module test harness.
\end{description}
\subsection{Changes forecast}
\pagebreak
\section{GENERAL}
\subsection{Scope}

This document comprises test cases and test code/data for
testing the module test harness specified in \cite{DS/FMU/IED/DTD015}.

\subsection{Introduction}

\subsubsection{Background and Purpose}
This document is intended to supply module test for the HOL lexical
analyser as defined in \cite{DS/FMU/IED/DTD015} and implemented
in \cite{DS/FMU/IED/IMP015}. The tests are intended to meet
the requirements for tests identified in the quality plan
\cite{DS/FMU/IED/PLN008}.

We have only one function to test, namely $lex$. The detailed design
refers to \cite{DS/FMU/IED/DEF001} for the behaviour of this function.
Therefore it is that document which largely defines the function to be tested.
The detailed design does indicate error conditions which should be
tested.

\subsubsection{Dependencies}

These tests depend on
the test harness as implemented in DS/FMU/IED/IMP013, and
its corresponding detailed design document, DS/FMU/IED/DTD013.

\subsubsection{Possible Enhancements}

None known.

\subsubsection{Deficiencies}

There are no known deficiencies.

\section{TEST CASES}
\begin{description}
\item[Lex.1]
Check that inputs consisting of a single terminal symbol
or an empty string are handled correctly.
\item[Lex.2]
Check that inputs consisting of a single identifier
with all possible combinations of fixity and binder status are handled correctly.
\item[Lex.3]
Check that inputs comprising each combination of two of 
alphanumeric identifier, symbolic identifier, terminator,
punctuation and antiquotation given in section 3.3 of \cite{DS/FMU/IED/DEF001},
with and without space or copula separation, are handled correctly.
\item[Lex.4]
Check that terminators embedded in identifiers are handled correctly.
\item[Lex.5]
Check that various forms of white space are handled correctly.
\item[Lex.6]
Check that the terminators list is handled as defined in the detailed design.
\item[Lex.7]
Check escape character mechanism.
\item[Lex.8]
Check special case identifiers (copula only, copula start and/or finish).
\item[Lex.9]
Exhibit the reachable errors identified in the detailed design
\end{description}
\section{PREAMBLE}
=SML
open ModuleTest;
open Lex;
init_mt_results();
=TEX
The following terminator lists and classifier are used for
most of the tests:
=SML
val terms1 = (map explode["„_1", "=ã1Â=", "=1=", "=", "+", "!"]);
val cl1 =
	(fn
		"=" => HTInOp {name="+", is_type_op=false, is_term_op=true, prec=10}
	|	"+" => HTInOp {name="+", is_type_op=true, is_term_op=true, prec=100}
	|	"div" => HTInOp {name="+", is_type_op=false, is_term_op=true, prec=110}
	|	"„_1" => HTBinder "„_1"
	|	"not" => HTPreOp {name="not", prec=5}
	|	"dash" => HTPostOp {name="dash", prec=105}
	|	_ => HTBlob);
=TEX
\section{THE TESTS}
\subsection{Case 1}
=SML
val lex_1 = lex terms1 cl1 o (fn s => [icl'ol_text s]);
=TEX
=SML
store_mt_results_show mt_run
[("Lex.1.1", lex_1, "and", [HTAnd, HTEos]),
("Lex.1.2", lex_1, "Ž", [HTBlob, HTEos]),
("Lex.1.3", lex_1, ":", [HTColon, HTEos]),
("Lex.1.4", lex_1, "else", [HTElse, HTEos]),
("Lex.1.5", lex_1, "if", [HTIf, HTEos]),
("Lex.1.6", lex_1, "in", [HTIn, HTEos]),
("Lex.1.7", lex_1, "{", [HTLbrace, HTEos]),
("Lex.1.8", lex_1, "(", [HTLbrack, HTEos]),
("Lex.1.9", lex_1, "let", [HTLet, HTEos]),
("Lex.1.10", lex_1, "[", [HTLsqbrack, HTEos]),
("Lex.1.11", lex_1, "}", [HTRbrace, HTEos]),
("Lex.1.12", lex_1, ")", [HTRbrack, HTEos]),
("Lex.1.13", lex_1, "]", [HTRsqbrack, HTEos]),
("Lex.1.14", lex_1, ";", [HTSemi, HTEos]),
("Lex.1.15", lex_1, "then", [HTThen, HTEos]),
("Lex.1.16", lex_1, "|", [HTVert, HTEos]),
("Lex.1.17", lex_1, "", [HTEos])];
=TEX
\subsection{Case 2}
=SML
val lex_2 = lex_1;
=TEX
=SML
store_mt_results_show mt_run
[("Lex.2.1", lex_2, "+", [HTInOp {name="+", is_type_op=true, is_term_op=true, prec=100}, HTEos]),
("Lex.2.2", lex_2, "not", [HTPreOp {name="not", prec=5}, HTEos]),
("Lex.2.3", lex_2, "dash", [HTPostOp {name="dash", prec=105}, HTEos]),
("Lex.2.4", lex_2, "„_1", [HTBinder "„_1", HTEos])];
=TEX
\subsection{Case 3}
=SML
fun HOL_text (_, x, _) = x;
val lex_3 = length o lex terms1 cl1;
val ty_3 = mk_vartype"'lex3";
val tm_3 = mk_var("lex3",ty_3);
=TEX
=SML
store_mt_results_show mt_run
[
 ("Lex.3.1.1", lex_3, »A_BC_D¼, 2),
 ("Lex.3.2.1", lex_3, »A_B|¼, 3),
 ("Lex.3.3.1", lex_3, »A_B!¼, 3),
 ("Lex.3.4.1", lex_3, »A_B#¼, 3),
 ("Lex.3.5.1", lex_3, »A_B^:ty_3¼, 3),
 ("Lex.3.1.2", lex_3, »@@@@C_D¼, 3),
 ("Lex.3.2.2", lex_3, »@@@@|¼, 3),
 ("Lex.3.3.2", lex_3, »@@@@!¼, 3),
 ("Lex.3.4.2", lex_3, »@@@@#¼, 2),
 ("Lex.3.5.2", lex_3, »@@@@^tm_3¼, 3),
 ("Lex.3.1.3", lex_3, »!C_D¼, 3),
 ("Lex.3.2.3", lex_3, »!|¼, 3),
 ("Lex.3.3.3", lex_3, »!!¼, 3),
 ("Lex.3.4.3", lex_3, »!#¼, 3),
 ("Lex.3.5.3", lex_3, »!^tm_3¼, 3),
 ("Lex.3.1.4", lex_3, »ŽC_D¼, 3),
 ("Lex.3.2.4", lex_3, »Ž|¼, 3),
 ("Lex.3.3.4", lex_3, »Ž!¼, 3),
 ("Lex.3.4.4", lex_3, »Ž#¼, 3),
 ("Lex.3.5.4", lex_3, »Ž^tm_3¼, 3),
 ("Lex.3.1.5", lex_3, »^(tm_3)C_D¼, 3),
 ("Lex.3.2.5", lex_3, »^(tm_3)|¼, 3),
 ("Lex.3.3.5", lex_3, »^(tm_3)!¼, 3),
 ("Lex.3.4.5", lex_3, »^(tm_3)#¼, 3),
 ("Lex.3.5.5", lex_3, »^(tm_3)^tm_3¼, 3),
 ("Lex.3.1.6", lex_3, »A_B C_D¼, 3),
 ("Lex.3.2.6", lex_3, »A_B |¼, 3),
 ("Lex.3.3.6", lex_3, »A_B !¼, 3),
 ("Lex.3.4.6", lex_3, »A_B #¼, 3),
 ("Lex.3.5.6", lex_3, »A_B ^:ty_3¼, 3),
 ("Lex.3.1.7", lex_3, »@@@@ C_D¼, 3),
 ("Lex.3.2.7", lex_3, »@@@@ |¼, 3),
 ("Lex.3.3.7", lex_3, »@@@@ !¼, 3),
 ("Lex.3.4.7", lex_3, »@@@@ #¼, 3),
 ("Lex.3.5.7", lex_3, »@@@@ ^tm_3¼, 3),
 ("Lex.3.1.8", lex_3, »! C_D¼, 3),
 ("Lex.3.2.8", lex_3, »! |¼, 3),
 ("Lex.3.3.8", lex_3, »! !¼, 3),
 ("Lex.3.4.8", lex_3, »! #¼, 3),
 ("Lex.3.5.8", lex_3, »! ^tm_3¼, 3),
 ("Lex.3.1.9", lex_3, »Ž C_D¼, 3),
 ("Lex.3.2.9", lex_3, »Ž |¼, 3),
 ("Lex.3.3.9", lex_3, »Ž !¼, 3),
 ("Lex.3.4.9", lex_3, »Ž #¼, 3),
 ("Lex.3.5.9", lex_3, »Ž ^tm_3¼, 3),
 ("Lex.3.1.10", lex_3, »^(tm_3) C_D¼, 3),
 ("Lex.3.2.10", lex_3, »^(tm_3) |¼, 3),
 ("Lex.3.3.10", lex_3, »^(tm_3) !¼, 3),
 ("Lex.3.4.10", lex_3, »^(tm_3) #¼, 3),
 ("Lex.3.5.10", lex_3, »^(tm_3) ^tm_3¼, 3)
];
=TEX
\subsection{Case 4}
=SML
val lex_4 = lex_3;
=TEX
=SML
store_mt_results_show mt_run
[
 ("Lex.4.1", lex_3, »A_!_D¼, 2),
 ("Lex.4.2", lex_3, »_!!¼, 3),
 ("Lex.4.3", lex_3, »_!_!¼, 2),
 ("Lex.4.4", lex_3, »!_!¼, 2)
];
=TEX
\subsection{Case 5}
=SML
val lex_5 = lex terms1 cl1;
=TEX
=SML
store_mt_results_show mt_run
[
 ("Lex.5.1", lex_5, »	
			A        B		C
D
E
			F¼, map HTName (explode"ABCDEF") @ [HTEos])
];
=TEX
\subsection{Case 6}
=SML
val terms6 = map explode["##", "#"];
val lex_6 = lex terms6 cl1;
=TEX
=SML
store_mt_results_show mt_run
[
 ("Lex.6.1", lex_6, »# ## ### ####¼, [HTName "#", HTName "##", HTName "##", HTName "#", HTName "##",
   HTName "##", HTEos])
];
=TEX
\subsection{Case 7}
=SML
val lex_7 = lex terms1 cl1;
=TEX
=SML
store_mt_results_show mt_run
[
 ("Lex.7.1", lex_7, »$=¼, [HTName "=", HTEos]),
 ("Lex.7.2", lex_7, »$(* An intervening comment *)=¼, [HTName "=", HTEos]),
 ("Lex.7.3", lex_7, »$"="¼, [HTName "=", HTEos]),
 ("Lex.7.4", lex_7, »$`=`¼, [HTName "=", HTEos]),
 ("Lex.7.5", lex_7, »$"„_1"¼, [HTName "„_1", HTEos]),
 ("Lex.7.6", lex_7, »$" a name with spaces "¼, [HTName " a name with spaces ", HTEos])
];
=TEX
\subsection{Case 8}
=SML
val lex_8 = lex_7;
=TEX
=SML
store_mt_results_show mt_run
[
 ("Lex.8.1", lex_8, »_¼, [HTName "_", HTEos]),
 ("Lex.8.2", lex_8, »ãÂ_¼, [HTName "ãÂ_", HTEos]),
 ("Lex.8.3", lex_8, »$"_abc_"¼, [HTName "_abc_", HTEos])
];
=TEX
\subsection{Case 9}
=SML
val lex_9 = lex_8;
val ty_9 = mk_type("lex_9", []);
=TEX
Only the first two errors identified in \cite{DS/FMU/IED/DTD015} are
reachable
=SML
store_mt_results_show mt_run_fail
[
 ("Lex.9.1", lex_9, »$^:ty_9¼, gen_fail_msg "lexical analyser" 15001 []),
 ("Lex.9.2", lex_9, »^:ty_9 $¼, gen_fail_msg "lexical analyser" 15002 [])
];
=TEX
\end{document}
lex_2
lex_5
