=TEX
% TQtemplate.tex
\documentstyle[hol,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{HOL PDS System Initialisation}  %% Mandatory field
\TPPref{DS/FMU/IED/IMP036}  %% Mandatory field
\def\SCCSversion{$Revision$%
}
\TPPissue{\SCCSversion}  %% Mandatory field
%\TPPdate{}  %% Mandatory field (with sensible default)
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{R.D.~Arthan & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.~Arthan & FST Team Leader}
\TPPabstract{
This document contains the implementation for the
theory lister module for ICL HOL.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
	Library\\RDA\\AJH\\DJK}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents list}
\tableofcontents
\subsection{Document cross references}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes history}  % to get section number `0.3'
\begin{description}
\item[Issue 1.3]
First draft for comment.
\item [Issue 1.4]
Corrected a use of $get\_const\_type$.
\item [Issue 1.5]
The name atom  ``definition(s)'' changed to ``defn(s)'', and
``constant(s)'' to ``const(s)''.
\item [Issue \SCCSversion (\FormatDate{$Date$%
})] Added $get\_alias$. Corrected handling of languages.
\end{description}
\subsection{Changes forecast}
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document contains the implementation for the symbol table module for ICL HOL.
The detailed design for this material is given in \cite{DS/FMU/IED/DTD020}.
\subsection{Introduction}
\subsection{Dependencies}
\subsection{Algorithms}
\subsection{Possible Enhancements}
\subsection{Deficiencies}
$print\_theory$ is currently coded to work with non-proportionately
spaced fonts. The code may be adapted to work with proportionately
spaced fonts as follows:

=TEX
\section{SYSTEM INITIALISATION}
=TEX
=SML
structure ‚Initialisation· : Initialisation = struct
=TEX
=SML
fun ‚banner· (():unit) : unit = (
	diag_line (get_error_message 36000 [system_version])
);
=TEX
=SML
val ‚init_funs· : (unit -> unit) list ref = ref [banner];
=TEX
=SML
fun ‚new_init_fun· (f : unit -> unit) : unit = (
	init_funs := !init_funs @ [f]
);
=TEX
=SML
fun ‚init· (() : unit) : unit = (
	map (fn f => f()) (!init_funs);
	()
);
=TEX
=SML
end; (* of structure Initialisation *)
=TEX
\section{USER INTERFACES}
=SML
structure ‚HOLSystem· : HOLSystem = struct
=TEX
=SML
val ‚state_changed· : bool ref = ref true;
=TEX
=SML
fun ‚local_init· (():unit) = (state_changed := false);
=TEX
=SML
fun ‚state_change· (_ : KERNEL_STATE_CHANGE) : unit = (state_changed := true);
=TEX
=SML
val side_effect1 = Initialisation.new_init_fun local_init;
=TEX
=SML
val side_effect2 = on_kernel_state_change state_change;
=TEX
To have the initialisation functions called appropriately, we use a stream
to detect whether or not the return from the $PolyML.commit$ is in the same
session or the new one. This works because in the new session the stream
will have become closed.
=SML
fun ‚hol_save· (():unit) : unit = (
	let	val strm = open_in "/";
	in	state_changed := false;
		PolyML.commit();
		if	ExtendedIO.can_input(strm, 1)
		then	()		(* same session *)
		else	Initialisation.init()	(* new session *)
	end
);
=SML
fun ‚hol_quit· (():unit) : unit = (
	(if !state_changed
	then warn "hol_quit" 36001 []
	else ());
	PolyML.quit()
);
=SML
end; (* of structure HOLSystem *)
open HOLSystem;
=TEX
=SML
=TEX
\small
\twocolumn[\section{INDEX}]
\printindex

\end{document}

=IGN
val side_effect1 = Initialisation.new_init_fun local_init;
