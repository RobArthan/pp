%  $Id$ %Z%
=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\makeindex
\TPPproject{FST Project}  %% Mandatory field
\TPPtitle{Detailed Design for the Theory of Sequences}  %% Mandatory field
\def\TPPheadtitle{Detailed Design for the Theory of\cr
Sequences}
\TPPref{DS/FMU/IED/DTD074}  %% Mandatory field
\def\SCCSversion{$Revision$ %
}
\TPPissue{\SCCSversion}  %% Mandatory field
\def\SCCSdate{\FormatDate{$Date$ %
}}
\TPPdate{\SCCSdate}  %% Mandatory field
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{SML Literate Script}
\TPPkeywords{}
\TPPauthor{R.B.Jones & WIN01}  %% Mandatory field
%\TPPauthors{R.D. Arthan & WIN01\\K. Blackburn & WIN01}
\TPPauthorisation{R.D. Arthan & FST Team Leader}
\TPPabstract{This document gives a detailed design for the 
theory of relations.}
\TPPdistribution{\parbox[t]{4.0in}{%
	    Library
}}
%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}
\begin{document}
\makeTPPfrontpage
\vfill
\begin{centering}
\bf Copyright \copyright\ : International Computers Ltd 1992
\end{centering}
\pagebreak
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}
\begin{description}
\item[Issue \SCCSversion (\SCCSdate)]

This is the first draft of the document.

\end{description}
\subsection{Changes Forecast}

Should be changed to use integers instead of natural numbers when these are available.

\section{GENERAL}
\subsection{Scope}
This document contains a detailed design
for the theory ``seq''.
The design is implemented in \cite{DS/FMU/IED/IMP074}.

\subsection{Introduction}
\subsubsection{Purpose and Background}
This document contains the detailed design for the theory ``relation''.

\subsubsection{Dependencies}
This document depends on \cite{DS/FMU/IED/IMP073}, and the theory design tools of \cite{DS/FMU/IED/DTD035}.
\subsubsection{Deficiencies}
None known.
\subsubsection{Possible Enhancements}
\section{THE THEORY ``seq''}
\subsection{Design of the theory ``seq''}
=THDOC
(*
req_flag := Declare;
initialise_td_results();
*)
req_name €"seq"› (Value "finset");
=DESCRIBE
The theory ``seq'' contains the definitions of some of the elements in section 4.4 of \cite{spivey88}.
=ENDDOC
=THDOC
req_parent "list";
req_alias(€"#"›,¨LengthÆ);
req_const(€"Seq"›,¨:'a  ≠ ((Ó ™ 'a) )Æ);
req_defn(["Seq"],
	([],¨µ (s : 'a ) ∑ Seq s =
	 {f | f ç (Ó ü s) ± Dom f = 1 .. (# f)}Æ));
req_const(€"Seqâ1"›,¨:'a  ≠ ((Ó ™ 'a) )Æ);
req_defn(["Seqâ1"],
	([],¨µ (s : 'a )∑ Seqâ1 s = (Seq s) \ {{}}Æ));
req_const(€"Iseq"›,¨:'a  ≠ ((Ó ™ 'a) )Æ);
req_defn(["Iseq"],
	([],¨µ (s : 'a )∑ Iseq s = (Seq s) ° (Ó ˛ s)Æ));
=DESCRIBE
=ENDDOC
=THDOC
req_const(€"Nth"›,¨:'a LIST ≠ Ó ≠ 'aÆ);
req_defn(["Nth"],
	([],¨µ (l : 'a LIST) (e : 'a) (n : Ó)∑
	Nth (Cons e l) n
	=	if n = 1
		then e
		else Nth l (n-1)Æ));
req_const(€"ListRel"›,¨:'a LIST ≠ (Ó ™ 'a)Æ);
req_defn(["ListRel"],
	([],¨µ (e : 'a) (l : 'a LIST)∑
		ListRel [] = {}
	±	ListRel (Cons e l) = {1,e} ¿ (Suc ª ListRel l) 
	Æ));
=DESCRIBE
=ENDDOC
=THDOC
req_infix(300,"Î");
req_alias("Î",¨$@:'a LIST ≠ 'a LIST ≠ 'a LISTÆ);
req_alias("Head",¨HdÆ);
req_const("Last",¨:'a LIST ≠ 'aÆ);
req_defn(["Last"],([],¨
	µl e ∑  Last (Cons e l) =
	if l = [] then e else Last lÆ));
req_const("Front",¨:'a LIST ≠ 'a LISTÆ);
req_defn(["Front"],([],¨
	µl e ∑  Front (Cons e l) =
	if l = [] then [] else (Cons e (Front l))Æ));
req_alias("Tail",¨TlÆ);
=DESCRIBE
=ENDDOC
=THDOC
req_infix(300,"˘");
req_const("˘",¨:'a LIST ≠ 'a  ≠ 'a LISTÆ);
req_defn(["˘"],([],¨
	µl e s ∑  (Cons e l) ˘ s  = 
	if e ç s then Cons e (l ˘ s) else l ˘ sÆ));
req_const("Squash",¨: (Ó ™ 'a) ≠ (Ó ™ 'a)Æ);
req_defn(["Squash"],([],¨
	µ r:Ó ™ 'a ∑ Squash r = 
	let	st = Squash (Suc F_ª_R ({0;1} · r))
	in	if	1 ç Dom r
		then	{(1, r At 1)} ¿ ($- 1) F_ª_R st
		else	stÆ));
=DESCRIBE
=ENDDOC
=THDOC
req_infix(300,"Prefix");
req_const("Prefix",¨:'a LIST ≠ 'a LIST ≠ BOOLÆ);
req_defn(["Prefix"],([],
	¨µ s t ∑ s Prefix t § (∂ v ∑ s Î v = t)Æ));
req_infix(300,"Suffix");
req_const("Suffix",¨:'a LIST ≠ 'a LIST ≠ BOOLÆ);
req_defn(["Suffix"],([],
	¨µ s t ∑ s Suffix t § (∂ u ∑ u Î s = t)Æ));
req_infix(300,"In");
req_const("In",¨:'a LIST ≠ 'a LIST ≠ BOOLÆ);
req_defn(["In"],([],
	¨µ s t ∑ s In t § (∂ u v ∑ u Î s Î v = t)Æ));
=DESCRIBE
=ENDDOC
=THDOC
=DESCRIBE
=ENDDOC
=THDOC
req_const("Flatten",¨: 'a LIST LIST ≠ 'a LISTÆ);
req_defn(["Flatten"],([],¨
	µ (e: 'a LIST) (l: 'a LIST LIST) ∑ Flatten [] = []
	± Flatten (Cons e l) = e Î (Flatten l)Æ));
=DESCRIBE
See section 4.5 of \cite{spivey89}.
=ENDDOC
=THDOC
=DESCRIBE
=ENDDOC
\subsection{Signature of the theory ``seq''}
=DOC
signature €SeqTheory› = sig
	val €seq_def› : THM;
	val €seqâ1_def› : THM;
	val €iseq_def› : THM;
	val €Nth_def› : THM;
	val €listrel_def› : THM;
	val €Î_def› : THM;
	val €head_def› : THM;
	val €last_def› : THM;
	val €front_def› : THM;
	val €tail_def› : THM;
	val €˘_def› : THM;
	val €squash_def› : THM;
	val €prefix_def› : THM;
	val €suffix_def› : THM;
	val €in_def› : THM;
	val €flatten_def› : THM;
=DESCRIBE
This is the signature in which we declare theory ``funrel''.
=ENDDOC
\section{PROOF CONTEXTS}
=DOC
(* proof context key "€seq_ext›" *)
=DESCRIBE
$seq\_ext$ extends $finset_ext$ by:
\begin{description}
\item [Name]\ 

Becomes ``finset$\_$ext''.
\item [Stripping Goals and Theorems]\ 

Adding in ? applied at the top level or under a single negation.
\item [Rewriting Context]\ 

Adding in ?.
\end{description}
=ENDDOC
=DOC
(* proof context key €"funrel_alg"› *)
=DESCRIBE
$finset\_alg$ extends $funrel\_alg$ by:
\begin{description}
\item [Name]\ 

Becomes ``finset$\_$alg''.
\item [Stripping Goals and Theorems]\ 

Adding in ? applied at the top level or under a single negation.
\item [Rewriting Context]\ 

Adding in ?.
\end{description}
=ENDDOC
=SML
end;(* of signature SeqTheory *)
=TEX
\section{TEST POLICY}
Any functions given in this document should be tested according to the general criteria set out in \cite{DS/FMU/IED/PLN008}, using the tests in \cite{DS/FMU/IED/MDT074}.
In \cite{DS/FMU/IED/MDT074} the theory produced is checked by the theory design tools of \cite{DS/FMU/IED/DTD035}, against the theory design provided.

The module tests should include automatic proof of all the ``rules'' in \cite{Spivey89} expressible in this part of the theory of sequences.
\twocolumn[\section{INDEX}]
\small
\printindex
\end{document}


