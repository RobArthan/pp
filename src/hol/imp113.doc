% imp113.doc  $Id: imp100.doc,v 1.8 1999/12/14 17:58:35 rda Rel $

=TEX
% imp113.doc  $Id: imp100.doc,v 1.8 1999/12/14 17:58:35 rda Rel $
\documentstyle[11pt,TQ,hol1]{article}

\TPPtitle{Scripts Used in Building Reference Manuals}
\TPPref{DS/FMU/IED/IMP113}
\def\SCCSissue{$Revision: 1.8 $%
}



\TPPissue{\SCCSissue}
\TPPdate{\FormatDate{$Date: 1999/12/14 17:58:35 $%
}}
\TPPproject{FST}

\TPPstatus{Draft}
\TPPtype{Literate Script}
\TPPkeywords{HOL}
\TPPauthor{G. M. Prout}  %% Mandatory field
\TPPauthorisation{R.D.~Arthan & Lemma 1}
\TPPabstract{This document contains the material to reproduce scripts previously included in the makefile {\tt doc.mkf}.}
\TPPdistribution{\parbox[t]{4.0in}{%
	Library
}}

\ftlinepenalty=9999
\tabstop=0.9\tabstop
\makeindex

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\catcode`\_=\active
\def\_{\kern.06em\vbox{\hrule height.1ex width.3em}\hskip0.1em\relax}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\makeTPPfrontpage
\vfill
\begin{center}
\bf Copyright \copyright\ : International Computers Ltd \number\year
\end{center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}

\begin{description}

\item[Issue 1.1] First version 
\end{description}

%********************************************************************

%\subsection{Changes Forecast}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%********************************************************************
%--------------------------------------------------------------------
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{GENERAL}

%********************************************************************

\subsection{Scope}

This document contains the verbatim contents of some of the scripts used by the
makefile doc.mkf in the building of reference manual entries in \cite{DS/FMU/IED/USR006}.

%********************************************************************

\subsection{Introduction}

\subsubsection{Purpose and Background}

Scripts provided here were previously generated in the makefile doc.mkf by the echo command.

\subsubsection{Dependencies}

%--------------------------------------------------------------------

\subsubsection{Interface}



%--------------------------------------------------------------------

%\subsubsection{Possible Enhancements}

%--------------------------------------------------------------------

%\subsubsection{Deficiencies}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{STRUCTURE OF THIS DOCUMENT}

This file contains a number of scripts to be extracted by using the docsml program. The resultant file imp113.sml will be empty.


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{FILES}
\subsection{0.15_sed}

=VDUMP 0.15_sed

s/^=THEORYLISTINGSECTION/=THEORYLISTINGSUBSECTION/

/^=THEORYLISTINGBANNER/{
	i\
\=TEX	
	i\
\\pagebreak
	i\
\=THEORYLISTINGSECTION
	N
	s/.*\n//
	s/THE THEORY /The Theory /
	s/THE Z THEORY /The Z Theory /
}
=TEX

\subsection{0.idx_sed1}

File {\tt 0.idx_sed1} takes lines with index entries, these are the
output from {\tt grep(1)}.  It strips out everything except those
index entries and leaves them one per line

=VDUMP 0.idx_sed1
s/^[^Û]*Û/Û/
s/Ý[^ÝÛ]*$/Ý/
s/Ý[^ÝÛ]*Û/Ý\
Û/g
s/	/ /g
s/   */ /g
s/\\_/_/g

s/ÛÝ//

: A

s/\n\n/\
/g

s/^\n//
s/\n$//

t A

/^$/d
=TEX

\subsection{0.trim_sed}

File {\tt 0.trim_sed} tidies up index file texts.  The sequence ``{\tt
scriptscriptstyle $\ldots$ fam $\ldots$ rm}'' must be changed, it comes
from expanding some of the extended character macros (particularly the
large semicolon), the expansion of which differs between the two runs
of \LaTeX{}.  The change to the underscore is simple and enhances
readability of the intermediate files.

=VDUMP 0.trim_sed

s/\\kern \.06em\\vbox {\\hrule height\.1ex width\.3em}\\hskip 0\.1em\\relax /_/g
s/\(\\scriptscriptstyle \\fam \\z@ \\\)[a-z][a-z]*rm /\1FONTrm /g
s/\(\\scriptscriptstyle \)\\protect \(\\fam \\z@ \\\)[a-z][a-z]*rm /\1\2FONTrm /g
=TEX

\subsection{0.ptx_sed1}

File {\tt 0.ptx_sed1} adds the spaces necessary to form the words in
the permuted index.

=VDUMP 0.ptx_sed1

s/	/ /g
s/\(__*\)/\1 /g
s/'/' /g
s/"/ /g
s/Û//g
s/Ý//g
s/\([a-z]\)\([A-Z]\)/\1 \2/g
s/\([A-Z]\)\([A-Z]\)\([a-z]\)/\1 \2\3/g
s/   */ /g
s/^ //
s/ $//
=TEX

\subsection{0.ptx_sed2}

File {\tt 0.ptx_sed2} tidies up the output from {\tt awk(1)}, it must
alter a few characters into their escaped \LaTeX{} form.  The
discretionary line break before underscores before a closing curly
bracket are removed.  Finally it
adds a `{\tt\%}" to make sure the end of line is not significant --- 
adding this in the {\tt awk(1)} script would clash with escaping
these characters. 

=VDUMP 0.ptx_sed2

s/#/\\#/g
s/&/\\&/g
s/%/\\%/g
s/\$/\\$/g
s/_/\\-\\_/g
s/\\-\(\\_ *}\)/\1/g
s/\^/\\Circumflex /g
s/~/\\Twiddles /g
s/$/%/
=TEX

\subsection{0.ptx_sed3}

File {\tt 0.ptx_sed3} adds the sort key for the index entries to the
start of the line.  The script preserves a copy of the line in the {\tt
sed(1)} hold space the modifies the line to form the sort key, then
appends the copy of the original to form the output line.  The three
parts of the sort key are separated by words which will sort before any
other word, the character~`{\tt"}' has decimal code~34 and is thus the
first printing character.  Words in the key are separated by
underscores and spaces, we want only the words and spaces for the sort
key.

=VDUMP 0.ptx_sed3

h

s/^\\LINE{\([^}{]*\)}{\([^}{]*\)}{\([^}{]*\)}%$/\1  \2  \3/
s/\\-\\_ / /g
s/\\_/ /g

s/   */ /g
s/^ //
s/ $//

s/ \([0-9]\)$/     \1/
s/ \([0-9][0-9]\)$/    \1/
s/ \([0-9][0-9][0-9]\)$/   \1/
s/ \([0-9][0-9][0-9][0-9]\)$/  \1/

G
s/\n//
=TEX

\subsection{0.asa}

File {\tt 0.asa} is the awk-script that generates the permuted index entries.
We have input lines where the first word is the line number, subsequent
words need to be indexed.  The output is a call of a \LaTeX{} macro
which has three arguments: first the sort key and any following words
from the input, second the words from before the sort key, third the
line number.

=VDUMP 0.asa

{
	for(i=2; i<=NF; i++) {
		printf "\\LINE{"
		for(j=i; j<=NF; j++){
			printf "%s ", $j
		}
		printf "}{"
		for(j=2; j<i; j++){
			printf "%s ", $j
		}
		printf "}{%d}\n", $1, NF, i
	}
}
=TEX

\subsection{0.es1.A and 0.es1.B }

Note that {\tt sed(1)} allows a maximum of ten different output files
named in its `{\tt w}~{\em filename}' commands, hence two {\tt sed(1)}
scripts are required here --- i.e., {\tt 0.es1.A} above and {\tt
0.es1.B} below.  As {\tt sed(1)} has no notion of going backwards in a
file we need to generate our own `{\tt=DOC}' line at the top of each
file, hence the actions for line~1 of the input file.

=VDUMP 0.es1.A

1{
	x
	s/.*/=DOC/
	w 1a.scr
	w 1b.scr
	w 1c.scr
	w 1d.scr
	w 1e.scr
	w 1f.scr
	x
}

/^signature ÛUtilitySharedTypesÝ = sig/,/^end.*signature/w 1a.scr
/^signature ÛListUtilitiesÝ = sig/,/^end.*signature/w 1b.scr
/^signature ÛFunctionUtilitiesÝ = sig/,/^end.*signature/w 1c.scr
/^signature ÛCombinatorsÝ = sig/,/^end.*signature/w 1d.scr
/^signature ÛSimpleOutputÝ = sig/,/^end.*signature/w 1e.scr
/^signature ÛCharacterUtilitiesÝ = sig/,/^end.*signature/w 1f.scr
=TEX

=VDUMP 0.es1.B

1{
	x
	s/.*/=DOC/
	w 1g.scr
	w 1h.scr
	w 1i.scr
	w 1j.scr
	w 1k.scr
	w 1l.scr
	x
}

/^signature ÛSimpleDictionaryÝ = sig/,/^end.*signature/w 1g.scr
/^signature ÛEfficientDictionaryÝ = sig/,/^end.*signature/w 1h.scr
/^signature ÛProfilingÝ = sig/,/^end.*signature/w 1i.scr
/^signature ÛSortÝ = sig/,/^end.*signature/w 1j.scr
/^signature ÛSparseArrayÝ = sig/,/^end.*signature/w 1k.scr
/^signature ÛIntegerÝ = sig/,/^end.*signature/w 1l.scr
=TEX

\subsection{0.as1}

File {\tt 0.as1} is an {\tt awk(1)} script that prefixes each line of
its input with some text that will allow the text to be sorted.  The
prefix is in several pieces and is formed from the line that follows an
`{\tt=DOC}' line
 
\begin{enumerate}
 
\item For signatures a~`{\tt 1}' for other lines a~`{\tt 2}'.  This
	forces signatures to the front of the output file when it is
	sorted.

\item The first two words of the line, typically the Standard~ML
	keyword `{\tt val}' and an identifier. 
\item Spaces to pad the above two items out to~20 characters.  If they
	are already above~20 characters then they are truncated at the
	right. 
\item Line number from the source file, but offset by 10000.
\end{enumerate}

=VDUMP 0.as1

BEGIN {p = " "
       k = "  "
       i = 10000
       b = "                    "
}

{
	if (p == "=DOC"){
			x = "2";
			if ($1 == "signature") x = "1";
			w =  x $1 $2 b;
			k = substr(w,1,20)}

        print k i p;
        p = $0
        i++
}

END   {print k  i  p}
=TEX

\subsection{0.as2}

 File {\tt 0.as2} is an {\tt awk(1)} script that removes the prefix added
by file {\tt 0.as1} above.

=VDUMP 0.as2

{print substr($0, 26)}
=TEX

\subsection{0.es2}

=VDUMP 0.es2

1{
	x
	s/.*/=DOC/
	w 2a.scr
	w 2b.scr
	x
}

/^signature ÛBasicErrorÝ = sig/,/^end.*signature/w 2a.scr
/^signature ÛSystemControlÝ = sig/,/^end.*signature/w 2b.scr
=TEX

\subsection{0.es3}

=VDUMP 0.es3

1{
	x
	s/.*/=DOC/
	w 4b.scr
	x
}

/^signature ÛKernelTypesÝ = sig/,/^end.*KernelTypes/w 4a.scr
=TEX

\subsection{0.fgrep}

=VDUMP 0.fgrep
Û
=TEX




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\end{document}
