=IGN
********************************************************************************
dtd103.doc: this file is part of the PPHol system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
%  %Z%
=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Detailed Design for Conjecture Database}  %% Mandatory field
\TPPref{DS/FMU/IED/DTD103}  %% Mandatory field
\def\SCCSversion{$Revision: 1.6 $%%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date: 2002/10/17 15:10:58 $%
}}
\TPPstatus{Draft}
%\TPPstatus{Approved}
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{R.D.~Arthan & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.B.~Jones & HAT Manager}
\TPPabstract{
This document contains the detailed design for the
facilities for managing conjectures.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
	Library}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : Lemma 1 Ltd. \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}
\item[Issues 1.1-1.3]
First drafts.
\item[Issue 1.4]
Level numbers now stored with the conjectures.
\item[Issue 1.5]
SCCS keywords reinserted.
\item[Issue 1.6] Copyright and banner updates for open source release.
\item[Issue 1.7] PPHol-specific updates for open source release
\end{description}
\subsection{Changes Forecast}
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document contains the detailed design for the Conjectures Database module for ICL HOL.
The high level design for this material is given in \cite{DS/FMU/IED/HLD008}.

\subsection{Introduction}
Principally to support the conjecture paragraphs of Z, a simple system allowing conjectures to be stored in a theory is required.
This document defines a simple programmer's interface to such a system.


\subsection{Purpose and Background}
See \cite{DS/FMU/IED/HLD008}.
\subsection{Dependencies}
The module is dependent on the interface to the abstract data type $THM$, \cite{DS/FMU/IED/DTD012}.
\subsection{Possible Enhancements}
Currently, when a user deletes a constant or a type which appears in a conjecture, the conjecture is deleted.
It might be better to design a scheme which warned the user before taking any destructive action.
\subsection{Deficiencies}
None known.
\section{DISCUSSION}
The requirement is to support the conjecture paragraph form in Z
in a useful fashion.
This may as well be done by providing an analogous facility for HOL
and exploiting it in Z.

The idea is to use the user data in a theory to hold any conjectures
which the user has recorded.

A tricky point about the implementation is that deletion of constants
and types should probably cause conjectures involving those constants
and types to be deleted.
This could be done either by marking the conjectures with the relevant level number (in which case the facility would probably have to be implemented in \cite{DS/FMU/IED/IMP012}, where $delete\_const$ and $delete\_type$ are defined).
Alternatively, the `on kernel state change' stuff can be used to notify the package implementing conjectures of deletions and it can then work through the conjectures removing those which refer to the deleted object.
This latter approach has been chosen for simplicity.


\section{CONJECTURE FUNCTIONS}
=DOC
signature ÛConjecturesÝ = sig
val Ûnew_conjectureÝ : (string list * TERM) -> unit
val Ûget_conjectureÝ: string -> string -> TERM
val Ûget_conjecturesÝ: string -> (string list * (int * TERM)) list
val Ûdelete_conjectureÝ: string -> TERM
val Ûdelete_all_conjecturesÝ: unit -> unit
end;
=DESCRIBE
This is the signature of a structure containing facilities for handling
conjectures.

$new\_conjecture(keys, tm)$ stores the boolean term $tm$ as a conjecture in the
current theory under keys $keys$.

$get\_conjecture\,thy\,key$ returns the conjecture stored in theory $thy$ under key $key$.

$get\_conjectures\,thy\,key$ returns the list of conjectures stored in theory $thy$.

$delete\_conjecture\,key$ deletes the conjecture stored in the current theory under key $key$.
It returns the deleted conjecture.

$delete\_all\_conjectures()$ deletes all the conjectures stored in the current theory.
This may be used if, for some reason, the data structure used to store the conjectures becomes corrupted.

Note, when constants or types are deleted it may be necessary to delete conjectures from the current theory.
Message 20804 is used to inform the user when this happens.
=FAILURE
3031	?0 is not of type ”BOOL®
6031	Key list may not be empty
20601	There is no theory called ?0
103801	Key ?0 has already been used for a conjecture in the current theory
103802	There is no conjecture called ?0 in theory ?1
103803	The conjectures database in theory ?0 is corrupt
	(use delete_all_conjectures to clear).
103804	Deletion of ?0 has caused deletion of conjecture?1: ?2
=ENDDOC

\end{document}



\subsection{General Principles}
\section{TEST POLICY}
The module is to be tested according to the general criteria laid down in the quality plan, \cite{DS/FMU/IED/PLN008}.
\small
\twocolumn[\section{INDEX}]
\printindex

\end{document}


