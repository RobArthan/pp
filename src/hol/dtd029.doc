% dtd029.doc   %Z% $Date$ $Revision$ $RCSfile$
=TEX
\documentstyle[hol,11pt,TQ]{article}
\ftlinepenalty=9999
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
\TPPtitle{Detailed Design of Tactics III}  %% Mandatory field
\def\TPPheadtitle{Detailed Design of Tactics III}
\TPPref{DS/FMU/IED/DTD029}  %% Mandatory field
\def\SCCSversion{$Revision$ %
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$ %
}}  %% Mandatory field
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{SML Literate Script}
\TPPkeywords{}
\TPPauthor{K.~Blackburn & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.Arthan & FST Team Leader}
\TPPabstract{This document gives a detailed design for the third grouping of tactics,
in particular those concerned with paired abstractions.}
\TPPdistribution{\parbox[t]{4.0in}{%
	    Project Library
}}
%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}
\begin{document}
\makeTPPfrontpage
\vfill
\begin{centering}
\bf Copyright \copyright\ : International Computers Ltd \number\year
\end{centering}
\pagebreak
\section{Document control}
\subsection{Contents list}
\tableofcontents
\subsection{Document cross references}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes history}
\begin{description}
\item [Issue 1.1]
First version: place holder for tautology stuff.
\end{description}
\subsection{Changes forecast}
Many.
\section{GENERAL}
\subsection{Scope}
This document contains a detailed design for the 
third grouping of tactics, in particular those concerning paired abstractions.
This is called for in \cite{DS/FMU/IED/HLD012}.
The design is
implemented in \cite{DS/FMU/IED/IMP029}.
\subsection{Introduction}
\subsubsection{Purpose and Background}
This document contains a detailed design for the 
third grouping of tactics, in particular those concerning paired abstractions.

The document provides groups of tactics, related by their core operator.

All functions require all their arguments to begin evaluation,
unless otherwise noted.

Note also that the order of declaration given in this document will
not necessarily reflect the order of implementation in
\cite{DS/FMU/IED/IMP029}.

We use the notation ``varstruct'' for ``an allowed variable structure, under ICL HOL syntax''.
\subsubsection{Dependencies}
Loading this document is dependent on those
files indicated as preceding it in the ICL HOL release 001 makefile.

\subsubsection{Deficiencies}
Many.
\subsubsection{Possible Enhancements}
Many.

\section{INFIX DIRECTIVES}
A Standard ML $infix$ command must be given at the ``top level''.
Thus we give the commands here for those functions declared in the following signatures.
=SML
=TEX
\section{Tactics III}
=DOC
signature ‚Tactics III· = sig
=DESCRIBE
This provides the grouping of tactics for ICL HOL.
They are primarily concerned with handling paired abstractions.
=ENDDOC
\subsection{Concerning Tautologies}
The following are all implemented using $taut\_tac$.
=DOC
val ‚taut_rule· : TERM -> THM;
=DESCRIBE
A tautology prover.
A tautology is taken to be any substitution
instance of a term which is formed from boolean variables,
the constants $T$ and $F$ and the following
connectives:
Û
Ä, Å, ä, Ç, å, if ... then ... else
Ê
and which is true for any assignment of truth values to the variables.
If its argument is a tautology then the
function will return that term as a theorem.
=RULE
taut_rule
ªtº
…
…
Ö t
=TEX
=SEEALSO
$taut\_tac$, $taut\_conv$, $taut\_eq\_conv$.
=FAILURE
27030	?0 is not of type ª:BOOLº
27037	?0 is not tautologically true
=ENDDOC
This is not a conversion, but there are two conversions leading
from it:
=DOC
val ‚taut_conv· : CONV;
=DESCRIBE
A tautology prover.
A tautology is taken to be any substitution
instance of a term which is formed from boolean variables,
the constants $T$ and $F$ and the following
connectives:
Û
Ä, Å, ä, Ç, å, if ... then ... else
Ê
and which is true for any assignment of truth values to the variables.
If its argument is a tautologically true term, then the
function will return a theorem that the term is equivalent to $T$.
=CONVERSION
taut_conv
ªtº
…
…
Ö t Ç T
=TEX
=SEEALSO
$taut\_tac$, $taut\_rule$, $taut\_eq\_conv$.
=FAILURE
27030	?0 is not of type ª:BOOLº
27037	?0 is not tautologically true
=ENDDOC
=DOC
val ‚taut_eq_conv· : TERM -> CONV;
=DESCRIBE
A tautology prover.
A tautology is taken to be any substitution
instance of a term which is formed from boolean variables,
the constants $T$ and $F$ and the following
connectives:
Û
Ä, Å, ä, Ç, å, if ... then ... else
Ê
and which is true for any assignment of truth values to the variables.
‚taut_rule·If its two boolean arguments are tautologically equal terms, then the
function will return a theorem that the terms are equal.
=CONVERSION
taut_eq_conv
ªt1º
ªt2º
…
…
Ö t2 Ç t1
=TEX
=SEEALSO
$taut\_tac$, $taut\_rule$, $taut\_conv$.
=FAILURE
27015	Cannot prove theorem with conclusion ?0
27030	?0 is not of type ª:BOOLº
=ENDDOC

\section{SUPPORTING THEORY}
\section{END OF THE SIGNATURE}
=SML
end; (* signature of TacticsIII *)
=TEX
\section{TEST POLICY}
The functions in this document should be tested as described in
\cite{DS/FMU/IED/PLN008}.
=TEX
\twocolumn[\section{INDEX}]
\small
\printindex
\end{document}

=IGN
open Sort;
fun sf {id = id1,text = text1} {id = id2,text = text2} = (
	if text1 <> text2
	then stringorder text1 text2
	else (id1 - id2)
);

sort sf (get_error_messages());
