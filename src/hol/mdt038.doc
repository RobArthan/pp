=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Elementary Theory of Arithmetic}  %% Mandatory field
\TPPref{DS/FMU/IED/MDT038}  %% Mandatory field
\def\SCCSversion{$Revision$ %
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$ %
}}
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{ML Literate Script}
\TPPkeywords{}
\TPPauthor{R.D.Arthan & WIN01}  %% Mandatory field
\TPPauthorisation{R.B.Jones & HAT Manager}
\TPPabstract{Module tests are given for the 
functions associated with the elementary
theory of arithmetic.
This document also checks that the theory design has been met by the theory implementation.}
\TPPdistribution{\parbox[t]{4.0in}{%
	    Library
}}
\begin{document}
\makeTPPfrontpage
\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}
\pagebreak
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History} 
\begin{description}
\item [Issue 1.1]
First draft version.
\item [Issue 1.2]
Corrected some fixity precedence problems.

\item[Issue 1.4, \FormatDate{92/01/20} ] Updated to use new fonts.
\item [Issue 1.5]
Fixed arithmetic theory names.
\item [Issue 1.6]
Changed to use proof contexts of issue 1.13 of \cite{DS/FMU/IED/DTD051}.
\item [Issue 1.8 (9th April 1992)]
Changes required by CR0016.
\item [Issue 1.9 (14th April 1992)]
Changes required by CR0017.

\end{description}
\subsection{Changes Forecast}
None.
\section{GENERAL}
\subsection{Scope}
This document contains the module testing of the functions (conversions ,etc) associated with the elementary
theory of arithmetic required by \cite{DS/FMU/IED/DTD038} and
implemented in \cite{DS/FMU/IED/IMP038}.

\subsection{Introduction}
\subsubsection{Purpose and Background}
See \cite{DS/FMU/IED/DTD038}.

\subsubsection{Dependencies}
The test material depends on \cite{DS/FMU/IED/DTD013},
\cite{DS/FMU/IED/DTD035} and \cite{DS/FMU/IED/IMP038}.

\subsubsection{Deficiencies}
None known.
\section{INITIALISATION}
Initialise the test package:
=SML
use_file "dtd013.sml";
use_file "imp013.sml";
init_mt_results();
push_pc "initial_rewrite";
(open_theory "basic_hol" handle Fail _ => open_theory"î");
=TEX
\section{TEST CASES}
The tests are grouped according to the function to be tested as follows:
\begin{description}
\item[Group 1]
This group tests correct and failure cases for $plus1\_conv$.
\item[Group 2]
This group tests correct and failure cases for $induction\_tac$.
\item[Group 3]
This group tests correct and failure cases for $INDUCTION\_T$.
\item[Group 4]
This group tests correct and failure cases for $cov\_induction\_tac$.
\item[Group 5]
This group tests correct and failure cases for $COV\_INDUCTION\_T$.
\end{description}
\section{THE TESTS}
\subsection{Group 1}
=SML
store_mt_results (mt_runf (op =#))[
("MDT038.1.1", dest_thm o plus1_conv, ¬1®, ([], ¬1 = (0 + 1)®)),
("MDT038.1.2", dest_thm o plus1_conv, ¬2®, ([], ¬2 = (1 + 1)®)),
("MDT038.1.3", dest_thm o plus1_conv, ¬100000000®, ([], ¬100000000 = (99999999 + 1)®))
];

store_mt_results mt_run_fail[
("MDT038.1.4", plus1_conv, ¬0®, gen_fail_msg "plus1_conv" 7100 [PolyML.makestring¬0®])
];
=TEX
\subsection{Group 2}
=SML
store_mt_results (mt_runf (op =#))[("MDT038.2.1",
	dest_thm o simple_tac_proof,
	(([¬(µi·f (i + 1) ¼ f i)®], ¬f i ¼ f 0®),
	induction_tac¬i:î® THEN_LIST [
	rewrite_tac[¼_clauses],
	EVERY[
	DROP_ASM_T ¬(µi·f (i + 1) ¼ f i)® (asm_tac o all_simple_µ_elim),
	strip_asm_tac(list_simple_µ_elim
			[¬(f:î­î)(i+1)®, ¬(f:î­î)i®, ¬(f:î­î)0®]¼_trans_thm)
	]]),
	([¬(µi·f (i + 1) ¼ f i)®], ¬f i ¼ f 0®)
)];
=TEX
=SML
store_mt_results mt_run_fail[
("MDT038.2.2", induction_tac, ¬x:'a®, 
	gen_fail_msg "induction_tac" 38001 [PolyML.makestring¬x:'a®])
];
=TEX
=SML
store_mt_results mt_run_fail[
("MDT038.2.3", induction_tac ¬y:î®, ([¬x=1®], ¬1=x®),
	gen_fail_msg "induction_tac" 38002 [PolyML.makestring¬y:î®]),
("MDT038.2.4", induction_tac ¬x:î®, ([¬x=1®], ¬1=x®),
	gen_fail_msg "induction_tac" 38003 [PolyML.makestring¬x:î®])
];
=TEX
\subsection{Group 3}
=SML
store_mt_results (mt_runf (op =#))[("MDT038.3.1",
	dest_thm o simple_tac_proof,
	(([¬(µi·f (i + 1) ¼ f i)®], ¬f i ¼ f 0®),
	INDUCTION_T ¬i:î® (asm_tac o simple_µ_intro¬x:'a®)THEN_LIST [
	rewrite_tac[¼_clauses],
	EVERY[
	DROP_ASM_T ¬(µx· f i ¼ f 0)® (asm_tac o all_simple_µ_elim),
	DROP_ASM_T ¬(µi·f (i + 1) ¼ f i)® (asm_tac o all_simple_µ_elim),
	strip_asm_tac(list_simple_µ_elim
			[¬(f:î­î)(i+1)®, ¬(f:î­î)i®, ¬(f:î­î)0®]¼_trans_thm)
	]]),
	([¬(µi·f (i + 1) ¼ f i)®], ¬f i ¼ f 0®)
)];
=TEX
=SML
store_mt_results mt_run_fail[
("MDT038.3.2", INDUCTION_T, ¬x:'a®, 
	gen_fail_msg "INDUCTION_T" 38001 [PolyML.makestring¬x:'a®])
];
=TEX
=SML
store_mt_results mt_run_fail[
("MDT038.3.3", INDUCTION_T ¬y:î® asm_tac, ([¬x=1®], ¬1=x®),
	gen_fail_msg "INDUCTION_T" 38002 [PolyML.makestring¬y:î®]),
("MDT038.3.4", INDUCTION_T ¬x:î® asm_tac, ([¬x=1®], ¬1=x®),
	gen_fail_msg "INDUCTION_T" 38003 [PolyML.makestring¬x:î®])
];
=TEX
\subsection{Group 4}
=SML
store_mt_results (mt_runf (op =#))[("MDT038.4.1",
	dest_thm o simple_tac_proof,
	(([¬(p:î­BOOL)i®], ¬¶m· p m ± µi· p i ´ ³i < m®),
	asm_ante_tac¬(p:î­BOOL)i® THEN cov_induction_tac¬i:î® THEN
	strip_tac THEN cases_tac¬¶n·n < i ± p n® THEN_LIST[
		(* *** Goal "1" *** *)
		GET_NTH_ASM_T 4 (strip_asm_tac o simple_µ_elim ¬n:î®) THEN
			simple_¶_tac¬m:î® THEN asm_rewrite_tac[],
		(* *** Goal "2" *** *)
		simple_¶_tac¬i:î® THEN REPEAT strip_tac THEN 
			GET_NTH_ASM_T 2 (strip_asm_tac o simple_µ_elim ¬i':î®)
	]),
	([¬(p:î­BOOL)i®], ¬¶m· p m ± µi· p i ´ ³i < m®)
)];
=TEX
=SML
store_mt_results mt_run_fail[
("MDT038.4.2", cov_induction_tac, ¬x:'a®, 
	gen_fail_msg "cov_induction_tac" 38001 [PolyML.makestring¬x:'a®])
];
=TEX
=SML
store_mt_results mt_run_fail[
("MDT038.4.3", cov_induction_tac ¬y:î®, ([¬x=1®], ¬1=x®),
	gen_fail_msg "cov_induction_tac" 38002 [PolyML.makestring¬y:î®]),
("MDT038.4.4", cov_induction_tac ¬x:î®, ([¬x=1®], ¬1=x®),
	gen_fail_msg "cov_induction_tac" 38003 [PolyML.makestring¬x:î®])
];
=TEX
\subsection{Group 5}
=SML
store_mt_results (mt_runf (op =#))[("MDT038.5.1",
	dest_thm o simple_tac_proof,
	(([¬(p:î­BOOL)i®], ¬¶m· p m ± µi· p i ´ ³i < m®),
	asm_ante_tac¬(p:î­BOOL)i® THEN COV_INDUCTION_T¬i:î®
			(asm_tac o simple_µ_intro¬X:'a®) THEN
	strip_tac THEN cases_tac¬¶n·n < i ± p n® THEN_LIST[
		(* *** Goal "1" *** *)
		GET_NTH_ASM_T 4 (strip_asm_tac o simple_µ_elim ¬n:î®
					o simple_µ_elim¬X:'a®) THEN
			simple_¶_tac¬m:î® THEN asm_rewrite_tac[],
		(* *** Goal "2" *** *)
		simple_¶_tac¬i:î® THEN REPEAT strip_tac THEN 
			GET_NTH_ASM_T 2 (strip_asm_tac o simple_µ_elim ¬i':î®)
	]),
	([¬(p:î­BOOL)i®], ¬¶m· p m ± µi· p i ´ ³i < m®)
)];
=TEX
=SML
store_mt_results mt_run_fail[
("MDT038.5.2", COV_INDUCTION_T, ¬x:'a®, 
	gen_fail_msg "COV_INDUCTION_T" 38001 [PolyML.makestring¬x:'a®])
];
=TEX
=SML
store_mt_results mt_run_fail[
("MDT038.5.3", COV_INDUCTION_T ¬y:î® asm_tac, ([¬x=1®], ¬1=x®),
	gen_fail_msg "COV_INDUCTION_T" 38002 [PolyML.makestring¬y:î®]),
("MDT038.5.4", COV_INDUCTION_T ¬x:î® asm_tac, ([¬x=1®], ¬1=x®),
	gen_fail_msg "COV_INDUCTION_T" 38003 [PolyML.makestring¬x:î®])
];
=TEX
\section{CHECK THE THEORY DESIGN}
=SML
use_file "dtd038.tch";
store_mt_results mt_run [("theory design of î",
	theory_check_success,
	(),
	true)];
=TEX
\section{END OF TESTS}
=SML
diag_string(summarize_mt_results());
=TEX
\end{document}


