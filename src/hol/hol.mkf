######################################################################
#
#	hol.mkf from $Header: /Users/rda/pp/hol/RCS/hol.mkf,v 1.101 2014/06/01 16:20:05 rda Exp rda $
#
#	makefile for the HOL database for ProofPower
#
######################################################################


# suffixes known
.SUFFIXES: .db .doc .ldd0 .ldd .log .lot .sh .doc .tex .tch

# Control for RCS checking out: expand keywords to values only
# (needed for document dates)
COFLAGS=-kv

# default make target.  displays a list of more useful targets

default:
	@echo "The following are some of the more useful make commands:"
	@echo " "
	@echo "make -f hol.mkf inst           - builds and installs the hol files"
	@echo "make -f hol.mkf srcrel         - makes the hol source release"
	@echo "make -f hol.mkf src            - makes the HOL source files"
	@echo "make -f hol.mkf bin            - makes binaries plus what is needed to use them"
	@echo "make -f hol.mkf doc            - makes HOL documents "
	@echo "make -f hol.mkf build          - just build the binaries in the current directory"
	@echo "make -f hol.mkf test           - runs the tests"
	@echo "make -f hol.mkf packinglist    - list the HOL source file names"
	@echo " "
	@echo "Various environment variables influence the behaviour:"
	@echo " "
	@echo "    PPCOMPILER  - compiler to use (POLYML or SMLNJ)"
	@echo "    PPTARGETDIR - target installation directory"
	@echo "                  (../../bld if not set)"
	@echo "    PPVER       - product version"
	@echo "                  (taken from file version if not set)"
	@echo " "
	@echo "The makefile depends on the PPTex and PPDev packages"

######################################################################
#
#	Makefile Definitions
#
######################################################################

PRODNAME=PPHol
SHORTNAME=hol
PRODUCT=$(PRODNAME)-$(PPVER)
CWD=$(shell pwd)
VERSION=$(shell echo $${PPVER:-`cat version  2>/dev/null || echo XXX.YYY.ZZZ`})
RELDIR=$(shell echo "$${PPTARGETDIR:-../../bld}")
HAVERCS=$(shell (test -d RCS && echo y ) || echo n)

# Compiler specifics:
ifeq ($(PPCOMPILER), POLYML)
# Architecture type (used as a file-name suffix for images by NJML)
HEAP_SUFFIX=		polydb
# Directories for the poly stuff:
POLYHOME=$(shell echo $${PPPOLYHOME:-/usr/local})
POLYLIBDIR=$(POLYHOME)/lib
# Commands to build the empty database
HOLSTARTMLCMD= \
	val system_version : string = \"$(VERSION)\";\
	val build_date : Date.date = Date.fromTimeLocal(Time.now());\
	use\"dtd108.sml\"; use\"imp108.sml\";
HOLMAKEDBCMD=	PPBuild.pp'save ();
HOLSTARTCMD= \
	{	{ echo "$(HOLSTARTMLCMD)" | poly ; } && \
		{ polyc $(POLYLINKFLAGS) -o pp-ml pp-ml.o ; } && \
		{ echo "$(HOLMAKEDBCMD)" | pp-ml ; } }
# Command to run ML
RUNML="pp-ml"
MLDBPFX=""
# Command to garbage-collect the database
DBGC="pp-ml"
DBGCARG="-c"
# Any programs we make that need exporting
MLPROGS=pp-ml
else
ifeq ($(PPCOMPILER), SMLNJ)
# Architecture type (used as a file-name suffix for images by NJML)
HEAP_SUFFIX=		$(shell eval `.arch-n-opsys`; echo $$HEAP_SUFFIX)
# Commands to build the empty database
HOLSTARTMLCMD= \
	val system_version : string = \"$(VERSION)\";\
	val build_date : Date.date = Date.fromTimeLocal(Time.now());\
	use\"dtd108.sml\"; use\"imp108.sml\"; \
	SMLofNJ.exportML \"$(HOLDBNAME)\";
HOLSTARTCMD= echo "$(HOLSTARTMLCMD)" | sml
# Command to run ML
RUNML="sml"
MLDBPFX="@SMLload="
# Command to garbage-collect the database
DBGC="echo"
DBGCARG="database garbage collection not needed with SML/NJ"
# Any programs we make that need exporting
MLPROGS=
endif
endif
# Distinctive tag for binary distribution file
BINTAG=$(shell eval `arch-os`; echo $$ARCH-$$OS-$$PPCOMPILER | dd conv=lcase 2>/dev/null)
# database names
HOLDBNAME=	hol
HOLDB=		hol.$(HEAP_SUFFIX)
HOLDBLDD=	$(HOLDBNAME).ldd

ifeq ($(PPTESTMASTERDB), y)
TESTDB=		$(HOLDB)
else
TESTDB=		holchild.$(HEAP_SUFFIX)
endif

# Makefiles
HOLMKF=		hol.mkf

# Detailed designs and Implementations
# These files are split into three sets.
# Set 0 comprises just the portability module. It must be compiled first
# using the compiler's native commands for loading a file.
# Set 1 comprises the build up to the theory of characters. Some modules
# in set 1 have module tests that need to be run before set 2 is loaded
# A copy of the image is made once they are compiled.
# Set 2 comprises all the rest.
HOLSMLDOCS0 =	dtd108.doc imp108.doc	# Portability module
HOLSMLDOCS1 +=	dtd002.doc imp002.doc	# System control and basic error reporting
HOLSMLDOCS1 +=	dtd001.doc imp001.doc	# Standard ML Utilities
HOLSMLDOCS1 +=	dtd122.doc imp122.doc	# Unicode and UTF-8
HOLSMLDOCS1 +=	dtd110.doc imp110.doc	# Reader Writer

HOLSMLDOCS1 +=	dtd003.doc imp003.doc	# Types and Terms
HOLSMLDOCS1 +=	dtd006.doc imp006.doc	# Abstract Data Type THM
HOLSMLDOCS1 +=	dtd004.doc imp004.doc	# Derived Terms
HOLSMLDOCS1 +=	dtd010.doc imp010.doc	# Warning Message Subsystem
HOLSMLDOCS1 +=	dtd012.doc imp012.doc	# Interface to the Abstract Data Type THM
HOLSMLDOCS1 +=	dtd015.doc imp015.doc	# HOL Lexical Analyser
HOLSMLDOCS1 +=	dtd011.doc imp011.doc	# Antiunification
HOLSMLDOCS1 +=	dtd020.doc imp020.doc	# Symbol Table
HOLSMLDOCS1 +=	dtd019.doc imp019.doc	# HOL Parser
HOLSMLDOCS1 +=	dtd014.doc imp014.doc	# Unification
HOLSMLDOCS1 +=	dtd016.doc imp016.doc	# Type Inference
HOLSMLDOCS1 +=	dtd022.doc imp022.doc	# HOL Parser Interface
HOLSMLDOCS1 +=	dtd023.doc imp023.doc	# Basic Definitions and Axioms
HOLSMLDOCS1 +=	dtd024.doc imp024.doc	# Oppen printing routines
HOLSMLDOCS1 +=	dtd031.doc imp031.doc	# Pretty Printer Support
HOLSMLDOCS1 +=	dtd032.doc imp032.doc	# HOL Pretty Printing functions
HOLSMLDOCS1 +=	dtd025.doc imp025.doc	# Pretty Printer
HOLSMLDOCS1 +=	dtd120.doc imp120.doc	# Higher-Order Matching
HOLSMLDOCS1 +=	dtd007.doc imp007.doc	# Derived Inference Rules I
HOLSMLDOCS1 +=	dtd008.doc imp008.doc	# Discrimination Nets
HOLSMLDOCS1 +=	dtd009.doc imp009.doc	# Tactics I
HOLSMLDOCS1 +=	dtd051.doc imp051.doc	# Proof contexts
HOLSMLDOCS1 +=	dtd028.doc imp028.doc	# Tactics II
HOLSMLDOCS1 +=	dtd026.doc imp026.doc	# Rewriting Rules
HOLSMLDOCS1 +=	dtd030.doc imp030.doc	# Subgoal Package
HOLSMLDOCS1 +=	dtd033.doc imp033.doc	# Theory Lister
HOLSMLDOCS1 +=	dtd121.doc imp121.doc	# Theorem Finder
HOLSMLDOCS1 +=	dtd037.doc imp037.doc	# pair
HOLSMLDOCS1 +=	dtd038.doc imp038.doc	# î
HOLSMLDOCS1 +=	dtd039.doc imp039.doc	# list
HOLSMLDOCS1 +=	dtd040.doc imp040.doc	# char

HOLSMLDOCS2 =	dtd103.doc imp103.doc	# conjectures database
HOLSMLDOCS2 +=	dtd045.doc imp045.doc	# general purpose theories
HOLSMLDOCS2 +=	dtd027.doc imp027.doc	# DerivedRules2
HOLSMLDOCS2 +=	dtd029.doc imp029.doc	# Tactics3
HOLSMLDOCS2 +=	dtd044.doc imp044.doc	# sets
HOLSMLDOCS2 +=	dtd046.doc imp046.doc	# Constant Specification
HOLSMLDOCS2 +=	dtd058.doc imp058.doc	# Automatic Existence Proof
HOLSMLDOCS2 +=	dtd059.doc imp059.doc	# Product types
HOLSMLDOCS2 +=	dtd057.doc imp057.doc	# Arithmetic Computation
HOLSMLDOCS2 +=	dtd067.doc imp067.doc	# Resolution
HOLSMLDOCS2 +=	dtd076.doc imp076.doc	# First Set of Proof Contexts
HOLSMLDOCS2 +=	dtd081.doc imp081.doc	# Algebraic Normalisation Conversions
HOLSMLDOCS2 +=	dtd082.doc imp082.doc	# Linear Arithmetic
HOLSMLDOCS2 +=	dtd084.doc imp084.doc	# Equational reasoning
HOLSMLDOCS2 +=	dtd071.doc imp071.doc	# Relations
HOLSMLDOCS2 +=	dtd072.doc imp072.doc	# Functional Relations
HOLSMLDOCS2 +=	dtd074.doc imp074.doc	# Sequences
HOLSMLDOCS2 +=	dtd073.doc imp073.doc	# Numbers and Finiteness
HOLSMLDOCS2 +=	dtd093.doc imp093.doc	# Integers
HOLSMLDOCS2 +=	dtd036.doc imp036.doc	# Initialisation
HOLSMLDOCS2 +=	dtd105.doc imp105.doc	# HOL Integer Proof Support
HOLSMLDOCS2 +=	dtd092.doc imp092.doc	# Further results on sets and relations
HOLSMLDOCS2 +=	dtd114.doc imp114.doc	# Dyadic Rationals
HOLSMLDOCS2 +=	dtd115.doc imp115.doc	# Orderings
HOLSMLDOCS2 +=	dtd119.doc imp119.doc	# Quantifier Elimination Toolkit
HOLSMLDOCS2 +=	dtd116.doc imp116.doc	# Real Numbers

SHELLSCRIPTS = pp
SHELLSCRIPTS += hol
SHELLSCRIPTS += pp_list
SHELLSCRIPTS += pp_make_database


# These module tests are run halfway through the build process
# and so are mentioned separately.
HOLTESTDOCS =	mdt006.doc	# module test of 006
HOLTESTDOCS +=	mdt012.doc	# module test of 012
HOLTESTDOCS +=	mdt020.doc	# module test of 020

# Module tests
HOLMDTDOCS =	mdt001.doc
HOLMDTDOCS +=	mdt002.doc
HOLMDTDOCS +=	mdt003.doc
HOLMDTDOCS +=	mdt004.doc
HOLMDTDOCS +=	mdt110.doc
HOLMDTDOCS +=	mdt007.doc
HOLMDTDOCS +=	mdt008.doc
HOLMDTDOCS +=	mdt009.doc
HOLMDTDOCS +=	mdt011.doc
HOLMDTDOCS +=	mdt013.doc
HOLMDTDOCS +=	mdt014.doc
HOLMDTDOCS +=	mdt015.doc
HOLMDTDOCS +=	mdt016.doc
HOLMDTDOCS +=	mdt019.doc
HOLMDTDOCS +=	mdt022.doc
HOLMDTDOCS +=	mdt023.doc
HOLMDTDOCS +=	mdt024.doc
HOLMDTDOCS +=	mdt025.doc
HOLMDTDOCS +=	mdt026.doc
HOLMDTDOCS +=	mdt027.doc
HOLMDTDOCS +=	mdt028.doc
HOLMDTDOCS +=	mdt029.doc
HOLMDTDOCS +=	mdt030.doc
HOLMDTDOCS +=	mdt031.doc
HOLMDTDOCS +=	mdt032.doc
HOLMDTDOCS +=	mdt033.doc
HOLMDTDOCS +=	mdt036.doc
HOLMDTDOCS +=	mdt037.doc
HOLMDTDOCS +=	mdt038.doc
HOLMDTDOCS +=	mdt039.doc
HOLMDTDOCS +=	mdt040.doc
HOLMDTDOCS +=	mdt044.doc
HOLMDTDOCS +=	mdt045.doc
HOLMDTDOCS +=	mdt046.doc
HOLMDTDOCS +=	mdt051.doc
HOLMDTDOCS +=	mdt057.doc
HOLMDTDOCS +=	mdt058.doc
HOLMDTDOCS +=	mdt059.doc
HOLMDTDOCS +=	mdt067.doc
HOLMDTDOCS +=	mdt071.doc
HOLMDTDOCS +=	mdt072.doc
HOLMDTDOCS +=	mdt073.doc
HOLMDTDOCS +=	mdt074.doc
HOLMDTDOCS +=	mdt076.doc
HOLMDTDOCS +=	mdt081.doc
HOLMDTDOCS +=	mdt082.doc
HOLMDTDOCS +=	mdt084.doc
HOLMDTDOCS +=	mdt092.doc
HOLMDTDOCS +=	mdt093.doc
HOLMDTDOCS +=	mdt103.doc
HOLMDTDOCS +=	mdt105.doc
HOLMDTDOCS +=	mdt111.doc
HOLMDTDOCS +=	mdt114.doc
HOLMDTDOCS +=	mdt115.doc
HOLMDTDOCS +=	mdt116.doc
HOLMDTDOCS +=	mdt119.doc
HOLMDTDOCS +=	mdt120.doc
HOLMDTDOCS +=	mdt121.doc
HOLMDTDOCS +=	mdt122.doc

HOLINTDOCS=int002.doc
HOLINTDOCS+=int008.doc
HOLINTDOCS+=wrk051_hol.doc

WRK051DOCS=usr004.doc
WRK051DOCS+=usr013A.doc
WRK051DOCS+=usr013B.doc
WRK051DOCS+=usr013C.doc
WRK051DOCS+=usr013D.doc
WRK051DOCS+=usr013E.doc
WRK051DOCS+=usr013F.doc
WRK051DOCS+=usr013G.doc
WRK051DOCS+=usr013H.doc
WRK051DOCS+=usr013S.doc
WRK051DOCS+=usr013X.doc
WRK051DOCS+=wrk022.doc
WRK051DOCS+=wrk043.doc
WRK051DOCS+=wrk044.doc
WRK051DOCS+=usr022_slides.doc

# Variations on the documents
HOLSMLFILES0=	$(HOLSMLDOCS0:.doc=.sml)
HOLLDDFILES0=	$(HOLSMLDOCS0:.doc=.ldd0)
HOLSMLFILES1=	$(HOLSMLDOCS1:.doc=.sml)
HOLLDDFILES1=	$(HOLSMLDOCS1:.doc=.ldd)
HOLSMLFILES2=	$(HOLSMLDOCS2:.doc=.sml)
HOLLDDFILES2=	$(HOLSMLDOCS2:.doc=.ldd)
HOLTESTSMLS=	$(HOLTESTDOCS:.doc=.sml)
HOLTESTTTDS=	$(HOLTESTDOCS:.doc=.ttd0)
HOLMDTSMLS=	$(HOLMDTDOCS:.doc=.sml)
HOLMDTTTDS=	$(HOLMDTDOCS:.doc=.ttd)
HOLINTTTDS=	$(HOLINTDOCS:.doc=.ttd)

# Detailed Design and implementation of the IED test harness
IEDTESTDOCS=	dtd013.doc imp013.doc dtd035.doc imp035.doc
IEDTESTSMLS=	$(IEDTESTDOCS:.doc=.sml)

# Hol database initialisation commands

HOLTOPTHY=	basic_hol
HOLTOPPC=	basic_hol
HOLBUILDDATE=	`date '+ [\"- - build_on %y/%m/%d %H:%M:%S\", \"$(VERSION)\"]'`
			

HOLBANNERCMD= pp'set_banner (Value (\"ProofPower \"^system_version^\" [HOL Database]\")); \
		save_and_quit ();

HOLINITCMD=	open_theory \"$(HOLTOPTHY)\"; \
		repeat pop_pc; \
		push_pc \"$(HOLTOPPC)\"; \
		save_and_quit ();

# document files
DOCFILES = usr004.doc
DOCFILES += usr005.doc usr005A.doc usr005B.doc usr005C.doc usr005D.doc
DOCFILES += usr029.doc
DOCFILES += usr013.doc usr013A.doc usr013B.doc usr013C.doc
DOCFILES += usr013D.doc usr013E.doc usr013F.doc usr013G.doc
DOCFILES += usr013H.doc usr013S.doc usr013X.doc
DOCFILES += usr022.doc usr022_slides.doc
DOCFILES += usr024.doc
DOCFILES += wrk022.doc
DOCFILES += wrk043.doc
DOCFILES += wrk044.doc
DOCFILES += wrk046.doc

# release files
RELEASEDOCFILES += usr004.doc usr004.dvi
RELEASEDOCFILES += usr005.dvi
RELEASEDOCFILES += usr029.dvi
RELEASEDOCFILES += usr013.doc usr013A.doc usr013B.doc usr013C.doc
RELEASEDOCFILES += usr013D.doc usr013E.doc usr013F.doc usr013G.doc
RELEASEDOCFILES += usr013H.doc usr013S.doc usr013X.doc usr013.dvi
RELEASEDOCFILES += usr022.doc usr022.dvi usr022S.doc usr022_slides.doc
RELEASEDOCFILES += int002.doc
RELEASEDOCFILES += int008.doc
RELEASEDOCFILES += spc001.doc spc001.dvi
RELEASEDOCFILES += spc002.doc spc002.dvi
RELEASEDOCFILES += spc003.doc spc003.dvi
RELEASEDOCFILES += spc004.doc spc004.dvi
RELEASEDOCFILES += spc005.doc spc005.dvi
RELEASEDOCFILES += wrk022.doc wrk022.dvi
RELEASEDOCFILES += wrk043.doc wrk043.dvi
RELEASEDOCFILES += wrk044.doc wrk044.dvi
RELEASEDOCFILES += wrk046.doc wrk046.dvi
RELEASEDOCFILES += wrk051.doc wrk051.dvi


# manual pages

MANFILES = pp_make_database.1
MANFILES += pp_list.1
MANFILES += pp.1

# release scripts
RELEASESCRIPTS = install_holdemo

DESCDOCS = def001A.doc
DESCDOCS += def001B.doc
DESCDOCS += def001C.doc
DESCDOCS += def001D.doc
DESCDOCS += def001E.doc
DESCDOCS += def007A.doc
DESCDOCS += def007.skw

# packing list for the source release (target src).

PACKINGLIST=
PACKINGLIST+= def001A.doc
PACKINGLIST+= def001B.doc
PACKINGLIST+= def001C.doc
PACKINGLIST+= def001D.doc
PACKINGLIST+= def001E.doc
PACKINGLIST+= def007.skw
PACKINGLIST+= def007A.doc
PACKINGLIST+= dtd001.doc
PACKINGLIST+= dtd002.doc
PACKINGLIST+= dtd003.doc
PACKINGLIST+= dtd004.doc
PACKINGLIST+= dtd006.doc
PACKINGLIST+= dtd007.doc
PACKINGLIST+= dtd008.doc
PACKINGLIST+= dtd009.doc
PACKINGLIST+= dtd010.doc
PACKINGLIST+= dtd011.doc
PACKINGLIST+= dtd012.doc
PACKINGLIST+= dtd013.doc
PACKINGLIST+= dtd014.doc
PACKINGLIST+= dtd015.doc
PACKINGLIST+= dtd016.doc
PACKINGLIST+= dtd017.doc
PACKINGLIST+= dtd018.doc
PACKINGLIST+= dtd019.doc
PACKINGLIST+= dtd020.doc
PACKINGLIST+= dtd022.doc
PACKINGLIST+= dtd023.doc
PACKINGLIST+= dtd024.doc
PACKINGLIST+= dtd025.doc
PACKINGLIST+= dtd026.doc
PACKINGLIST+= dtd027.doc
PACKINGLIST+= dtd028.doc
PACKINGLIST+= dtd029.doc
PACKINGLIST+= dtd030.doc
PACKINGLIST+= dtd031.doc
PACKINGLIST+= dtd032.doc
PACKINGLIST+= dtd033.doc
PACKINGLIST+= dtd035.doc
PACKINGLIST+= dtd036.doc
PACKINGLIST+= dtd037.doc
PACKINGLIST+= dtd038.doc
PACKINGLIST+= dtd039.doc
PACKINGLIST+= dtd040.doc
PACKINGLIST+= dtd044.doc
PACKINGLIST+= dtd045.doc
PACKINGLIST+= dtd046.doc
PACKINGLIST+= dtd051.doc
PACKINGLIST+= dtd057.doc
PACKINGLIST+= dtd058.doc
PACKINGLIST+= dtd059.doc
PACKINGLIST+= dtd067.doc
PACKINGLIST+= dtd071.doc
PACKINGLIST+= dtd072.doc
PACKINGLIST+= dtd073.doc
PACKINGLIST+= dtd074.doc
PACKINGLIST+= dtd076.doc
PACKINGLIST+= dtd081.doc
PACKINGLIST+= dtd082.doc
PACKINGLIST+= dtd084.doc
PACKINGLIST+= dtd092.doc
PACKINGLIST+= dtd093.doc
PACKINGLIST+= dtd099.doc
PACKINGLIST+= dtd100.doc
PACKINGLIST+= dtd103.doc
PACKINGLIST+= dtd105.doc
PACKINGLIST+= dtd106.doc
PACKINGLIST+= dtd108.doc
PACKINGLIST+= dtd110.doc
PACKINGLIST+= dtd114.doc
PACKINGLIST+= dtd115.doc
PACKINGLIST+= dtd116.doc
PACKINGLIST+= dtd119.doc
PACKINGLIST+= dtd120.doc
PACKINGLIST+= dtd121.doc
PACKINGLIST+= dtd122.doc
PACKINGLIST+= hol.mkf
PACKINGLIST+= hol.svf
PACKINGLIST+= imp001.doc
PACKINGLIST+= imp002.doc
PACKINGLIST+= imp003.doc
PACKINGLIST+= imp004.doc
PACKINGLIST+= imp006.doc
PACKINGLIST+= imp007.doc
PACKINGLIST+= imp008.doc
PACKINGLIST+= imp009.doc
PACKINGLIST+= imp010.doc
PACKINGLIST+= imp011.doc
PACKINGLIST+= imp012.doc
PACKINGLIST+= imp013.doc
PACKINGLIST+= imp014.doc
PACKINGLIST+= imp015.doc
PACKINGLIST+= imp016.doc
PACKINGLIST+= imp017.doc
PACKINGLIST+= imp018.doc
PACKINGLIST+= imp019.doc
PACKINGLIST+= imp020.doc
PACKINGLIST+= imp022.doc
PACKINGLIST+= imp023.doc
PACKINGLIST+= imp024.doc
PACKINGLIST+= imp025.doc
PACKINGLIST+= imp026.doc
PACKINGLIST+= imp027.doc
PACKINGLIST+= imp028.doc
PACKINGLIST+= imp029.doc
PACKINGLIST+= imp030.doc
PACKINGLIST+= imp031.doc
PACKINGLIST+= imp032.doc
PACKINGLIST+= imp033.doc
PACKINGLIST+= imp035.doc
PACKINGLIST+= imp036.doc
PACKINGLIST+= imp037.doc
PACKINGLIST+= imp038.doc
PACKINGLIST+= imp039.doc
PACKINGLIST+= imp040.doc
PACKINGLIST+= imp044.doc
PACKINGLIST+= imp045.doc
PACKINGLIST+= imp046.doc
PACKINGLIST+= imp051.doc
PACKINGLIST+= imp054.doc
PACKINGLIST+= imp057.doc
PACKINGLIST+= imp058.doc
PACKINGLIST+= imp059.doc
PACKINGLIST+= imp067.doc
PACKINGLIST+= imp071.doc
PACKINGLIST+= imp072.doc
PACKINGLIST+= imp073.doc
PACKINGLIST+= imp074.doc
PACKINGLIST+= imp076.doc
PACKINGLIST+= imp081.doc
PACKINGLIST+= imp082.doc
PACKINGLIST+= imp084.doc
PACKINGLIST+= imp092.doc
PACKINGLIST+= imp093.doc
PACKINGLIST+= imp103.doc
PACKINGLIST+= imp105.doc
PACKINGLIST+= imp108.doc
PACKINGLIST+= imp110.doc
PACKINGLIST+= imp111.doc
PACKINGLIST+= imp113.doc
PACKINGLIST+= imp114.doc
PACKINGLIST+= imp115.doc
PACKINGLIST+= imp116.doc
PACKINGLIST+= imp119.doc
PACKINGLIST+= imp120.doc
PACKINGLIST+= imp121.doc
PACKINGLIST+= imp122.doc
PACKINGLIST+= usr022S.doc
PACKINGLIST+= install_holdemo.sh
PACKINGLIST+= int002.doc
PACKINGLIST+= int008.doc
PACKINGLIST+= mdt001.doc
PACKINGLIST+= mdt002.doc
PACKINGLIST+= mdt003.doc
PACKINGLIST+= mdt004.doc
PACKINGLIST+= mdt006.doc
PACKINGLIST+= mdt007.doc
PACKINGLIST+= mdt008.doc
PACKINGLIST+= mdt009.doc
PACKINGLIST+= mdt011.doc
PACKINGLIST+= mdt012.doc
PACKINGLIST+= mdt013.doc
PACKINGLIST+= mdt014.doc
PACKINGLIST+= mdt015.doc
PACKINGLIST+= mdt016.doc
PACKINGLIST+= mdt019.doc
PACKINGLIST+= mdt020.doc
PACKINGLIST+= mdt022.doc
PACKINGLIST+= mdt023.doc
PACKINGLIST+= mdt024.doc
PACKINGLIST+= mdt025.doc
PACKINGLIST+= mdt026.doc
PACKINGLIST+= mdt027.doc
PACKINGLIST+= mdt028.doc
PACKINGLIST+= mdt029.doc
PACKINGLIST+= mdt030.doc
PACKINGLIST+= mdt031.doc
PACKINGLIST+= mdt032.doc
PACKINGLIST+= mdt033.doc
PACKINGLIST+= mdt036.doc
PACKINGLIST+= mdt037.doc
PACKINGLIST+= mdt038.doc
PACKINGLIST+= mdt039.doc
PACKINGLIST+= mdt040.doc
PACKINGLIST+= mdt044.doc
PACKINGLIST+= mdt045.doc
PACKINGLIST+= mdt046.doc
PACKINGLIST+= mdt051.doc
PACKINGLIST+= mdt057.doc
PACKINGLIST+= mdt058.doc
PACKINGLIST+= mdt059.doc
PACKINGLIST+= mdt067.doc
PACKINGLIST+= mdt071.doc
PACKINGLIST+= mdt072.doc
PACKINGLIST+= mdt073.doc
PACKINGLIST+= mdt074.doc
PACKINGLIST+= mdt076.doc
PACKINGLIST+= mdt081.doc
PACKINGLIST+= mdt082.doc
PACKINGLIST+= mdt084.doc
PACKINGLIST+= mdt092.doc
PACKINGLIST+= mdt093.doc
PACKINGLIST+= mdt103.doc
PACKINGLIST+= mdt105.doc
PACKINGLIST+= mdt111.doc
PACKINGLIST+= mdt110.doc
PACKINGLIST+= mdt114.doc
PACKINGLIST+= mdt115.doc
PACKINGLIST+= mdt116.doc
PACKINGLIST+= mdt119.doc
PACKINGLIST+= mdt120.doc
PACKINGLIST+= mdt121.doc
PACKINGLIST+= mdt122.doc
PACKINGLIST+= spc001.doc
PACKINGLIST+= spc002.doc
PACKINGLIST+= spc003.doc
PACKINGLIST+= spc004.doc
PACKINGLIST+= spc005.doc
PACKINGLIST+= usr004.doc
PACKINGLIST+= usr005.doc
PACKINGLIST+= usr005A.doc
PACKINGLIST+= usr005B.doc
PACKINGLIST+= usr005C.doc
PACKINGLIST+= usr005D.doc
PACKINGLIST+= usr013.doc
PACKINGLIST+= usr013A.doc
PACKINGLIST+= usr013B.doc
PACKINGLIST+= usr013C.doc
PACKINGLIST+= usr013D.doc
PACKINGLIST+= usr013E.doc
PACKINGLIST+= usr013F.doc
PACKINGLIST+= usr013G.doc
PACKINGLIST+= usr013H.doc
PACKINGLIST+= usr013S.doc
PACKINGLIST+= usr013X.doc
PACKINGLIST+= usr022.doc
PACKINGLIST+= usr022_slides.doc
PACKINGLIST+= usr024_data.txt
PACKINGLIST+= usr024.doc
PACKINGLIST+= usr029.doc
PACKINGLIST+= wrk022.doc
PACKINGLIST+= wrk043.doc
PACKINGLIST+= wrk044.doc
PACKINGLIST+= wrk046.doc
PACKINGLIST+= wrk051.doc
PACKINGLIST+= $(MANFILES)
PACKINGLIST+= mtreport.sh


# packing list for user source release
DISTPACKINGLIST=$(PACKINGLIST)

######################################################################
#
#	Rules for making the documents
#
######################################################################

usr024_data.tex: usr024_data.txt
	@sed	-e /PRODUCT/s#PRODUCT#$(PRODUCT)#g \
		-e "/DATETIME/s#DATETIME#`date +'%H:%M:%S %d/%m/%Y'`"#g \
		-e "/YEAR/s#YEAR#`date +'%Y'`"#g \
		<usr024_data.txt >usr024_data.tex

USR.sty: usr024.doc usr024.sml usr024_data.tex
	@sed -e 's/[ 	]%.*$$//' \
	-e 's/^[ 	][ 	]*//' \
	-e 's/[ 	][ 	]*$$//' usr024.sml > USR.sty
	
hol1.sty: imp054.doc imp054.sml
	@sed -e 's/[ 	]%.*$$//' \
	-e 's/^[ 	][ 	]*//' \
	-e 's/[ 	][ 	]*$$//' imp054.sml > hol1.sty

######################################################################
#	usr004 - HOL tutorial
######################################################################

USR004DOCS = usr004.doc
USR004TEXS = $(USR004DOCS:.doc=.tex)

usr004.dvi: hol1.sty USR.sty $(USR004DOCS) $(USR004TEXS) usr024_data.tex
	texdvi -b usr004 > usr004.dvi.ldd1 </dev/null
	texdvi usr004 > usr004.dvi.ldd2 </dev/null
	texdvi usr004
usr004.dvi1: hol1.sty USR.sty $(USR004DOCS) $(USR004TEXS)
	texdvi usr004
usr004.tutorial: $(TUTDB) usr004.doc usr004.sml
	pp -d $(TUTDB) -i usr004 < save_and_quit.sml
	touch usr004.$(TUT)

######################################################################
#	usr005 - Product description
######################################################################

USR005DOCS = usr005.doc
USR005DOCS += usr005A.doc
USR005DOCS += usr005B.doc
USR005DOCS += usr005C.doc
USR005DOCS += usr005D.doc
USR005DOCS += def001A.doc
USR005DOCS += def001B.doc
USR005DOCS += def001C.doc
USR005DOCS += def001D.doc
USR005DOCS += def001E.doc
USR005DOCS += def007A.doc
USR005TEXS = $(USR005DOCS:.doc=.tex)

usr005.dvi: hol1.sty USR.sty $(USR005DOCS) $(USR005TEXS) usr024_data.tex
	texdvi -b usr005 > usr005.dvi.ldd1 </dev/null
	texdvi usr005 > usr005.dvi.ldd2 </dev/null
	texdvi usr005
usr005.dvi1: hol1.sty USR.sty $(USR005DOCS) $(USR005TEXS)
	texdvi usr005

def007A.tex: def007A.doc def007.skw hol.svf
	doctex -f hol.svf -k def007.skw def007A

######################################################################
#	usr029 - Reference manual
######################################################################

export LC_COLLATE=C

SORT = awk -f 0.as1 | sort -f | awk -f 0.as2
UNBOX = ( sed '/[ 	][ 	]*$$/s/[ 	]*$$//' \
	| sed -n '/^\=DOC/,/^\=ENDDOC/p' )

# The following list better be in order, or else consistency checks will fail
USR029DOCS = dtd001.doc
USR029DOCS += dtd002.doc
USR029DOCS += dtd003.doc
USR029DOCS += dtd004.doc
USR029DOCS += dtd006.doc
USR029DOCS += dtd007.doc
USR029DOCS += dtd008.doc
USR029DOCS += dtd009.doc
USR029DOCS += dtd010.doc
USR029DOCS += dtd012.doc
USR029DOCS += dtd015.doc
USR029DOCS += dtd020.doc
USR029DOCS += dtd023.doc
USR029DOCS += dtd025.doc
USR029DOCS += dtd026.doc
USR029DOCS += dtd027.doc
USR029DOCS += dtd028.doc
USR029DOCS += dtd029.doc
USR029DOCS += dtd030.doc
USR029DOCS += dtd033.doc
USR029DOCS += dtd036.doc
USR029DOCS += dtd037.doc
USR029DOCS += dtd038.doc
USR029DOCS += dtd039.doc
USR029DOCS += dtd040.doc
USR029DOCS += dtd044.doc
USR029DOCS += dtd045.doc
USR029DOCS += dtd046.doc
USR029DOCS += dtd051.doc
USR029DOCS += dtd057.doc
USR029DOCS += dtd058.doc
USR029DOCS += dtd059.doc
USR029DOCS += dtd067.doc
USR029DOCS += dtd071.doc
USR029DOCS += dtd072.doc
USR029DOCS += dtd073.doc
USR029DOCS += dtd074.doc
USR029DOCS += dtd076.doc
USR029DOCS += dtd081.doc
USR029DOCS += dtd082.doc
USR029DOCS += dtd084.doc
USR029DOCS += dtd093.doc
USR029DOCS += dtd099.doc
USR029DOCS += dtd100.doc
USR029DOCS += dtd103.doc
USR029DOCS += dtd105.doc
USR029DOCS += dtd106.doc
USR029DOCS += dtd108.doc
USR029DOCS += dtd110.doc
USR029DOCS += dtd114.doc
USR029DOCS += dtd115.doc
USR029DOCS += dtd116.doc
USR029DOCS += dtd116.doc
USR029DOCS += dtd119.doc
USR029DOCS += dtd120.doc
USR029DOCS += dtd121.doc
USR029DOCS += dtd122.doc

TEXFILES  = 3.tex 5.tex 6.tex 7.tex 8.tex 9a.tex
TEXFILES += 9b.tex 10.tex 11.tex 12.tex 13.tex
TEXFILES += 14.tex 15.tex 16.tex 17.tex 18.tex
TEXFILES += 19.tex 20.tex 21.tex 22.tex 23.tex
TEXFILES += 24.tex 25.tex 26.tex 27.tex 28.tex
TEXFILES += 29.tex 30.tex 31.tex 42.tex 43.tex
TEXFILES += 44.tex 45.tex 46.tex 47.tex 48.tex
TEXFILES += 50.tex 51.tex 52.tex 54.tex 57.tex
TEXFILES += 58.tex 59.tex 60.tex


GROUP1TEX = \
		1a.tex 1b.tex 1c.tex 1d.tex \
		1e.tex 1f.tex 1g.tex 1h.tex \
		1i.tex 1j.tex 1k.tex 1l.tex \
		1m.tex 1n.tex 1o.tex 1p.tex \
		1q.tex

GROUP1SCR = $(GROUP1TEX:.tex=.scr)

1%.tex: 1%.scr 0.as1 0.as2 hol.svf
	$(UNBOX)  < $< |${SORT} >1$*.doc
	doctex -f hol.svf 1$*
	rm -f 1$*.doc


$(GROUP1SCR): dtd001.doc 0.es1.A 0.es1.B
	@sed -n -f 0.es1.A dtd001.doc
	@sed -n -f 0.es1.B dtd001.doc

GROUP2SCR = 2a.scr 2b.scr

GROUP2TEX = $(GROUP2SCR:.scr=.tex)

2%.tex: 2%.scr 0.as1 0.as2 hol.svf
	$(UNBOX)  < $< |${SORT} >2$*.doc
	doctex -f hol.svf 2$*
	rm -f 2$*

$(GROUP2SCR): dtd002.doc 0.es2
	@sed -n -f 0.es2 dtd002.doc

3.tex: 3.003 3.004 0.as1 0.as2 hol.svf
	cat 3.003 3.004 | ${SORT} > 3.doc
	doctex -f hol.svf 3
	rm -f 3.doc

3.00% : dtd00%.doc
	${UNBOX}  < $< >$@

GROUP4SCR = 4a.scr 4b.scr 4c.scr

GROUP4TEX = $(GROUP4SCR:.scr=.tex)

4a.scr : dtd006.doc 0.es3
	@sed -n -f 0.es3 dtd006.doc

4a.tex: 4a.scr 0.as1 0.as2 hol.svf
	${UNBOX} <4a.scr | ${SORT} >4a.doc
	doctex -f hol.svf 4a
	rm -f 4a.doc

4b.tex:	dtd012.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd012.doc | ${SORT} >4b.doc
	doctex -f hol.svf 4b
	rm -f 4b.doc

4c.tex:	dtd033.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd033.doc | ${SORT} >4c.doc
	doctex -f hol.svf 4c
	rm -f 4c.doc

5.tex: 5.007 5.scr.026 5.027 0.as1 0.as2 hol.svf
	${UNBOX} <5.scr.026 >5.026
	cat 5.007 5.026 5.027 |${SORT} >5.doc
	doctex -f hol.svf 5
	rm -f 5.doc

5.0%: dtd0%.doc 0.as1 0.as2
	${UNBOX} < $< |${SORT} >$@

5.scr.026: dtd026.doc
	@sed -e '/section{Tactics}/,/section{BASIC REWRITES}/d' \
	dtd026.doc > 5.scr.026

6.tex: 6.009 6.028 6.029 6.scr.026 0.as1 0.as2 hol.svf
	${UNBOX} <6.scr.026 >6.026
	cat 6.009 6.028 6.029 6.026 |${SORT} >6.doc
	doctex -f hol.svf 6
	rm -f 6.doc

6.0%: dtd0%.doc 0.as1 0.as2
	${UNBOX} < $< |${SORT} >$@

6.scr.026: dtd026.doc
	@sed -e '/section{Tactics}/,/section{BASIC REWRITES}/!d' \
	dtd026.doc > 6.scr.026

7.tex: dtd030.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd030.doc |${SORT} >7.doc
	doctex -f hol.svf 7
	rm -f 7.doc

8.tex: dtd008.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd008.doc |${SORT} >8.doc
	doctex -f hol.svf 8
	rm -f 8.doc

9a.tex: dtd020.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd020.doc|${SORT} >9a.doc
	doctex -f hol.svf 9a
	rm -f 9a.doc

9b.tex: dtd103.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd103.doc|${SORT} >9b.doc
	doctex -f hol.svf 9b
	rm -f 9b.doc

10.tex: dtd051.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd051.doc|${SORT} >10.doc
	doctex -f hol.svf 10
	rm -f 10.doc

11.tex: dtd046.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd046.doc|${SORT} >11.doc
	doctex -f hol.svf 11
	rm -f 11.doc

12.tex: dtd036.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd036.doc|${SORT} >12.doc
	doctex -f hol.svf 12
	rm -f 12.doc

13.tex: dtd058.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd058.doc|${SORT} >13.doc
	doctex -f hol.svf 13
	rm -f 13.doc

14.tex: dtd059.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd059.doc|${SORT} >14.doc
	doctex -f hol.svf 14
	rm -f 14.doc

15.doc: hol.thl.doc 0.15_sed
	@sed -f 0.15_sed hol.thl.doc > 15.doc

16.tex: dtd067.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd067.doc|${SORT} >16.doc
	doctex -f hol.svf 16
	rm -f 16.doc

17.tex: dtd023.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd023.doc|${SORT} >17.doc
	doctex -f hol.svf 17
	rm -f 17.doc

18.tex: dtd037.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd037.doc|${SORT} >18.doc
	doctex -f hol.svf 18
	rm -f 18.doc

19.tex: dtd038.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd038.doc|${SORT} >19.doc
	doctex -f hol.svf 19
	rm -f 19.doc

20.tex: dtd039.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd039.doc|${SORT} >20.doc
	doctex -f hol.svf 20
	rm -f 20.doc

21.tex: dtd040.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd040.doc|${SORT} >21.doc
	doctex -f hol.svf 21
	rm -f 21.doc

22.tex: dtd044.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd044.doc|${SORT} >22.doc
	doctex -f hol.svf 22
	rm -f 22.doc

23.tex: dtd045.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd045.doc|${SORT} >23.doc
	doctex -f hol.svf 23
	rm -f 23.doc

24.tex: dtd057.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd057.doc|${SORT} >24.doc
	doctex -f hol.svf 24
	rm -f 24.doc

25.tex: dtd099.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd099.doc|${SORT} >25.doc
	doctex -f hol.svf 25
	rm -f 25.doc

26.tex: dtd071.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd071.doc|${SORT} >26.doc
	doctex -f hol.svf 26
	rm -f 26.doc

27.tex: dtd072.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd072.doc|${SORT} >27.doc
	doctex -f hol.svf 27
	rm -f 27.doc

28.tex: dtd073.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd073.doc|${SORT} >28.doc
	doctex -f hol.svf 28
	rm -f 28.doc

29.tex: dtd074.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd074.doc|${SORT} >29.doc
	doctex -f hol.svf 29
	rm -f 29.doc

30.tex: dtd076.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd076.doc|${SORT} >30.doc
	doctex -f hol.svf 30
	rm -f 30.doc

31.tex: dtd100.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd100.doc|${SORT} >31.doc
	doctex -f hol.svf 31
	rm -f 31.doc

42.tex: dtd082.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd082.doc|${SORT} >42.doc
	doctex -f hol.svf 42
	rm -f 42.doc

43.tex: dtd084.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd084.doc|${SORT} >43.doc
	doctex -f hol.svf 43
	rm -f 43.doc

44.tex: dtd081.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd081.doc|${SORT} >44.doc
	doctex -f hol.svf 44
	rm -f 44.doc

45.tex: dtd025.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd025.doc|${SORT} >45.doc
	doctex -f hol.svf 45
	rm -f 45.doc

46.tex: dtd010.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd010.doc|${SORT} >46.doc
	doctex -f hol.svf 46
	rm -f 46.doc

47.tex: dtd110.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd110.doc|${SORT} >47.doc
	doctex -f hol.svf 47
	rm -f 47.doc

48.tex: dtd015.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd015.doc|${SORT} >48.doc
	doctex -f hol.svf 48
	rm -f 48.doc

50.tex: dtd093.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd093.doc|${SORT} >50.doc
	doctex -f hol.svf 50
	rm -f 50.doc

51.tex: dtd105.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd105.doc|${SORT} >51.doc
	doctex -f hol.svf 51
	rm -f 51.doc

52.tex: dtd116.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd116.doc|${SORT} >52.doc
	doctex -f hol.svf 52

54.tex: dtd108.doc 0.as1 0.as2 hol.svf
	sed -e "/section{Compiler/,/section{String/d" dtd108.doc | \
	${UNBOX} |${SORT} >54.doc
	doctex -f hol.svf 54
	rm -f 54.doc

57.tex: dtd119.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd119.doc|${SORT} >57.doc
	doctex -f hol.svf 57
	rm -f 57.doc

58.tex: dtd121.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd121.doc|${SORT} >58.doc
	doctex -f hol.svf 58
	rm -f 58.doc

59.tex: dtd120.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd120.doc|${SORT} >59.doc
	doctex -f hol.svf 59
	rm -f 59.doc

60.tex: dtd122.doc 0.as1 0.as2 hol.svf
	${UNBOX} <dtd122.doc | ${SORT} >60.doc
	doctex -f hol.svf 60
	rm -f 60.doc

################
#
#  Scripts for massaging index entries etc.
#
################

0.15_sed 0.idx_sed1 0.trim_sed 0.ptx_sed1 0.ptx_sed2 0.ptx_sed3 0.ptx_sed4 0.asa 0.es1.A 0.es1.B 0.as1 0.as2 0.es2 0.es3 0.fgrep 0idx_begin.doc 0idx_end.doc: imp113.doc hol.svf
	docsml -f hol.svf imp113

################

0_idx_raw: $(USR029DOCS) 0.fgrep 15.doc
	@grep `cat 0.fgrep` $(USR029DOCS) 15.doc > 0_idx_raw
	
0_idx_all: 0_idx_raw 0.idx_sed1
	@sed -f 0.idx_sed1 0_idx_raw | sort -u | nl -ba -nrz > 0_idx_all

0idx.doc : 0idx_begin.doc 0_idx_all 0idx_end.doc
	@echo "% 0idx.doc" > 0idx.doc
	@echo "=TEX" >> 0idx.doc
	cat 0idx_begin.doc >> 0idx.doc
	@echo "=SML" >> 0idx.doc
	cat 0_idx_all >> 0idx.doc
	@echo "=TEX" >> 0idx.doc
	cat 0idx_end.doc >> 0idx.doc

0idx.idx : 0idx.doc hol.svf
	doctex -f hol.svf 0idx
	texdvi 0idx
	rm -f 0idx.aux 0idx.dvi 0idx.tex 0idx.log 0idx.sid

0_idx_trimmed : 0idx.idx 0.trim_sed
	@sed -e 's/^\\indexentry{\(.*\)}{[0-9]*}$$/\1/' \
		-f 0.trim_sed \
		0idx.idx \
	| nl -ba -nrz \
	> 0_idx_trimmed

0_idx_keyword : 0_idx_trimmed 0_idx_all
	join -o "1.2 2.2" '-t	' 0_idx_trimmed 0_idx_all \
	| sort -u \
	> 0_idx_keyword

029_entries : usr029.idx 0.trim_sed
	@sed	-e 's/^\\indexentry{\(.*\)}{ *\([0-9]*\)}$$/\1	\2/' \
		-f 0.trim_sed \
		usr029.idx \
	| sort -u \
	> 029_entries

0_kwic_source : 0_idx_keyword 029_entries
	join -o "1.2 2.2" '-t	' 029_entries 0_idx_keyword | sort -u > 0_kwic_source

0kwic.doc : 0_kwic_source 0.ptx_sed1 0.asa 0.ptx_sed2 0kwic.warn 0.ptx_sed3 0.ptx_sed4
	@echo =TEX > 0kwic.doc
	@sed -f 0.ptx_sed1 0_kwic_source \
	| awk -f 0.asa \
	| sed -f 0.ptx_sed2 \
	| sort -u \
	| sed -f 0.ptx_sed3 \
	| sort -f \
	| sed -f 0.ptx_sed4 \
	>> 0kwic.doc

0kwic.tex : 0kwic.doc hol.svf
	doctex -f hol.svf 0kwic
0kwic.warn : 0_idx_keyword1c 029_entries1c usr029.idx
	@echo 'Index status' > 0kwic.warn
	@echo '' >> 0kwic.warn
	@echo `wc -l < usr029.idx`' Index entry requests in usr029.idx.' >> 0kwic.warn
	@echo '' >> 0kwic.warn
	@echo `wc -l < 029_entries1c`' Distinct index entries in usr029.idx.' >> 0kwic.warn
	@echo ' ' >> 0kwic.warn
	@comm -12 0_idx_keyword1c 029_entries1c > 0kwic.matched
	@echo `wc -l < 0kwic.matched`' Entries matched' >> 0kwic.warn
	@echo '' >> 0kwic.warn
	@comm -23 0_idx_keyword1c 029_entries1c > 0kwic.unnecessary
	@echo `wc -l < 0kwic.unnecessary`' Unnecessary entries from "0_idx_keyword1c".' >> 0kwic.warn
	@echo '		These entries are indexed in the DTD documents,' >> 0kwic.warn
	@echo '		but are not needed in usr029.' >> 0kwic.warn
	echo '' >> 0kwic.warn
	@comm -13 0_idx_keyword1c 029_entries1c > 0kwic.warn_029_lost
	@echo `wc -l < 0kwic.warn_029_lost`' Index entries lost from usr029.idx.' >> 0kwic.warn
	@echo '		This count should, ideally, be zero.  It indicates' >> 0kwic.warn
	@echo '		index entry requests in usr029 that have not been' >> 0kwic.warn
	@echo '		satisfied by the index entry creation mechanisms.' >> 0kwic.warn
	@echo '		File \"0kwic.warn_029_lost\" gives the lost entries.' >> 0kwic.warn
	@echo ''
	@fmt -c < 0kwic.warn | sed -e '/^$$/d'
	@echo ''
	
0_idx_keyword1c : 0_idx_keyword
	@sed -e 's/	.*$$//' 0_idx_keyword  | sort -u > 0_idx_keyword1c

029_entries1c : 029_entries
	@sed -e 's/	.*$$//' 029_entries  | sort -u > 029_entries1c


usr029.dvi1  : hol1.sty USR.sty usr029.doc 0kwic.tex \
		$(GROUP1TEX:+=) 1a.scr \
		$(GROUP2TEX:+=) $(GROUP4TEX:+=) \
		$(TEXFILES) usr024_data.tex hol.svf
	doctex -f hol.svf usr029
	if egrep "\\cite" [0-9]*.tex> 0cite.temp ; \
	then \
		echo Warning: unexpected citations found > 0cite.warn ; \
		cat 0cite.temp >> 0cite.warn ; \
	fi
	rm -f 0cite.temp
	rm -f usr029.dvi usr029.log
	texdvi -b usr029 > usr029.dvi.ldd </dev/null
	$(MAKE) -f $(HOLMKF) 0kwic.tex
	@touch 0cite.warn
	@cat 0cite.warn

usr029.log usr029.dvi: usr029.dvi1
	@rm -f 0cite.warn
	texdvi usr029  > usr029.dvi.ldd1 </dev/null
	@rm -f usr029.dvi
	$(MAKE) -f $(HOLMKF) 0kwic.tex
	texdvi usr029 > usr029.dvi.ldd2 </dev/null
	@rm -f usr029.dvi
	$(MAKE) -f $(HOLMKF) 0kwic.tex
	texdvi usr029
	$(MAKE) -f $(HOLMKF) 0kwic.tex
	touch 0cite.warn
	cat 0cite.warn

usr029.idx :
	touch usr029.idx

######################################################################
#	usr013 - HOL tutorial notes
######################################################################

USR013DOCS  = usr013.doc
USR013DOCS += usr013A.doc
USR013DOCS += usr013B.doc
USR013DOCS += usr013C.doc
USR013DOCS += usr013D.doc
USR013DOCS += usr013E.doc
USR013DOCS += usr013F.doc
USR013DOCS += usr013G.doc
USR013DOCS += usr013H.doc
USR013DOCS += usr013X.doc
USR013DOCS += usr013S.doc

USR013TEXS = $(USR013DOCS:.doc=.tex)
USR013SMLS = $(USR013DOCS:.doc=.sml)
	
usr013.dvi1: hol1.sty USR.sty $(USR013DOCS) $(USR013TEXS) usr024_data.tex
	texdvi usr013
usr013.dvi: hol1.sty USR.sty $(USR013DOCS) $(USR013TEXS)
	texdvi -b usr013 > usr013.dvi.ldd1 </dev/null
	texdvi usr013 > usr013.dvi.ldd2 </dev/null
	texdvi usr013
usr013.th:	$(TUTDB) $(USR013DOCS) $(USR013SMLS)
	pp -d $(TUTDB) -i force_delete_usr013.sml -i usr013A.sml \
			-i usr013B.sml -i usr013C.sml -i usr013D.sml \
			-i usr013E.sml -i usr013F.sml -i usr013G.sml \
			-i usr013H.sml \
			< save_and_quit.sml
	touch usr013.th
usr013.exercises: usr013.th usr013X.doc usr013X.sml
	pp -d $(TUTDB) -i usr013X.sml < save_and_quit.sml
	touch usr013.exercises
usr013.solutions:	usr013.exercises usr013S.doc usr013S.sml
	pp -d $(TUTDB) -i usr013S.sml < save_and_quit.sml
	touch usr013.solutions

######################################################################
#	usr022 - HOL Tutorial slides
######################################################################


usr022.dvi: usr022.doc usr022_slides.doc usr022.tex usr022_slides.tex usr024_data.tex
	latex usr022
	latex usr022
	latex usr022

usr022.$(TUT): $(TUTDB) usr022_slides.doc usr022_slides.sml
	pp -d $(TUT) -i force_delete_tutorial.sml \
	        -i usr022_slides < save_and_quit.sml
	touch usr022.$(TUT)

######################################################################
#	spc001 - HOL Formalised: Language and Overview
######################################################################

spc001.dvi: spc001.doc hol.svf
	docsml -f hol.svf spc001
	pp_list -i spc001.sml -d $(HOLDB) spc001 > spc001.thy.doc
	doctex -f hol.svf spc001.thy
	(docdvi -4 spc001 || true)

######################################################################
#	spc002 - HOL Formalised: Semantics
######################################################################

spc002.dvi: spc002.doc hol.svf
	docsml -f hol.svf spc001
	docsml -f hol.svf spc002
	pp_list -i spc001.sml -i spc002.sml -d $(HOLDB) spc002 > spc002.thy.doc
	doctex -f hol.svf spc002.thy
	(docdvi -4 spc002 || true)

######################################################################
#	spc003 - HOL Formalised: Deductive System
######################################################################

spc003.dvi: spc003.doc hol.svf
	docsml -f hol.svf spc001
	docsml -f hol.svf spc002
	docsml -f hol.svf spc003
	pp_list -i spc001.sml -i spc002.sml -i spc003.sml -d $(HOLDB) spc003 > spc003.thy.doc
	doctex -f hol.svf spc003.thy
	(docdvi -4 spc003 || true)

######################################################################
#	spc004 - HOL Formalised: Proof Development System
######################################################################

spc004.dvi: spc004.doc hol.svf
	docsml -f hol.svf spc001
	docsml -f hol.svf spc002
	docsml -f hol.svf spc003
	docsml -f hol.svf spc004
	pp_list -i spc001.sml -i spc002.sml -i spc003.sml -i spc004.sml -d $(HOLDB) spc004 > spc004.thy.doc
	doctex -f hol.svf spc004.thy
	(docdvi -4 spc004 || true)

######################################################################
#	spc005 - HOL Formalised: Formal Design of the Logical Kernel
######################################################################

spc005.dvi: spc005.doc hol.svf
	docsml -f hol.svf spc001
	docsml -f hol.svf spc002
	docsml -f hol.svf spc003
	docsml -f hol.svf spc004
	docsml -f hol.svf spc005
	pp_list -i spc001.sml -i spc002.sml -i spc003.sml -i spc004.sml -i spc005.sml -d $(HOLDB) spc005 > spc005.thy.doc
	doctex -f hol.svf spc005.thy
	(docdvi -4 spc005 || true)

######################################################################
#	wrk022 - Modal Logic in HOL
######################################################################

wrk022.dvi: wrk022.doc hol.svf
	docsml -f hol.svf wrk022
	pp_list -i wrk022.sml -d $(HOLDB) wrk022 > wrk022.thl.doc
	doctex -f hol.svf wrk022.thl
	(docdvi -4 wrk022 || true)

######################################################################
#	wrk043 - Ramseys theorem
######################################################################

wrk043.dvi: wrk043.doc wrk044.doc hol.svf
	docsml -f hol.svf wrk043
	docsml -f hol.svf wrk044
	pp_list -i wrk044.sml -i wrk043.sml -d $(HOLDB) ramsey > wrk043.thl.doc
	doctex -f hol.svf wrk043.thl
	(docdvi -4 wrk043 || true)

######################################################################
#	wrk044 - Theorems on Finiteness
######################################################################

wrk044.dvi: wrk044.doc hol.svf
	docsml -f hol.svf wrk044
	pp_list -i wrk044.sml -d $(HOLDB) fin_thms > wrk044.thl.doc
	doctex -f hol.svf wrk044.thl
	doctex -f hol.svf wrk044
	echo > wrk044.bbl
	texdvi wrk044 > wrk044.dvi.ldd1 </dev/null
	texdvi wrk044 > wrk044.dvi.ldd2 </dev/null
	texdvi wrk044

######################################################################
#	wrk046 - Useful lemmas
######################################################################

wrk046.dvi: wrk046.doc hol.svf
	doctex -f hol.svf wrk046
	texdvi wrk046

######################################################################
#	wrk051
######################################################################

wrk051.dvi: wrk051.doc hol.svf
	doctex -f hol.svf wrk051
	texdvi -b wrk051  > wrk051.dvi.ldd1 </dev/null
	texdvi wrk051 > wrk051.dvi.ldd2 </dev/null
	texdvi wrk051

######################################################################
#	 Theory Listing
######################################################################

hol.thl.doc:
	pp_list -d $(HOLDB) -a > hol.thl.doc

######################################################################
#
# Dependencies - determining the order of compilation
#
######################################################################

dtd001.ldd: imp002.ldd
dtd002.ldd: dtd108.ldd0
dtd122.ldd: imp001.ldd
dtd110.ldd: imp122.ldd
dtd003.ldd: imp110.ldd
dtd006.ldd: imp003.ldd
dtd004.ldd: imp006.ldd
dtd010.ldd: imp004.ldd
dtd012.ldd: imp010.ldd
dtd015.ldd: imp012.ldd
dtd011.ldd: imp015.ldd
dtd020.ldd: imp011.ldd
dtd019.ldd: imp020.ldd
dtd014.ldd: imp019.ldd
dtd016.ldd: imp014.ldd
dtd022.ldd: imp016.ldd
dtd023.ldd: imp022.ldd
dtd024.ldd: imp022.ldd
dtd031.ldd: imp024.ldd
dtd032.ldd: imp031.ldd
dtd025.ldd: imp032.ldd
dtd007.ldd: imp023.ldd imp120.ldd
dtd008.ldd: imp007.ldd
dtd009.ldd: imp008.ldd
dtd051.ldd: imp009.ldd
dtd028.ldd: imp051.ldd
dtd026.ldd: imp028.ldd
dtd030.ldd: imp026.ldd
dtd033.ldd: imp030.ldd
dtd037.ldd: imp033.ldd
dtd038.ldd: imp037.ldd
dtd039.ldd: imp038.ldd
dtd040.ldd: imp039.ldd
dtd103.ldd: imp040.ldd
dtd045.ldd: imp103.ldd
dtd027.ldd: imp045.ldd
dtd029.ldd: imp027.ldd
dtd044.ldd: imp029.ldd
dtd046.ldd: imp044.ldd
dtd058.ldd: imp046.ldd
dtd059.ldd: imp058.ldd
dtd057.ldd: imp059.ldd
dtd067.ldd: imp057.ldd
dtd076.ldd: imp067.ldd
dtd081.ldd: imp076.ldd
dtd082.ldd: imp081.ldd
dtd084.ldd: imp082.ldd
dtd071.ldd: imp084.ldd
dtd072.ldd: imp071.ldd
dtd074.ldd: imp072.ldd
dtd073.ldd: imp074.ldd
dtd093.ldd: imp073.ldd
dtd036.ldd: imp093.ldd
dtd105.ldd: imp036.ldd
dtd114.ldd: imp105.ldd
dtd115.ldd: imp105.ldd
dtd116.ldd: imp115.ldd imp114.ldd imp119.ldd
dtd119.ldd: imp105.ldd
dtd120.ldd: imp012.ldd
dtd121.ldd: imp012.ldd

imp108.ldd0: dtd108.ldd0
imp002.ldd: dtd002.ldd
imp001.ldd: dtd001.ldd
imp122.ldd: dtd122.ldd
imp110.ldd: dtd110.ldd

imp003.ldd: dtd003.ldd
imp006.ldd: dtd006.ldd
imp004.ldd: dtd004.ldd
imp010.ldd: dtd010.ldd
imp012.ldd: dtd012.ldd
imp015.ldd: dtd015.ldd
imp011.ldd: dtd011.ldd
imp020.ldd: dtd020.ldd
imp019.ldd: dtd019.ldd
imp014.ldd: dtd014.ldd
imp016.ldd: dtd016.ldd
imp022.ldd: dtd022.ldd
imp023.ldd: dtd023.ldd imp025.ldd
imp024.ldd: dtd024.ldd
imp031.ldd: dtd031.ldd
imp032.ldd: dtd032.ldd
imp025.ldd: dtd025.ldd
imp007.ldd: dtd007.ldd
imp008.ldd: dtd008.ldd
imp009.ldd: dtd009.ldd
imp051.ldd: dtd051.ldd
imp028.ldd: dtd028.ldd
imp026.ldd: dtd026.ldd
imp030.ldd: dtd030.ldd
imp033.ldd: dtd033.ldd
imp037.ldd: dtd037.ldd
imp038.ldd: dtd038.ldd
imp039.ldd: dtd039.ldd
imp040.ldd: dtd040.ldd

imp103.ldd: dtd103.ldd
imp045.ldd: dtd045.ldd
imp027.ldd: dtd027.ldd
imp029.ldd: dtd029.ldd
imp044.ldd: dtd044.ldd
imp046.ldd: dtd046.ldd
imp058.ldd: dtd058.ldd
imp059.ldd: dtd059.ldd
imp057.ldd: dtd057.ldd
imp067.ldd: dtd067.ldd
imp076.ldd: dtd076.ldd
imp081.ldd: dtd081.ldd
imp082.ldd: dtd082.ldd
imp084.ldd: dtd084.ldd
imp071.ldd: dtd071.ldd
imp072.ldd: dtd072.ldd
imp074.ldd: dtd074.ldd
imp073.ldd: dtd073.ldd
imp092.ldd: dtd092.ldd
imp093.ldd: dtd093.ldd
imp036.ldd: dtd036.ldd
imp105.ldd: dtd105.ldd
imp114.ldd: dtd114.ldd
imp115.ldd: dtd115.ldd
imp116.ldd: dtd116.ldd
imp119.ldd: dtd119.ldd
imp120.ldd: dtd120.ldd
imp121.ldd: dtd121.ldd

mdt023.ttd: mdt023.sml dtd023.tch $(IEDTESTSMLS)
mdt037.ttd: mdt037.sml dtd037.tch $(IEDTESTSMLS)
mdt038.ttd: mdt038.sml dtd038.tch $(IEDTESTSMLS)
mdt039.ttd: mdt039.sml dtd039.tch $(IEDTESTSMLS)
mdt040.ttd: mdt040.sml dtd040.tch $(IEDTESTSMLS)
mdt044.ttd: mdt044.sml dtd044.tch $(IEDTESTSMLS)
mdt045.ttd: mdt045.sml dtd045.tch $(IEDTESTSMLS)
mdt071.ttd: mdt071.sml dtd071.tch $(IEDTESTSMLS)
mdt072.ttd: mdt072.sml dtd072.tch $(IEDTESTSMLS)
mdt073.ttd: mdt073.sml dtd073.tch $(IEDTESTSMLS)
mdt074.ttd: mdt074.sml dtd074.tch $(IEDTESTSMLS)
mdt092.ttd: mdt092.sml dtd092.tch $(IEDTESTSMLS)
mdt093.ttd: mdt093.sml dtd093.tch $(IEDTESTSMLS)
mdt114.ttd: mdt114.sml dtd114.tch $(IEDTESTSMLS)
mdt115.ttd: mdt115.sml dtd115.tch $(IEDTESTSMLS)
mdt116.ttd: mdt116.sml dtd116.tch $(IEDTESTSMLS)


######################################################################
#
#	Making the SML files - a convenience for some purposes
#
######################################################################

allsmls: $(HOLSMLFILES0) $(HOLSMLFILES1) $(HOLSMLFILES2)

######################################################################
#
#	Building the HOL database
#
######################################################################


holbuilt.ldd: holstage1.$(HEAP_SUFFIX) $(HOLLDDFILES2)
	@- rm -rf holbuilt.ldd
	$(MAKE) -f $(HOLMKF) holinitcmd
	$(MAKE) -f $(HOLMKF) holbannercmd
	grep '+++ Compiled' $(HOLLDDFILES1)
	grep '+++ Compiled' $(HOLLDDFILES2)
	@ touch holbuilt.ldd
	$(DBGC) $(DBGCARG) $(HOLDB)
	echo "Done."

hol holbuild: $(HOLDBLDD)

$(HOLLDDFILES2) $(HOLLDDFILES1): $(HOLDBLDD)

stage1 holstage1.$(HEAP_SUFFIX): $(HOLLDDFILES1)
	$(DBGC) $(DBGCARG) $(HOLDB)
	cp $(HOLDB) holstage1.$(HEAP_SUFFIX)
	echo "PPBuild.pp'save_name := \"holstage1\"; PPBuild.pp'save();" \
		| $(RUNML) $(MLDBPFX)holstage1.$(HEAP_SUFFIX)

holinitcmd:
	echo "$(HOLINITCMD)" | $(RUNML) $(MLDBPFX)$(HOLDB)

holbannercmd:
	echo "$(HOLBANNERCMD)" | $(RUNML) $(MLDBPFX)$(HOLDB)

$(HOLDBLDD) $(HOLLDDFILES0) $(MLPROGS) : $(HOLSMLFILES0)
	rm -f $(HOLDB)
	@echo Compiling dtd108.sml and imp108.sml
	$(HOLSTARTCMD) > dtd108.ldd0
	@echo "See dtd108.ldd0" > imp108.ldd0
	chmod u+wr $(HOLDB)
	@touch $(HOLDBLDD)
	@touch dtd108.ldd0

dtd002.sml \
imp002.sml : dtd002.doc imp002.doc hol.svf
	docsml -f hol.svf dtd002
	docsml  -f hol.svf imp002
	sed -e '/^[()"\\}; ]*new_error_message/,$$ !d' < dtd002.sml >> imp002.sml
	sed -e '/^[()"\\}; ]*new_error_message/,$$ d' < dtd002.sml > dtd002.sml.tmp
	mv dtd002.sml.tmp dtd002.sml

imp108.sml: imp108-pp-include.sml

imp108-pp-include.sml: dtd108.sml

imp019.sml : dtd019.sml imp019.doc imp018.sml
	docsml -f hol.svf imp019

int002.dvi: int002.thl.tex

int002.thl.doc: int002.sml
	pp_list -d hol -i int002.sml arith_demo prime false \
		 arith_demo2 modal_logic > int002.thl.doc


######################################################################
#
#	Building the shell scripts
#
######################################################################

$(SHELLSCRIPTS): imp111.doc hol.svf
	sieve -f hol.svf sml < imp111.doc

######################################################################
#
#	Testing the HOL database
#
######################################################################

wrk051_hol.doc: wrk051.doc
	cat wrk051.doc >wrk051_hol.doc

ifeq ($(PPTESTMASTERDB), y)
wrk051_hol.ttd:
	@echo Demonstration scripts are not tested when PPTESTMASTERDB=y
	@echo All module tests passed. > wrk051_hol.ttd
	@echo Warning: no module tests run. >> wrk051_hol.ttd
else
$(TESTDB):	$(HOLDB)
		cat $(HOLDB) >holparent.$(HEAP_SUFFIX)
		pp_make_database -f -p holparent holchild

wrk051_hol.ttd: wrk051_hol.sml $(TESTDB) $(WRK051DOCS)
	rm -f wrk051_hol.flag
	PPHOLPARENT=holparent make -f wrk051.mkf all_hol > wrk051_hol.ttd
endif

test: $(HOLMDTTTDS) $(HOLTESTTTDS) $(HOLINTTTDS) mtreport
	@grep 'module' $(HOLMDTTTDS) $(HOLTESTTTDS) $(HOLINTTTDS)
	@-grep 'abandoning file|+++ Compiled.*Failed'  \
		$(HOLMDTTTDS) $(HOLTESTTTDS) $(HOLINTTTDS) || true
	mtreport $(HOLMDTTTDS) $(HOLTESTTTDS) $(HOLINTTTDS)

mdt036.ttd: mdt036.sml $(IEDTESTSMLS)
	echo "save_as \"mdt036parent\";" | pp -d hol
	pp_make_database -f -p mdt036parent mdt036child
	@rm -f $@ $.err 2>/dev/null
	@echo "Compiling (test)" $<
	MDT036STAGE=1 pp -f $< -d mdt036child > $*.err
	MDT036STAGE=2 pp -f $< -d mdt036child >> $*.err
	@mv $*.err $@

mdt111.ttd: mdt111.sml $(IEDTESTSMLS)
	cat $(HOLDB) > mdt111parent.$(HEAP_SUFFIX)
	echo "PPBuild.pp'save_name := \"mdt111parent\"; save_and_quit();" |\
		pp -d mdt111parent
	pp_make_database -f -p mdt111parent mdt111child
	sh mdt111.sh >$@

######################################################################
#
#	Constructing release directories
#
######################################################################

reldir:
	if [ "$${PPTARGETDIR:-}" = "" ]; \
	then \
		rm -rf "$(RELDIR)"; \
	fi
	[ -d   "$(RELDIR)" ] || mkdir "$(RELDIR)"
	
bindir:	reldir
	[ -d   "$(RELDIR)"/bin ] || mkdir "$(RELDIR)"/bin
	
dbdir:	reldir
	[ -d   "$(RELDIR)"/db ] || mkdir "$(RELDIR)"/db

docdir:	reldir
	[ -d   "$(RELDIR)"/doc ] || mkdir "$(RELDIR)"/doc

srcdir:	reldir
	[ -d   "$(RELDIR)"/src ] || mkdir "$(RELDIR)"/src

mandir:	reldir
	[ -d   "$(RELDIR)"/man ] || mkdir "$(RELDIR)"/man
	[ -d   "$(RELDIR)"/man/man1 ] || mkdir "$(RELDIR)"/man/man1

binrel: bindir $(SHELLSCRIPTS) $(MLPROGS)
	cp $(SHELLSCRIPTS) $(MLPROGS) "$(RELDIR)"/bin
	chmod -R a-w "$(RELDIR)"
	chmod -R g-w "$(RELDIR)"
	chmod -R u+w "$(RELDIR)"

dbrel: dbdir holbuilt.ldd
	cp hol.$(HEAP_SUFFIX) "$(RELDIR)"/db
	chmod -R a-w "$(RELDIR)"
	chmod -R g-w "$(RELDIR)"
	chmod -R u+w "$(RELDIR)"

build:	holbuilt.ldd $(SHELLSCRIPTS)

docrel: docdir  $(RELEASEDOCFILES) $(RELEASESCRIPTS) \
		mandir $(MANFILES)
	cp $(RELEASEDOCFILES) "$(RELDIR)"/doc
	cp $(RELEASESCRIPTS) "$(RELDIR)"
	chmod -R a-w "$(RELDIR)"
	chmod -R g-w "$(RELDIR)"
	chmod -R u+w "$(RELDIR)"
	cp $(MANFILES) "$(RELDIR)"/man/man1

bininst:	binrel dbrel

inst:	bininst docrel

# useful target to print out the names of all the files in the source release
packinglist:
	@echo $(PACKINGLIST)

######################################################################
#
#	Tidying Up
#	 (not perfect, but enough to force rebuilds of everything)
#
######################################################################

clean:
	rm -f $(HOLSMLFILES0) $(HOLLDDFILES0)
	rm -f $(HOLSMLFILES1) $(HOLLDDFILES1)
	rm -f $(HOLSMLFILES2) $(HOLLDDFILES2)
	rm -f $(HOLTESTSMLS) $(HOLTESTTTDS)
	rm -f $(HOLMDTSMLS) $(HOLMDTTTDS)
	rm -f $(IEDTESTSMLS) $(HOLINTTTDS)
	rm -f mdt036parent.* mdt036child.*
	rm -f *.tex *.toc *.aux *.bbl *.blg *.idx *.log *.lot *.sid *.dvi
	rm -f *.sml *.ldd *.ldd0 *.ldd1 *.ldd2 *.th *.thl.doc *.thy.doc
	rm -f [0-9]* hol.thl.* *.ttd *.tch
	rm -f mdt111*.ML mdt111*.sh mdt111parent* mdt111child*
	rm -f *.polydb imp019.grm.* hol_common hol pp-ml *.o
	rm -f $(SHELLSCRIPTS) arch-os USR.sty hol1.sty
	rm -f install_holdemo mtreport usr004.tutorial usr013.exercises
	rm -f usr013.tutorial wrk051.mkf wrk051_hol.*
	rm -f *.pp *.diff

######################################################################
#
#	Generic Rules
#
######################################################################

%.ldd: %.sml
	@rm -f $@ $*.err 2>/dev/null
	@echo "Compiling (code)" $<
	@echo "PPBuild.pp'load \"$<\";"\
		| $(RUNML) $(MLDBPFX)$(HOLDB) > $*.err
	@echo "+++ Compiled $<: OK (Compilation Run Complete) +++" >> $*.err
	@mv $*.err $@


%.ttd: %.sml $(IEDTESTSMLS) $(TESTDB)
	@rm -f $@ $.err 2>/dev/null
	@echo "Compiling (test)" $<
	@echo "use_file \"$<\"; quit();" | $(RUNML) $(MLDBPFX)$(TESTDB) > $*.err
	@mv $*.err $@

%.ttd0: %.sml $(IEDTESTSMLS)
	@rm -f $@ $.err 2>/dev/null
	@echo "Compiling (test)" $<
	@cp holstage1.$(HEAP_SUFFIX) temp.$(HEAP_SUFFIX)
	@echo "use_file \"$<\"; PPCompiler.exit 0;" \
		| $(RUNML) $(MLDBPFX)temp.$(HEAP_SUFFIX) > $*.err
	@rm temp.$(HEAP_SUFFIX)
	@mv $*.err $@

%.sml: %.pp hol.svf
	ppsml -f hol.svf $*

%.pp: %.doc
	pp_file_conv <$*.doc >$*.pp

%.tex: %.pp hol.svf
	pptex -f hol.svf $*

%.dvi: %.tex
	texdvi -b $* >/dev/null </dev/null
	texdvi $* >/dev/null </dev/null
	texdvi $*

%.tch: %.pp dtd035.sml imp035.sml
	pptch $*

HOLSMLFILES=$(HOLSMLFILES0) $(HOLSMLFILES1) $(HOLSMLFILES2)
HOLPPFILES=$(HOLSMLFILES:.sml=.pp)
HOLPPSMLFILES=$(HOLSMLFILES:.sml=.ppsml)
HOLDIFFFILES=$(HOLSMLFILES:.sml=.diff)

$(HOLDIFFFILES): %.diff: %.ppsml %.sml
		 -diff $*.ppsml $*.sml >$*.diff

diffs: $(HOLDIFFFILES)
