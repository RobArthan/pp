=TEX
% TQtemplate.tex
\documentstyle[hol,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Implementation of Basic Definitions and Axioms}  %% Mandatory field
\TPPref{DS/FMU/IED/IMP023}  %% Mandatory field
\def\SCCSversion{$Revision$%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$%
}}  %% Mandatory field (with sensible default)
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{D.J.~King & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.~Arthan & FST Team Leader}
\TPPabstract{This document contains an implementation of
the basic definitions and axioms for ICL HOL.
}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
      Library \\ R.D. Arthan\\ D.J. King}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\pagebreak
\section{DOCUMENT CONTROL}
\subsection{Contents list}
\tableofcontents
\subsection{Document cross references}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes history}  % to get section number `0.3'
\begin{description}
\item[Issue 1.1]
First version, based on \cite{DS/FMU/IED/DTD023}.
\end{description}
\subsection{Changes forecast}
None.
\pagebreak
\section{GENERAL}
\subsection{Scope}


\subsection{Introduction}

\subsubsection{Background and Purpose}


\subsubsection{Dependencies}

\subsubsection{Possible Enhancements}

\subsubsection{Deficiencies}

\section{The Theory $min$}
=SML
structure ‚MinTheory· : MinTheory = struct
local
	val unit = open_theory "min";
	val unit = new_type ("ã", 2);
	val unit = declare_infix (100, "ã");
	val unit = new_type ("BOOL", 0);
	val unit = new_type ("IND", 0);

	val unit = new_const ("ä", mk_fun (BOOL, mk_fun(BOOL, BOOL)));
	val unit = new_const ("=", mk_fun (mk_vartype "'a",
		mk_fun (mk_vartype "'a", BOOL)));
	val unit = new_const ("á", mk_fun (
		mk_fun (mk_vartype "'a", BOOL), mk_vartype "'a"));
	val unit = declare_infix (20, "ä");
	val unit = declare_infix (120, "=");
	val unit = declare_binder "ç";
	val unit = declare_binder "á";

	val unit = declare_terminator "ã";
	val unit = declare_terminator "ä";
	val unit = declare_terminator "=";
	val unit = declare_terminator "ç";
	val unit = declare_terminator "á";
in
end (* of local ... in ... *)
end; (* of structure MinTheory *)
=TEX
\section{The Theory $log$}
=SML
structure ‚LogTheory· : LogTheory = struct
local
	val unit = new_theory "log";
	val unit = declare_binder "É";
	val unit = declare_terminator "É";
	val unit = declare_binder "Ñ";
	val unit = declare_terminator "Ñ";
	val unit = declare_prefix (130, "å");
	val unit = declare_terminator "å";
	val unit = declare_infix (40, "Ä");
	val unit = declare_terminator "Ä";
	val unit = declare_infix (30, "Å");
	val unit = declare_terminator "Å";
in
	val t_def =
		simple_new_definition ("T", "T",
			ª(çx:BOOL é x) = (çx:BOOL é x)º);

	val É_def =
		simple_new_definition ("É", "É",
			ªçP:'a ã BOOL é P = (çx é T)º);

	val Ñ_def =
		simple_new_definition ("Ñ", "Ñ",
			ªçP:'a ã BOOL é P ($á P)º);

	val f_def =
		simple_new_definition ("F", "F",
			ªÉ b:BOOL é bº);

	val å_def =
		simple_new_definition ("å", "å",
			ªçb:BOOL é b ä Fº);

	val Ä_def =
		simple_new_definition ("Ä", "Ä",
		ªçb1 é çb2 é Éb é (b1 ä (b2 ä b)) ä bº);

	val Å_def =
		simple_new_definition ("Å", "Å",
		ªçb1 é çb2 é Éb é (b1 ä b) ä ((b2 ä b) ä b)º);

	val one_one_def =
		simple_new_definition ("OneOne", "OneOne",
		ªçf:'a ã 'b é Éx1 é Éx2 é (f x1 = f x2) ä (x1 = x2)º);

	val onto_def =
		simple_new_definition ("Onto", "Onto",
		ªçf:'a ã 'b é Éy é Ñx é y = f xº);

	val type_definition_def =
		simple_new_definition ("TypeDefinition", "TypeDefinition",
		ªçP é çrep:'a ã 'b é  OneOne rep Ä Éx é P x = Ñy é x = rep yº);
end; (* of local ... in ... *)
end; (* of structure LogTheory *)
=TEX
\section{The Theory $init$}
=SML
structure ‚InitTheory· : InitTheory = struct
local
	val unit = new_theory "init";
in

	val bool_cases_axiom = new_axiom ("bool_cases_axiom",
		ªÉb é (b = T) Å (b = F)º);

	val ä_antisym_axiom = new_axiom ("ä_antisym_axiom",
		ªÉb1 é Éb2 é (b1 ä b2) ä (b2 ä b1) ä (b1 = b2)º);

	val eta_axiom = new_axiom ("eta_axiom",
		ªÉf:'a ã 'b é (çx é f x) = fº);

	val á_axiom = new_axiom ("á_axiom",
		ªÉP:'a ã BOOL é Éx é P x ä P($á P)º);

	val infinity_axiom = new_axiom ("infinity_axiom",
		ªÑf:IND ã IND é OneOne f Ä $å(Onto f)º);
end; (* of local ... in ... *)
end; (* of structure InitTheory *)
=TEX
\section{The Theory $misc$}
This contains definitions of bi-implication and
the unique existential quantifer, together with
some of the constants needed to support the parser é 
=SML
structure ‚MiscTheory· : MiscTheory = struct
local
	val unit = new_theory "misc";
	val unit = declare_binder "Ñ%down%1";
	val unit = declare_terminator "Ñ%down%1";
	val unit = declare_alias ("Ç", ª$=:BOOLãBOOLãBOOLº);
	val unit = declare_infix (10, "Ç");
	val unit = declare_terminator "Ç";

in
	val Ñ%down%1_def = simple_new_definition ("Ñ%down%1", "Ñ%down%1",
		ªçP:'a ã BOOL é  $Ñ P Ä Éx é Éy é (P x Ä P y) ä (x = y)º);

	val let_def = simple_new_definition ("Let", "Let",
		ªçf:'a ã 'b é çx é  f xº);

	val cond_def = simple_new_definition ("Cond", "Cond",
		ªçb é çx1:'a é çx2 é áx é ((b=T) ä (x=x1)) Ä ((b=F) ä (x=x2))º);
end; (* of local ... in ... *)
end; (* of structure MiscTheory *)
=TEX

=SML
open MinTheory LogTheory InitTheory MiscTheory;
=TEX

\twocolumn[\section{INDEX OF DEFINED TERMS}]
\printindex
\end{document}


