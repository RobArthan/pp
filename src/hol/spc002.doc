=TEX
% $Id$
\documentstyle[hol,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{TECHNOLOGY PROJECTS}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{A Formal Semantics of HOL}  %% Mandatory field
\TPPref{DS/FMU/IED/SPC002}  %% Mandatory field
\def\SCCSversion{$Revision$
}
\TPPissue{\SCCSversion}  %% Mandatory field
%\TPPdate{}  %% Mandatory field (with sensible default)
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{R.B.~Jones & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.B.~Jones & FMU Manager}
\TPPabstract{
A formal specification, in HOL, of the semantics of the HOL language is presented.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
      R.D. Arthan \\ M.J.C. Gordon (Cambridge) \\ R.B.Jones \\ K. Blackburn \\ G.M. Prout
}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents list}
\tableofcontents
\subsection{Document cross references}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes history}  % to get section number `0.3'
\begin{description}
\item[Issue \SCCSversion]
First draft for comment.
\end{description}
\subsection{Changes forecast}
Lots.
\newpage
\section{GENERAL}
\subsection{Scope}
This document is an attempt to specify the
semantic aspects of the
HOL language using the HOL system.
The document may be viewed as a formal counterpart to the informal set theoretic semantics by Any Pitts in chapter 10 of the HOL manual, though the correspondence is not intended to be particularly direct and Andy has no share in the infedellities introduced by my failure to follow him more closely.
\subsection{Introduction}
\subsection{Defining Semantics}
\subsection{Overview of the Specification}
\subsection{Introducing the new theory}

\Hide{
extend_theory`spc002`;;
map loadf [`TAUT`;`infra`];;
lemmas_on := false;;
garbage_collection_diags false;;
}
We introduce the new theory. Its parents are
library theories which we will use later.
We set some controls for the infrastructure which
supports the Z-like definition mechanism and for the
ML system.
Â
new_theory`spc002`;;
map new_parent [`spc001`;`infra_theory`;`Library3`];;
map loadf [`infra`];;
lemmas_on := false;;
garbage_collection_diags false;;
Ê
The following ML detects what was a common source of
error in earlier versions of this document.
It adds an extra check to the handling of constant and schema
definition boxes.
Â
let standard_const_def = const_def;;
let standard_schema_def = schema_def;;
let check_def tm = 
	let msg1 =`check_def: free variable `
	in let msg2 = ` found in predicate of definition`
	in let (names, def_frees) = ((frees # frees) o dest_pair) tm
	in (map (çxémem x names => () | prt_string (msg1^(fst(dest_var x))^msg2)) def_frees; ());; 
let const_def tm = (check_def tm; standard_const_def tm);;
let schema_def name abb tm = (check_def tm; standard_schema_def name abb tm);;
Ê
\section{TYPES} \label{TYPES}
\subsection{Type Structures}
Â
new_type_abbrev(`TYPE_STRUC`,":string ã Ü");;
Ê
\subsection{Type Models}
Â
new_type 0 `SET`;;
Ê
Â
new_type_abbrev(`TYPE_MODEL`,
	":(string â (SET)list â SET)");;
Ê
»
›	type_model	:TYPE_STRUC ã TYPE_MODEL ã bool
›
…
›	É(ts:TYPE_STRUC)(s:string)(tl:(SET)list)(t∞:SET)(t¨:SET)é
›
›		((type_model ts (s, tl, t∞)) Ä (type_model ts (s, tl, t¨))
›		ä	(ts s > 0) Ä (length tl = (ts s) - 1) Ä (t∞ = t¨))
›
›	Ä	((ts s > 0) Ä (length tl = (ts s) - 1)
›		ä	Ñt:SETé type_model ts (s, tl, t))
À
\subsection{Types in Context}
Â
new_type_abbrev(`TYPE_IN_CONTEXT`,":(string ã bool) â TYPE");;
Ê
\subsection{Semantics of Types}
»
›	type_value	:TYPE_STRUC ã TYPE_MODEL ã TYPE_IN_CONTEXT
			ã ((SET)list â SET) ã bool
›
…
›	É(ts:TYPE_STRUCT)
	(tm:TYPE_MODEL)
	((vars,type):(string ã bool) â TYPE)
	((sl,s):(SET)list â SET)é
›
›		(type_value ts tm (vars, mk_vartype tyn) (sl,s)
		=	vars tyn)
	Ä	(type_value ts tm (vars, mk_type (tcn,tl)) (sl,s)
		=	tm (tcn,(map (type_value tm) (map (çx:TYPEévars,x) tl),))
À
\section{MODELS} \label{MODELS}

%\section{THE THEORY}
%\begin{FT}{}
% \input{holsyn.th.prt}
%\end{FT}

\twocolumn
\section{INDEX OF DEFINED TERMS}
\printindex
\end{document}

