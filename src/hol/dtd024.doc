% dtd024.doc   %Z% $Date$ $Revision$ $RCSfile$

=TEX
% dtd024.doc   %Z% $Date$ $Revision$ $RCSfile$
\documentstyle[hol1,11pt,TQ]{article}

\TPPtitle{Detailed Design of `Oppen' Formatting Routines}
\TPPref{DS/FMU/IED/DTD024}
\def\SCCSissue{$Revision$%
}
\TPPissue{\SCCSissue}
\TPPdate{\FormatDate{$Date$%
}}
\TPPproject{FST PROJECT}

=IGN

Commands to process this document in various ways.

doc4errors dtd024
use_file "dtd024.sml";

make -f rel001.mkf dtd024.dvi
doc4tex dtd024
tex4dvi dtd024
bibtex dtd024
doc4tex dtd024 ; tex4dvi dtd024
dvipage dtd024 &


doc4errors dtd024
use_file "dtd024.sml";

lasp -s dtd024.doc > zz1
lasp -s -u dtd024.OKwords dtd024.doc > zz1

=TEX
%\TPPstatus{Approved}
\TPPstatus{Draft}
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{A.J. Hammon & WIN01}  %% Mandatory field
\TPPauthorisation{R.D.~Arthan & FST Team Leader}
\TPPabstract{This document contains the detailed design of the
	Oppen-style formatting routines for
	Release~1 of ICL~HOL.}
\TPPdistribution{\parbox[t]{4.0in}{%
	Library
}}

%\ftlinepenalty=9999
\makeindex

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\catcode`\_=\active
\def\_{\kern.06em\vbox{\hrule height.1ex width.3em}\hskip0.1em\relax}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\makeTPPfrontpage

\vfill
\begin{center}
\bf Copyright \copyright\ : International Computers Ltd \number\year
\end{center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{DOCUMENT CONTROL}

%********************************************************************

\subsection{Contents List}
\tableofcontents
% \listoftables

%********************************************************************

\subsection{Document Cross References}

\bibliographystyle{fmu}
\bibliography{fmu}

%********************************************************************

\subsection{Changes History}

\begin{description}

\item[Issue 1.1  to 1.3]  Initial drafts.

\item[28 August 1991, issue 2.1 ] First approved issue.

\item[20 January 1992, Issue 2.2] Updated to use new fonts.

\item [Issue 2.3 (13th April 1992)]
Changes due to CR0017.

%\item[\FormatDate{$Date$%
%}, issue $Revision$

\end{description}

%********************************************************************

\subsection{Changes Forecast} \label{ChangesForecast}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%\newpage
\section{GENERAL}

%********************************************************************

\subsection{Scope}

This document contains the detailed design of the Oppen-style
formatting routines for Release~1 of the ICL HOL system.  These
routines are required by the high level design~\cite{DS/FMU/IED/HLD008}
as part of the pretty printing capabilities of the system.

The Oppen-style formatting routines are based on D.C.~Oppen's
paper~\cite{Oppen80}.

%********************************************************************

\subsection{Introduction}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{SIGNATURE} \label{StartSignature}

=DOC
signature ÛOppenFormattingÝ = sig
=DESCRIBE
This structure contains the Oppen-style formatting routines.
=ENDDOC


%--------------------------------------------------------------------
=DOC
type ÛOPPEN_FUNSÝ	(*
		(    (string -> unit)		(* addstring *)
		*   (int * bool -> unit)		(* beginb *)
		*   (int * int -> unit)		(* space *)
		*   (unit -> unit)		(* endb *)		*);
=DESCRIBE
The routines that form the interface to an Oppen style
layout system, see {\em Prettyprinting\/} by D.C.~Oppen in
{\em ACM Transactions on Programming Languages and Systems,}
October 1980.
=FAILURE
24002	DESIGN ERROR Failed to empty scan buffer
=FAILUREC
Error 24002 denotes an internal fault in the formatting routines.
=SEEALSO
Function $oppen_format$.
=ENDDOC
%--------------------------------------------------------------------

The style of the interface to functions $oppen_format$ and
$oppen_print$ is designed to be close to that of function
$PolyML.install_pp$ so that the same printer function may be used
each of them.  Function $PolyML.install_pp$ is an interface to the
pretty printing system of the PolyML compiler.

=DOC
val Ûoppen_formatÝ :
		(unit -> int)			(* width *)
	->	(OPPEN_FUNS -> 'a -> unit)	(* printer *)
	->	'a				(* arg *)
	->	string list
=DESCRIBE
In the call `$oppen_format\;\;width\;\;printer\;\;arg$' the
string representation of the value of $arg$ is produced by the side
effects of function $printer$ which uses the Oppen-style printing
routines passed to it.  A complex value may be split across several
lines of text, one line per list element, the head element of the list
being the first line of the output.  The function $width$ yields the
maximum number of characters desired per line.  Longer lines may be
produced when an argument to the $addstring$ printing routine exceeds
the desired width.
=SEEALSO
Type $OPPEN_FUNS$ for function $addstring$.
=FAILURE
24001	Line width ?0 is too small, minimum is ?1
=ENDDOC
%--------------------------------------------------------------------
=DOC
val Ûoppen_printÝ :
		(unit -> int)			(* width *)
	->	(OPPEN_FUNS -> 'a -> unit)	(* printer *)
	->	'a				(* arg *)
	->	unit
=DESCRIBE
In the call `$oppen_print\;\;width\;\;printer\;\;arg$' the
the value of $arg$ is printed on the standard output by the side
effects of function $printer$ which uses the Oppen-style printing
routines passed to it.  A complex value may be split across several
lines of text.  The function $width$ yields the
maximum number of characters desired per line.  Longer lines may be
produced when an argument to the $addstring$ printing routine exceeds
the desired width.
=SEEALSO
Type $OPPEN_FUNS$ for function $addstring$.
=FAILURE
24001	Line width ?0 is too small, minimum is ?1
=ENDDOC
%--------------------------------------------------------------------

=SML
end (* of signature OppenFormatting *);
=TEX

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{TEST POLICY}

The Oppen formatting functions are to be tested according to the
general criteria laid down in the quality
plan~\cite{DS/FMU/IED/PLN008}.

A number of tests are required, these basically exercise all the
interfaces to the routines supplied by this structure.  Most of the
tests will exercise function $oppen_format$ on the grounds that it may
be tested by examining its results.  Function $oppen_print$ is small
and very similar to $oppen_format$ but its results are printed by side
effect, testing of it will be by observing that a few test cases give
the correct output.

Particular tests required include the following.

\begin{itemize}

\item Variations of line length with the same streams.

\item Basic confidence tests with short well-formed streams.  These use
	various combinations of the functions from type $OPPEN_FUNS$.

\item Nested streams, with both consistent and inconsistent line
	breaking.

\item Long strings and long sequences of strings, to check the long
	line processing.

\item Various indentation values (the integer argument to $beginb$ and
	the second argument to $space$).

\end{itemize}


\end{document}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%********************************************************************
%--------------------------------------------------------------------

\newpage

\makeatletter
\def\refstepcounter#1{\stepcounter{#1}\global\edef\@currentlabel{\csname
	p@#1\endcsname\csname the#1\endcsname}}
\makeatother

\twocolumn[\section{INDEX}] \label{Index}

\footnotesize
\printindex

\onecolumn

\end{document}


