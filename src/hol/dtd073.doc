=IGN
********************************************************************************
dtd073.doc: this file is part of the PPHol system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
%  $Id: dtd073.doc,v 1.11 2002/10/17 16:20:01 rda Exp rda $ %Z%
=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\makeindex
\TPPproject{FST Project}  %% Mandatory field
\TPPtitle{Detailed Design for the Theory of Finite Sets}  %% Mandatory field
\def\TPPheadtitle{Detailed Design for the Theory of\cr
Finite Sets}
\TPPref{DS/FMU/IED/DTD073}  %% Mandatory field
\def\SCCSversion{$Revision: 1.11 $ %
}
\TPPissue{\SCCSversion}  %% Mandatory field
\def\SCCSdate{\FormatDate{$Date: 2002/10/17 16:20:01 $ %
}}
\TPPdate{\SCCSdate}  %% Mandatory field
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{SML Literate Script}
\TPPkeywords{}
\TPPauthor{R.B.Jones & WIN01}  %% Mandatory field
%\TPPauthors{R.D. Arthan & WIN01\\K. Blackburn & WIN01}
\TPPauthorisation{R.D. Arthan & FST Team Leader}
\TPPabstract{This document gives a detailed design for the 
theory of finite sets.}
\TPPdistribution{\parbox[t]{4.0in}{%
	    Library
}}
%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}
\begin{document}
\makeTPPfrontpage
\vfill
\begin{centering}
\bf Copyright \copyright\ : Lemma 1 Ltd. 1992
\end{centering}
\pagebreak
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}
\begin{description}
\item[Issue 1.1-1.5]

These are the first drafts of the document.
\item[Issue 1.6 (15th December 1992)]
Fixed theory design.
\item[Issue 1.7]
Fix for SML'97.
\item[Issue 1.8]
Proved consistency of {\it Max} and {\it Min}.
\item[Issue 1.10] Copyright and banner updates for open source release.
\item[Issue 1.11] PPHol-specific updates for open source release
\item[Issue 1.12] Added finite set induction (theorem and tactic) and added some basic theorems about finiteness.
\end{description}
\subsection{Changes Forecast}

Should be changed to use integers instead of natural numbers when these are available.

\section{GENERAL}
\subsection{Scope}
This document contains a detailed design
for the theory ``finset''.
The design is implemented in \cite{DS/FMU/IED/IMP073}.

\subsection{Introduction}
\subsubsection{Purpose and Background}
This document contains the detailed design for the theory ``relation''.

\subsubsection{Dependencies}
This document depends on \cite{DS/FMU/IED/IMP072}, and the theory design tools of \cite{DS/FMU/IED/DTD035}.
\subsubsection{Deficiencies}
None known.
\subsubsection{Possible Enhancements}
\section{THE THEORY ``$fin\_set$''}
\subsection{Preamble}
=THDOC
set_flag("tc_thms_only", true);
=DESCRIBE
We set the theorem check only flag since the definitions in the theory are
to be made via constant specification boxes.
=ENDDOC
=THDOC
req_name €"fin_set"› (Value "seq");
=DESCRIBE
The theory ``fin\_set'' contains the definitions of various functional (i.e. many-one) subsets of the set of finite sets.
=ENDDOC
=SML
val _ = open_theory "seq";
val _ = push_pc "hol";
val _ = new_theory "fin_set";
=TEX
\subsection{The Theory Contents}
πHOLCONST
‹	$€Ó›: Ó 
˜¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸
‹	Ó = Universe
‹
∞
πHOLCONST
‹	€Finite›:'a  
˜¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸
‹	Finite = •{u | {} ç u ± µa x∑a ç u ¥ ({x} ¿ a) ç u}
‹
∞
πHOLCONST
‹	€Ê›:'a  ≠ 'a  
˜¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸
‹	µ (x : 'a )∑ Ê x =  x ° Finite
‹
∞
πHOLCONST
‹	€Êâ1›:'a  ≠ 'a  
˜¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸
‹	µ (x : 'a )∑ Êâ1 x = Ê x \ {{}}
∞
πHOLCONST
‹	€Min› : Ó SET ≠ Ó
˜
‹	µm a∑m ç a ± (µi∑i ç a ¥ m º i) ¥ Min a = m
∞
πHOLCONST
‹	$€Max›:Ó  ≠ Ó 
˜¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸
‹	µm a∑m ç a ± (µi∑i ç a ¥ i º m) ¥ Max a = m
∞
πHOLCONST
	€Size› : 'a SET ≠ Ó
˜
	µa∑Size a = Min {i | ∂list∑ Length list = i ± Elems list = a}
∞
=SML
val _ = declare_alias(€"#"›, ¨SizeÆ);
πHOLCONST
‹	$€Iter›:Ó ≠ ('a ™ 'a) ≠ ('a ™ 'a)
˜¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸
‹	µ (r : 'a ™ 'a)(n : Ó)
‹	∑ Iter 0 r = Id Universe
‹	± Iter (n+1) r = r ª (Iter n r)
∞
=SML
val _ = declare_infix(240,"ü");
πHOLCONST
‹	$€ü›:'a  ≠ 'b  ≠ ('a ™ 'b) 
˜¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸
‹	µ a : 'a ; b : 'b 
‹	∑ a ü b = (a ﬂ b) ° Finite
∞
=SML
val _ = declare_infix(240,"û");
πHOLCONST
‹	$€û›:'a  ≠ 'b  ≠ ('a ™ 'b) 
˜¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸¸
‹	µ a : 'a ; b : 'b 
‹	∑ a û b = (a ü b) ° (a ˛ b)	
∞
\subsection{Theorems}
=THDOC
req_consistency_thm¨MinÆ;
=DESCRIBE
This theorem demonstrates the consistency of the definition of
the {\it Min} function.
=ENDDOC
=THDOC
req_consistency_thm¨MaxÆ;
=DESCRIBE
This theorem demonstrates the consistency of the definition of
application of the {\it Max}.
=ENDDOC
=THDOC
req_thm("finite_induction_thm", ([], ¨
		µp∑	p {} ± (µa x∑a ç Finite ± p a ± ≥x ç a ¥ p({x} ¿ a))
		¥ 	µa∑a ç Finite ¥ p a
Æ));
=DESCRIBE
The principle of induction for finite sets.
=ENDDOC
=THDOC
req_thm("empty_finite_thm", ([], ¨{} ç FiniteÆ));
req_thm("singleton_¿_finite_thm", ([], ¨µ a x∑ a ç Finite ¥ ({x} ¿ a) ç FiniteÆ));
req_thm("Ä_finite_thm", ([], ¨µa b∑ a ç Finite ± b Ä a ¥ b ç FiniteÆ));
=DESCRIBE
Three basic facts about finite sets.
=ENDDOC
\subsection{Signature of the theory ``finset''}
=DOC
signature €FinSetTheory› = sig
	val €Ó_def› : THM;
	val €finite_def› : THM;
	val €Ê_def› : THM;
	val €Êâ1_def› : THM;
	val €min_def› : THM;
	val €max_def› : THM;
	val €size_def› : THM;
	val €iter_def› : THM;
	val €ü_def› : THM;
	val €û_def› : THM;
	val €finite_induction_thm› : THM;
	val €empty_finite_thm› : THM;
	val €singleton_¿_finite_thm› : THM;
	val €Ä_finite_thm› : THM;
=DESCRIBE
These are the ML bindings for the definitions and theorems in the  declare theory ``$fin\_set$''.
=ENDDOC
=DOC
	val €finite_induction_tac› : TERM -> TACTIC;
=DESCRIBE
An induction tactic for finite sets.  To prove
=INLINEFT
t
=TEX
\ on the assumption that
=INLINEFT
s ç Finite
=TEX
, it suffices to prove
=INLINEFT
t[{}/s]
=TEX
\ and to prove
=INLINEFT
t[({x} ¿ s)/s]
=TEX
\ on the
assumption that $t$ holds, that
=INLINEFT
s ç Finite
=TEX
,
=TEX
\ and that
=INLINEFT
≥x ç s
=TEX
.  The term argument must be a variable, $s$,
with type an instance of î'a SETÆ and must appear free in the conclusion of the goal.
It must also appear once, and only once, in an assumption of the form
=INLINEFT
s ç Finite
=TEX
.
=FRULE 2 Tactic
finite_induction_tac ÒsÆ
˜
{ á, s ç Finite} t[s]
˜
{ á } t[{}/s] ;
strip {t, s ç Finite, ≥x ç s, á} t[({x}¿ s)/s]
=TEX
=FAILURE
73001	?0 is not a variable
73002	A term of the form Òv ç FiniteÆ where v is the induction variable
	could not be found in the assumptions
73003	?0 does not appear free in the conclusion of the goal
73004	?0 appears free in more than one assumption of the goal
=ENDDOC
\section{PROOF CONTEXTS}
=DOC
(* proof context key "€finset_ext›" *)
=DESCRIBE
$finset\_ext$ extends $funrel_ext$ by:
\begin{description}
\item [Name]\ 

Becomes ``finset$\_$ext''.
\item [Stripping Goals and Theorems]\ 

Adding in ? applied at the top level or under a single negation.
\item [Rewriting Context]\ 

Adding in ?.
\end{description}
=ENDDOC
=DOC
(* proof context key €"funrel_alg"› *)
=DESCRIBE
$finset\_alg$ extends $funrel\_alg$ by:
\begin{description}
\item [Name]\ 

Becomes ``finset$\_$alg''.
\item [Stripping Goals and Theorems]\ 

Adding in ? applied at the top level or under a single negation.
\item [Rewriting Context]\ 

Adding in ?.
\end{description}
=ENDDOC
=SML
end;(* of signature FinSetTheory *)
=TEX
\section{TEST POLICY}
Any functions given in this document should be tested according to the general criteria set out in \cite{DS/FMU/IED/PLN008}, using the tests in \cite{DS/FMU/IED/MDT072}.
In \cite{DS/FMU/IED/MDT072} the theory produced is checked by the theory design tools of \cite{DS/FMU/IED/DTD035}, against the theory design provided.

The module tests should include automatic proof of all the ``rules'' in \cite{Spivey89} expressible in this part of the theory of functional relations.
\twocolumn[\section{INDEX}]
\small
\printindex
\end{document}


