
=IGN
********************************************************************************
dtd122.doc: this file is part of the PPHol system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
=TEX
\documentclass[a4paper,12pt]{article}

%%%%% YOU CAN ADD OTHER PACKAGES AS NEEDED BELOW:
\usepackage{A4}
\usepackage{Lemma1}
\usepackage{ProofPower}
\usepackage{epsf}
\makeindex

\def\Title{Unicode and UTF-8: Detailed Design }

\def\Abstract{\begin{center}
{\bf Abstract}\par\parbox{0.7\hsize}
{\small This document gives the detailed design for utilities for working with UTF-8 and Unicode in {\Product}.}
\end{center}}

\def\Reference{LEMMA1/HOL/DTD122}

\def\Author{R.D. Arthan}

\def\EMail{{\tt rda@lemma-one.com}}

\def\Phone{+44 118 958 4409}

\def\Fax{+44 118 956 1920}

%%%%% YOU MAY WANT TO CHANGE THE FOLLOWING TO GET A NICE FRONT PAGE:
\def\FrontPageTitle{ {\huge \Title } }
\def\FrontPageHeader{\raisebox{16ex}{\begin{tabular}[t]{c}
\bf Copyright \copyright\ : Lemma 1 Ltd \number\year\\\strut\\
\end{tabular}}}
\begin{centering}



\end{centering}

%%%%% THE FOLLOWING DEFAULTS WILL GENERALLY BE RIGHT:

\def\Version{$Revision: 1.1 $%
}
\def\Date{\FormatDate{$Date: 2010/10/16 14:50:27 $%
}}

%%%%% NOW BEGIN THE DOCUMENT AND MAKE THE FRONT PAGE

\begin{document}
\headsep=0mm
\FrontPage
\headsep=10mm

%%%%% STANDARD RED-TAPE SECTIONS (MAY WANT TO INTERLEAVE SOME \newpage COMMANDS IN THESE)

%%%%% CONTENTS:

\subsection{Contents}

\tableofcontents

%%%%% REFERENCES:

\newpage
\subsection{References}

\bibliographystyle{fmu}

%%%%% CHANGE THE FOLLOWING AS NECESSARY (E.G., TO PICK UP daz.bib):
{\raggedright
\bibliography{fmu}
}
%%%%% CHANGES HISTORY:
\subsection{Changes History}
\begin{description}
\item[2015/03/13]
First working draft.
\item[2015/03/15]
Updates after beginning to use the interfaces in anger.
%%%% END OF CHANGES HISTORY %%%%
\end{description}

%%%%%  CHANGES FORECAST:

\subsection{Changes Forecast}

None.

%%%%% DISTRIBUTION LIST

\subsection{Distribution}

Lemma 1 build system.

\newpage

\section{Introduction}
\subsection{Scope}
This document gives the detailed design for utilities for working with Unicode in {\Product}.

\subsection{Purpose and Background}
See \cite{DS/FMU/IED/HLD011}.


\section{THE SIGNATURE}
We provide the following structures:
\begin{description}
\item[PPUnicode]
provides generic support for converting UTF-8 encoded strings into Unicode code points
together with the translation between the {\Product} extended character set and Unicode code points.
\item[PPUnicode.Unicode]
a compiler-dependent choice of a structure for the {\it WORD} signature suitable for representing Unicode code points.
\end{description}

=SML
signature ÛPPUnicodeÝ = sig
=TEX
\subsection{Unicode Representation}
=DOC
structure ÛUnicodeÝ : WORD;
type ÛUNICODEÝ = Unicode.word;
val Ûmax_code_pointÝ : UNICODE; (* = 0wx10ffff *)
=DESCRIBE
The structure {\it Unicode} is a compiler-dependent choice of a structure for the {\it WORD} signature suitable for representing Unicode code points. {\it UNICODE} is an abbreviation for the chosen word type.
{\it max\_code\_point} is the maximum value of a Unicode code point as defined in RFC3629.
=ENDDOC
=TEX
\subsection{UTF-8 Representation}
=DOC
val Ûutf8_to_unicodeÝ : ('a -> char OPT * 'a) -> 'a -> (UNICODE OPT * 'a) OPT
=DESCRIBE
{\it utf8\_to\_unicode} decodes a UTF-8 encoded stream into a stream of Unicode code points.
If the stream does not begin with a valid UTF-8 encoding, {\it Nil} is returned.
The streams are represented by a function that is passed a state and returns an optional value and a next state.
End of stream is signalled by returning {\it Nil} and a next state.
=ENDDOC
=DOC
val Ûutf8_string_to_unicodeÝ : string -> UNICODE list
=DESCRIBE
{\it utf8\_string\_to\_unicode} decodes a UTF-8 encoded string into a list of Unicode code points.
An exception is raised if the stream does not contain a valid UTF-8 encoding.
=FAILURE
122002	Invalid UTF-8 encoding
=ENDDOC
=DOC
val Ûutf8_inputÝ : instream -> UNICODE OPT
=DESCRIBE
{\it utf8\_input} inputs one UNICODE code point from a UTF-8 encoded input stream.
It raises an exception if the stream does not begin with a valid UTF-8 encoding.
It returns {\em Nil} if the input stream is empty.
=FAILURE
122002	Invalid UTF-8 encoding
=ENDDOC
=DOC
val Ûunicode_to_utf8Ý : UNICODE -> string
=DESCRIBE
{\it unicode\_to\_utf8} encodes a Unicode code point as a UTF-8 string. It raises an exception
its parameter is greater than the maximum Unicode code point (0wx10FFFF).
=FAILURE
122001	Invalid Unicode code point
=ENDDOC
=TEX
\subsection{ProofPower to Unicode Mapping}
=DOC
val Ûpp_to_unicodeÝ : char -> UNICODE list;
val Ûunicode_to_ppÝ : UNICODE -> char OPT;
=DESCRIBE
{\it pp\_to\_unicode} translates a character from the {\Product} extended character set into its Unicode equivalent.

{\it unicode\_to\_pp} translates a Unicode code point into the corresponding {\Product} extended character, if any.
=ENDDOC
=SML
end (* of signature Utf8 *);
=TEX

\section{TEST POLICY}
There are no special module test requirements.
\twocolumn[\section{INDEX}]
\small
\printindex

\end{document}







