=IGN
********************************************************************************
mdt036.doc: this file is part of the PPHol system

Copyright (c) 2036 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
=TEX
% TQtemplate.tex
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Tests for System Initialisation}  %% Mandatory field
\TPPref{DS/FMU/IED/MDT036}  %% Mandatory field
\def\SCCSversion{$Revision: 1.1 $
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date: 2005/04/17 14:15:19 $%
}}  %% Mandatory field (with sensible default)
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{R.D.~Arthan & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.~Arthan & FST Team Leader}
\TPPabstract{
This document contains the tests for the
system control and basic
error reporting subsystem for the ICL HOL system.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
      Library\\ R.D. Arthan\\ K. Blackburn}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : Lemma 1 Ltd. \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}
\item[Issue 1.1] First issue.
\end{description}
\subsection{Changes Forecast}
None.
\section{GENERAL}
\subsection{Scope}
This document contains module tests for the $BasicError$ and
$SystemControl$ components of the ICL HOL system as called for
in \cite{DS/FMU/IED/DTD002}.

\subsection{Introduction}
\subsection{Purpose and Background}
This document defines module tests for the material
specified in \cite{DS/FMU/IED/DTD036} and
implemented in \cite{DS/FMU/IED/IMP036}.

\subsection{Dependencies}
Running these module tests requires the complete HOL system to have been built and the database copied to have the new name ``holparent''.
The tests then create and manipulate a child ``mdt036'' of this=.


This document also depends on \cite{DS/FMU/IED/DTD013} and \cite{DS/FMU/IED/IMP013}.
\subsection{Deficiencies}
None known.

\section{TEST CASES}
The tests are carried out in two stages.
In stage 1, a selection of the functions defined in \cite{DS/FMU/IED/DTD036} are exercised and various aspects of state are altered, and then the database is saved and exited.

In the second stage, the tests check that the state from the first stage has been properly restored.

\section{THE TESTS}
=SML
val stage = get_shell_var "MDT036STAGE";
if	stage = "2"
then	(use_string "stage_2_results()"; exit 0)
else	();
=SML
PPBuild.pp'use"dtd013.sml";
PPBuild.pp'use"imp013.sml";
init_mt_results();
=TEX
=SML
val loaded_files : string list ref = ref [];
=DUMP mdt036A.sml
loaded_files := !loaded_files @ ["mdt036A.sml"];
=DUMP mdt036B.sml
loaded_files := !loaded_files @ ["mdt036B.sml"];
=DUMP mdt036C.sml
loaded_files := !loaded_files @ ["mdt036C.sml"];
=TEX
=SML
store_mt_results
mt_run
[("mdt036.1.1", load_files,
	["mdt036A.sml", "mdt036B.sml", "mdt036C.sml"],
	true)
];
store_mt_results
mt_run
[("mdt036.1.2", !, loaded_files,
	["mdt036A.sml", "mdt036B.sml", "mdt036C.sml"])
];
=TEX
Make a selection of state changes and functions to check them:
=TEX
1) Add a monitor for new\_theory commands:
=SML
val new_theories : string list ref = ref [];
on_kernel_state_change
	(fn NewTheory s => 
	(new_theories := s :: !new_theories;
	diag_string("You made a new theory called \"" ^ s ^ "\"")) | _ => ());
fun check1 () = (
	let	val name = case (!new_theories) of
			[] => "XXX"
		|	s::_ => s ^ "'";
	in	new_theory name;
		hd (!new_theories) = name
	end
);
=TEX
2) Change the banner:
=SML
icl'set_banner (Value "MDT036");
fun check2() = (
	get_string_control("system_banner") = "MDT036"
);
=TEX
3) Create a new theory, a constant and a proof context:
=SML
new_theory "mdt036";
new_const("Banana", BOOL);
new_pc"mdt036";
fun check3() = (
	map (fst o dest_const) (get_consts "mdt036") = ["Banana"]
	andalso
	"mdt036" mem map fst (get_pcs())
);
=TEX
4) Start a subgoal package proof:
=SML
set_goal([¬Banana®, ¬³Banana®], ¬Anything : BOOL®);
fun check4 () = (
	let	val (asms, conc) = top_goal();
	in	length asms = 2
	andalso	hd asms =$ ¬Banana®
	andalso	hd (tl asms) =$ ¬³Banana®
	andalso	conc =$ ¬Anything : BOOL®
	end
);
=TEX
5) Add an initialisation function
=SML
val counter : int ref = ref 1;
Initialisation.new_init_fun (fn () =>
	(counter := !counter + 1;
	diag_string("Session number: " ^ string_of_int(!counter)))
);
fun check5() = (
	!counter > 1
);
=TEX
6) Change a message:
=SML
icl'change_error_message{id = 36000, text = "Boo!"};
fun check6 () = (
	get_error_message 36000 [] = "Boo!"
);
=TEX
Define accumulated checking function for stage 2:
=SML
fun stage_2_results () = (
	store_mt_results mt_run
	[	("mdt036.2.1", check1, (), true),
		("mdt036.2.2", check2, (), true),
		("mdt036.2.3", check3, (), true),
		("mdt036.2.4", check4, (), true),
		("mdt036.2.5", check5, (), true),
		("mdt036.2.6", check6, (), true)];
	raw_diag_string(summarize_mt_results())
);
=TEX
\section{EPILOGUE}
Unusually, the test results are printed out by the function defined at the end of the last section, so there is nothing to do here.
=TEX
\end{document}


