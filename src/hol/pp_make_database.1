.TH PP_MAKE_DATABASE 1 "17 Apr 2003" "Lemma One" "Unix Programmer's Manual"
.SH NAME
pp_make_database \- make a new ProofPower database
.SH SYNOPSIS
.B pp_make_database
\
.br
	[-c][-v] [-f] [-p parentdatabase[#parenttheory]] newdatabase[#cachetheory]
.SH DESCRIPTION
.I "pp_make_database"
makes a new child database to contain ProofPower theories. The new database initially
contains a single theory, called the {\em cache theory}
for the database, with name given by
.I "cachetheory"
(which is used by
certain system functions to cache various definitions and theorems and
which is used as the initial current theory when the database
is used by the
.IR "pp" ,

.I "hol"
and
.I "zed"
commands).
If
.I "cachetheory"
is omitted then the database name, prefixed by ``cache' '' is taken to be the same
as the name of the new cache theory.
.LP
The
.I "-p"
option may be used to indicate
the database which is to be the parent of the new database
and to indicate which theory in it is to be the parent of the theory
.IR "cachetheory" .
The parent theory is taken to be the cache theory for the parent
database if it is not given explicitly.
.LP
For portability,
the parent database name should normally be given without any architecture- or
compiler-specific prefixes or suffixes.
Any such prefixes or suffixes will be added automatically by
.IR "pp_make_database" ,
If the resulting file name is an absolute path name (i.e., starts with a `/' character),
then that is used as the parent database file name.
If the resulting file name is not an absolute path name,
.I "pp_make_database"
looks for the parent database file first in the current directory and then in the user's
search path (given in the environment variable
.IR "\$PATH" ).
.LP
If the
.I "-p"
option is not supplied then the database
.I "hol"
supplied with the system is used
as the parent database, and the parent theory is the theory
.IR "hol" .
This is an appropriate default for a ProofPower-HOL child database.
An appropriate value for ProofPower-Z might be the database
.I "zed"
supplied with the system.
.LP
In interactive use,
.I "pp_make_database"
will normally ask for confirmation before overwriting the database if it
already exists. The
.I "-f"
(force) option may be used to suppress
the request for confirmation before overwriting an existing database.
.LP
The
.I "-v"
option produces more output which may be useful for
diagnostic purposes.
.LP
Under Poly/ML, databases are subject to an adjustable size limit.
By default,
.I "pp_make_database"
will adjust the size limit of
the parent database to the minimum possible
and adjust the size limit of the child database to the maximum allowed.
The
.I "-c"
option suppresses these adjustments.
.LP
The supplied child database name will be used to create the child database file name
which is derived using an algorithm specific to the Standard ML compiler being used.
.SH DIAGNOSTICS
.I "pp_make_database"
prints a message and
exits (with value 1) if the parent database or theory does not exist,
if the new database cannot be created or if
the name of the cache theory clashes with the name of a theory
in the parent database.
.LP
Some systems impose a limit on the depth of nesting of the
database hierarchy and the command will print an error message and
exit (with value 1) if this limit would be exceeded.
.LP
The environment variable
.I "PPCOMPILER"
may be used to select between the Poly/ML
or SML/NJ compiler if {\Product} has been installed for both compilers.
If it is set, the value of this variable must be either ``
.I "POLYML"
'' or ``
.I "SMLNJ"
''.
.SH SEE ALSO
.IR "hol(1)" ,

.IR "zed(1)" ,

.IR "pp(1)" .
