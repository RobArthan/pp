% dtd025.doc   %Z% $Date$ $Revision$ $RCSfile$

=TEX
% dtd025.doc   %Z% $Date$ $Revision$ $RCSfile$
\documentstyle[hol1,11pt,TQ]{article}

\TPPtitle{Detailed Design of Pretty Printer}
\TPPref{DS/FMU/IED/DTD025}
\def\SCCSissue{$Revision$%
}
\TPPissue{\SCCSissue}
\TPPdate{\FormatDate{$Date$%
}}
\TPPproject{FST PROJECT}

=IGN

Commands to process this document in various ways.

make -f rel001.mkf dtd025.dvi
doc4tex dtd025
tex4dvi dtd025
bibtex dtd025
doc4tex dtd025 ; tex4dvi dtd025
doc4tex dtd025 ; tex4dvi dtd025 ; bibtex dtd025
dvipage dtd025 &


doc4errors dtd025
use_file "dtd025.sml";

lasp -s dtd025.doc > zz1
lasp -s -u dtd025.OKwords dtd025.doc > zz1

=TEX
%\TPPstatus{Approved}
\TPPstatus{Draft}
\TPPtype{Standard}
\TPPkeywords{HOL}
\TPPauthor{A.J. Hammon & WIN01}  %% Mandatory field
\TPPauthorisation{R.D.~Arthan & FST Team Leader}
\TPPabstract{This document contains the user interface to
	the pretty printer.}
\TPPdistribution{\parbox[t]{4.0in}{%
	Library
}}

%\ftlinepenalty=9999
\makeindex

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\catcode`\_=\active
\def\_{\kern.06em\vbox{\hrule height.1ex width.3em}\hskip0.1em\relax}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\begin{document}
\makeTPPfrontpage

\vfill
\begin{center}
\bf Copyright \copyright\ : International Computers Ltd \number\year
\end{center}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{DOCUMENT CONTROL}

%********************************************************************

\subsection{Contents List}
\tableofcontents
% \listoftables

%********************************************************************

\subsection{Document Cross References}

\bibliographystyle{fmu}
\bibliography{fmu}

%********************************************************************

\subsection{Changes History}

\begin{description}

\item[Issue 1.1  to 1.7]  Initial drafts.

\item[28 August 1991, issue 2.1 ] First approved issue.

\item[20 January 1992, issue 2.2~] Updated to use new fonts.
\item [Issue 2.3 (13th April 1992)]
Changes due to CR0017.

%\item[\FormatDate{$Date$%
%}, issue \SCCSissue~]


\end{description}

%********************************************************************

\subsection{Changes Forecast} \label{ChangesForecast}

When printing theorems, print the language as a
qualifier to the turnstile in a similar fashion to that used by
function $start_new_language$, omitting the language name for HOL.
Then any assumptions in languages different from the chosen language
are printed enclosed in the appropriate term brackets.

For mixed language terms need some mechanism for allowing a HOL
constant used by two languages to have different fixity and
associativity depending on which language is being printed.  Consider
the boolean conjunction, it may be used in both Z and HOL but it
associates differently depending on the language.

Improve the algorithm used for determining the language of a term.

Allow for variable width characters when determining when to form line
breaks.  This requires work in the Oppen printing
routines~\cite{DS/FMU/IED/DTD024} and is affected by the way that
extended characters and (percent enclosed) keywords are treated,
see~\cite{DS/FMU/IED/DEF002} and~\cite{DS/FMU/IED/DTD005}.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{GENERAL}

%********************************************************************

\subsection{Scope}

This document contains the pretty printer for the ICL HOL system.  The
high-level design for this document in~\cite{DS/FMU/IED/HLD008}.

%********************************************************************

\subsection{Introduction}

%--------------------------------------------------------------------

\subsubsection{Purpose and Background}

The desired attributes of the pretty printer subsystem are defined
in~\cite{DS/FMU/IED/HLD002} and further elaborated
in~\cite{DS/FMU/IED/HLD008}.

%--------------------------------------------------------------------

\subsubsection{Dependencies}

This is last of the four structures that together form the HOL pretty
printer.  This document, containing a signature, depends upon the
signatures of the other three structures:
Oppen style printing~\cite{DS/FMU/IED/DTD024};
pretty printer support~\cite{DS/FMU/IED/DTD031};
and,
HOL pretty printer functions~\cite{DS/FMU/IED/DTD032}.

%--------------------------------------------------------------------

%\subsubsection{Interface}

%--------------------------------------------------------------------

\subsubsection{Algorithms}

A simple mechanism is used to determine the language of a term.  If the
head term of the whole term (in the sense of function $strip_app$) is a
constant then the language of that constant is used, otherwise the
language is taken to be HOL.

%--------------------------------------------------------------------

%\subsubsection{Possible Enhancements}
%\subsubsection{Deficiencies}
%\subsubsection{Terminology}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%\newpage
\section{SIGNATURE} \label{StartSignature}

=DOC
signature ÛPrettyPrinterÝ = sig
=ENDDOC

%--------------------------------------------------------------------
=DOC
val Ûformat_termÝ : bool -> TERM -> string list;
val Ûformat_term1Ý : bool -> int -> TERM -> string list;
=DESCRIBE
Produce a number of lines, one string per line, containing a pretty
printing of the given HOL Term.
If the boolean argument is set $false$ then the strings produced from
terms whose language is the same as that of the current theory will not
include the term quotation symbols, in all other cases the term
quotation symbols will be included.
Line width is given by the integer in $format_term1$, or for
$format_term$ the current line width (as maintained by $set_line_length$,
{\em q.v.}) is used.
=SEEALSO
Pretty printer controls: $pp_add_brackets$, $pp_show_HOL_types$,
$pp_types_on_binders$ and $pp_let_as_lambda$.
=ENDDOC
%--------------------------------------------------------------------

The format type functions are interfaces to function
$HOLPrettyPrinter.main_type_pp$, the HOL pretty printer for types.
There is no sense of printing out types for terms of other languages,
such a task is considered to be part of the language specific pretty
printing.  For this reason the interpretation of the boolean argument
in the type formatters does not depend on the current language.

%--------------------------------------------------------------------
=DOC
val Ûformat_typeÝ : bool -> TYPE -> string list;
val Ûformat_type1Ý : bool -> int -> TYPE -> string list;
=DESCRIBE
Produce a number of lines, one string per line, containing a pretty
printing of the given HOL type.
If the boolean argument is set $true$ then type quotation symbols will
be included in the returned strings, when $false$ they are excluded.
Line width is given by the integer in $format_term1$, or for
$format_term$ the current line width (as maintained by $set_line_length$,
{\em q.v.}) is used.
=SEEALSO
Pretty printer control: $pp_add_brackets$.
=ENDDOC
%--------------------------------------------------------------------

%--------------------------------------------------------------------
=DOC
val Ûformat_thmÝ : THM -> string list;
val Ûformat_thm1Ý : int -> THM -> string list;
=DESCRIBE
Produce a number of lines, one string per line, containing a pretty
printing of the given HOL theorem.
The theorem is printed with a comma separated list of terms for the
assumptions, a turnstile and finally the term representing the conclusion.
Assumptions in the same language as the conclusion are not enclosed with
the term quotation symbols.  Other assumptions have term quotation symbols.
Line width is given by the integer in $format_term1$, or for
$format_term$ the current line width (as maintained by $set_line_length$,
{\em q.v.}) is used.
=SEEALSO
Pretty printer controls: $pp_add_brackets$, $pp_show_HOL_types$,
$pp_types_on_binders$ and $pp_let_as_lambda$.
=ENDDOC
%--------------------------------------------------------------------

%--------------------------------------------------------------------
=DOC
val Ûpp_initÝ : unit -> unit;
=DESCRIBE
Initialise the pretty printing system so that values of types $TERM$,
$TYPE$ and $THM$ will be prettily printed out as ``top level''
Standard~ML values.
=ENDDOC
%--------------------------------------------------------------------

=DOC
end (* of signature PrettyPrinter *);
=ENDDOC

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\newpage
\section{TEST POLICY}

A statement of the general principle of testing to be adopted is given
in~\cite{DS/FMU/IED/PLN008}.

The pretty printer is split across three structures.  Each of these has
its own test policy and module tests.  However, some of the testing of
pretty printer support routines of~\cite{DS/FMU/IED/DTD031} and the HOL
printing routines of~\cite{DS/FMU/IED/DTD032} requires extensive
setting up of environment values (datatype $PP_ENV$) which is one of
the tasks of this module.  Accordingly, part of the testing of the
other structures is performed by the tests of this module which forms
the most convenient interface for the tests.

The pretty printer tests are oriented to the HOL concrete syntax, they
will exercise
all of the clauses in the HOL concrete syntax
of~\cite{DS/FMU/IED/DEF001} and will contain a large number of nested
clauses.  The bracket elimination code must be carefully tested to
ensure that all the necessary brackets are present.  This will be done
by creating HOL terms, formatting them into a string using the pretty
printer, parsing these strings back to form new terms and testing that
they are the same as the originals.

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%********************************************************************
%--------------------------------------------------------------------

\makeatletter
\def\refstepcounter#1{\stepcounter{#1}\global\edef\@currentlabel{\csname
	p@#1\endcsname\csname the#1\endcsname}}
\makeatother

%\twocolumn[\section{INDEX}] \label{Index}
\section{INDEX}

\footnotesize
\printindex

\onecolumn

\end{document}


