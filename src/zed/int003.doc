=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\makeindex
\TPPproject{FST Project}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Integration Tests for the ProofPower-Z System}  %% Mandatory field
\TPPref{DS/FMU/IED/INT003}  %% Mandatory field
\def\SCCSversion{$Revision$%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$%
}}
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{Specification}
\TPPkeywords{}
\TPPauthor{K.Blackburn & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.Arthan & Project Manager}
\TPPabstract{This document provides a description of the \ProductZ{} system integration tests.}
\TPPdistribution{\parbox[t]{4.0in}{%
	    Library
}}
\begin{document}
\makeTPPfrontpage
\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}
\pagebreak
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History} 
\begin{description}
\item[Issue 1.1,1.2]
First drafts.
\end{description}
%\subsection{Changes Forecast}
\section{GENERAL}
\subsection{Scope}\label{Scope}
This document provides either a description of, or reference for, the \ProductZ{} system integration tests,
called for in 
\cite{DS/FMU/IED/HLD015},
and the high level designs it introduces.
This is a supplement to the integration tests for \ProductHOL{}
of \cite{DS/FMU/IED/INT001}.
\subsection{Introduction}
\subsubsection{Purpose and Background}
This document concerns the integration tests for the \ProductZ{} system, excluding the generic HOL support tools.
It either describes the tests to be made, or gives a reference
to the test documents.

\subsubsection{Dependencies}
This document must satisfy the requirements of all the high level designs covered in the scope of this document (section \ref{Scope}).
To be tested, material claimed to satisfy the high level designs must also exist, as must the build and test tools of
\cite{DS/FMU/IED/HLD013}.
\subsubsection{Deficiencies}
Only the proof support area is initially addressed, 
and that only for preidctaes and library set theory.
T.B.A.'s are given for other areas that require testing,
or they are just omitted.
\subsubsection{Changes Forecast}
Addressing the deficiences.
\section{REQUIREMENTS}
T.B.A.
\section{PROOF SUPPORT}
The integration test for this section is passed if the following
can be successfully run:
=GFT
docsml int003
hol -d zed
:> use_file "int003";
:> quit();
y
=TEX
without failures.
The following allows the script to be used as an integration test in \cite{DS/FMU/IED/IMP021}.
=SML
fun  Ûsummarize_mt_resultsÝ () = 
	"No summary provided for integration tests from int003.doc";
=TEX

The following tests also provide some parsing/type checking/printing tests, as a side-effect.
\subsection{Utilities}
The following functions are intended for application to a list
of goal terms, printing each as the prof succeeds, so that 
it can be determined where in the list, if anywhere,
the proof failed.

The following uses just the current proof context's stripping rules, embedded in the contradiction tactic:
=SML
fun Ûcontr_proveÝ (lst:TERM list) : unit = (
	map (diag_string o string_of_thm o 
	(fn tm => tac_proof(([],tm), contr_tac))) lst;
	()
);
=TEX
There is no point trying the two-tactic approach on goals
that are proven by the above.

The following uses the current proof context's automated proof rules:
=SML
fun Ûfull_proveÝ (lst:TERM list) : unit = (
	map (diag_string o string_of_thm o prove_rule[]) lst;
	()
);
=TEX
In this document goals processed by this function will also be proven by the two-tactic method.
\subsection{Predicate Calculus}
=SML
open_theory "z_set_theory";
set_merge_pcs ["z_predicates", "'z_decl"];
=TEX
Two tactic approach:
=SML
set_goal([],ñ[X](µx, y:X· P x ´ R y)
	¤ (µv, w:X· ³ P w ² R v)®);
a(contr_tac);
(* *** Goal "1" *** *)
a (z_spec_nth_asm_tac 5 ñ(x ¦ ¬w®, y ¦ ¬v®)®);
(* *** Goal "2" *** *)
a (z_spec_nth_asm_tac 5 ñ(v ¦ ¬y®, w ¦ ¬x®)®);
pop_thm();
=TEX

=SML
(* Results from Principia Mathematica *2 *)
val PM2 =[
ñ(* *2.02 *) q ´ ( p ´ q)®,
ñ(* *2.03 *) (p ´ ³ q) ´ (q ´ ³ p)®,
ñ(* *2.15 *) (³ p ´ q) ´ (³ q ´ p)®,
ñ(* *2.16 *) (p ´ q) ´ (³ q ´ ³ p)®,
ñ(* *2.17 *) (³ q ´ ³ p) ´ (p ´ q)®,
ñ(* *2.04 *) (p ´ q ´ r) ´ (q ´ p ´ r)®,
ñ(* *2.05 *) (q ´ r) ´ (p ´ q) ´ (p ´ r)®,
ñ(* *2.06 *) (p ´ q) ´ (q ´ r) ´ (p ´ r)®,
ñ(* *2.08 *) p ´ p®,
ñ(* *2.21 *) ³ p ´ (p ´ q)®];
=TEX
=SML
contr_prove PM2;
=TEX
=SML
(* Results from Principia Mathematica *3 *)
val PM3 =[
(* *3.01 *) ñp ± q ¤ ³(³ p ² ³ q)®,
(* *3.2  *) ñp ´ q ´ p ± q®,
(* *3.26 *) ñp ± q ´ p®,
(* *3.27 *) ñp ± q ´ q®,
(* *3.3  *) ñ(p ± q ´ r) ´ (p ´ q ´ r)®,
(* *3.31 *) ñ(p ´ q ´ r) ´ (p ± q ´ r)®,
(* *3.35 *) ñ(p ± (p ´ q)) ´ q®,
(* *3.43 *) ñ(p ´ q) ± (p ´ r) ´ (p ´ q ± r)®,
(* *3.45 *) ñ(p ´ q) ´ (p ± r ´ q ± r)®,
(* *3.47 *) ñ(p ´ r) ± (q ´ s) ´ (p ± q ´ r ± s)®];
=TEX
=SML
contr_prove PM3;
=TEX
=SML
(* Results from Principia Mathematica *4 *)
val PM4 =[
(* *4.1  *) ñp ´ q ¤ ³ q ´ ³ p®,
(* *4.11 *) ñ(p ¤ q) ¤ (³ p ¤ ³ q)®,
(* *4.13 *) ñp ¤ ³ ³ p®,
(* *4.2  *) ñp ¤ p®,
(* *4.21 *) ñ(p ¤ q) ¤ (q ¤ p)®,
(* *4.22 *) ñ(p ¤ q) ± (q ¤ r) ´ (p ¤ r)®,
(* *4.24 *) ñp ¤ p ± p®,
(* *4.25 *) ñp ¤ p ² p®,
(* *4.3  *) ñp ± q ¤ q ± p®,
(* *4.31 *) ñp ² q ¤ q ² p®,
(* *4.33 *) ñ(p ± q) ± r ¤ p ± (q ± r)®,
(* *4.4  *) ñp ± (q ² r) ¤ (p ± q) ² (p ± r)®,
(* *4.41 *) ñp ² (q ± r) ¤ (p ² q) ± (p ² r)®,
(* *4.71 *) ñ(p ´ q) ¤ (p ¤ (p ± q))®,
(* *4.73 *) ñq ´ (p ¤ (p ± q))®];
=TEX
=SML
contr_prove PM4;
=TEX
=SML
(* Results from Principia Mathematica *5 *)
val PM5 =[
(* *5.1  *) ñp ± q ´ (p ¤ q)®,
(* *5.32 *) ñ(p ´ (q ¤ r)) ´ ((p ± q) ¤ (p ± r))®,
(* *5.6  *) ñ(p ± ³ q ´ r) ´ (p ´ (q ² r))®];
=TEX
=SML
contr_prove PM5;
=TEX
=SML
(* Definitions from Principia Mathematica *9 *)
val PM9 =[
(* *9.01 *) ñ[X](³ (µx:X· Æx)) ¤ (¶x: X· ³ Æx)®,
(* *9.02 *) ñ[X](³ (¶x:X· Æx) ¤ (µx:X· ³ Æx))®,
(* *9.03 *) ñ[X](µx:X· Æx ² p) ¤ (µx:X· Æx) ² p®,
(* *9.04 *) ñ[X]p ² (µx:X· Æx) ¤ (µx:X· p ² Æx)®,
(* *9.05 *) ñ[X](¶ x:X·true) ´ ((¶x:X· Æx ² p) ¤ (¶x:X· Æx) ² p)®,
(* *9.06 *) ñ[X]p ² (¶x:X· Æx) ¤ p ² (¶x:X· Æx)®];
=TEX
=SML
full_prove PM9;
=TEX
=SML
set_goal([],nth 0 PM9);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 1 PM9);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 3 ñ(x ¦ ¬x®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 2 PM9);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 4 ñ(x ¦ ¬x®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 4 ñ(x ¦ ¬x®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 3 PM9);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 4 ñ(x ¦ ¬x®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 4 ñ(x ¦ ¬x®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 4 PM9);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 2 ñ(x ¦ ¬x'®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x'®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 5 PM9);
a contr_tac;
pop_thm();
=TEX
=SML
val PM9b =[
(* *9.07 *) ñ[X,Y](¶y:Y·true) ´ ((µx:X· Æx) ² (¶y:Y· Ùy) ¤ (µx:X·¶y:Y· Æx ² Ùy))®,
(* *9.08 *) ñ[X,Y](¶y:Y·true) ´ ((¶y:Y· Ùy) ² (µx:X· Æx) ¤ (µx:X·¶y:Y· Ùy ² Æx))®];
=TEX
=SML
full_prove PM9b;
=TEX
=SML
set_goal([],nth 0 PM9b);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 1 ñ(y ¦ ¬y®)®);
a(z_spec_nth_asm_tac 5 ñ(x ¦ ¬x®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(y ¦ ¬y'®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 4 ñ(x ¦ ¬x®)®);
a(z_spec_nth_asm_tac 3 ñ(y ¦ ¬y'®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 1 PM9b);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 1 ñ(y ¦ ¬y'®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(y ¦ ¬y®)®);
a(z_spec_nth_asm_tac 5 ñ(x ¦ ¬x®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 4 ñ(x ¦ ¬x®)®);
a(z_spec_nth_asm_tac 5 ñ(y ¦ ¬y'®)®);
pop_thm();
=TEX

=SML
(* Results from Principia Mathematica *10 *)
val PM10 =[
(* *10.01  *) ñ[X](¶x:X· Æx) ¤ ³ (µy:X· ³ Æy)®,
(* *10.1   *) ñ(µx:U· Æx) ´ Æy®,
(* *10.21  *) ñ[X](µx:X· p ´ Æx) ¤ p ´ (µy:X· Æy)®,
(* *10.22  *) ñ[X](µx:X· Æx ± Ùx) ¤ (µy:X· Æy) ± (µz:X· Ùz)®,
(* *10.24  *) ñ[X](µx:X· Æx ´ p) ¤ (¶y:X· Æy) ´ p®,
(* *10.27  *) ñ[X](µx:X· Æx ´ Ùx) ´ ((µy:X· Æy) ´ (µz:X· Ùz))®,
(* *10.271 *) ñ[X](µx:X· Æx ¤ Ùx) ´ ((µy:X· Æy) ¤ (µz:X· Ùz))®,
(* *10.28  *) ñ[X](µx:X· Æx ´ Ùx) ´ ((¶y:X· Æy) ´ (¶z:X· Ùz))®,
(* *10.281 *) ñ[X](µx:X· Æx ¤ Ùx) ´ ((¶y:X· Æy) ¤ (¶z:X· Ùz))®,
(* *10.35  *) ñ[X](¶x:X· p ± Æx) ¤ p ± (¶y:X· Æy)®,
(* *10.42  *) ñ[X](¶x:X· Æx) ² (¶y:X· Ùy) ¤ (¶z:X· Æz ² Ùz)®,
(* *10.5   *) ñ[X](¶x:X· Æx ± Ùx) ´ (¶y:X· Æy) ± (¶z:X· Ùz)®,
(* *10.51  *) ñ[X] (³ (¶x:X· Æx ± Ùx) ´ (µy:X· Æy ´ ³ Ùy))®];
=TEX
=SML
full_prove PM10;
=TEX
=SML
(* Results from Principia Mathematica *11 *)
val PM11 =[
(* *11.1  *) ñ(µx, y:U· Æ(x,y)) ´ Æ(z,w)®,
(* *11.2  *) ñ[X](µx, y:X· Æ(x,y)) ¤ (µy, x:X· Æ(x,y))®,
(* *11.3  *) ñ[Y](p ´ (µx, y:Y· Æ(x,y)))
		¤ (µx, y:Y· p ´ Æ(x,y))®,
(* *11.35 *) ñ[Y](µx, y:Y· Æ(x,y) ´ p) ¤ (¶x, y:Y· Æ(x,y)) ´ p®
];
=TEX
=SML
full_prove PM11;
=TEX
=SML
(* Got to be done by two tactic method - prove_rule can't cope *)
val PM11b =[
(* *11.32 *) ñ[Y](µx, y:Y· Æ(x,y) ´ Ù(x,y))
		´ (µx, y:Y· Æ(x,y)) ´ (µx, y:Y· Ù(x,y))®,
(* *11.45 *) ñ[Y](¶x, y:Y· true) ´ ((¶x, y:Y· p ´ Æ(x,y))
		¤ (p ´ (¶x, y:Y· Æ(x,y))))®,
(* *11.54 *) ñ[Y](¶x, y:Y· Æx ± Ùy) ¤ (¶x:Y· Æx) ± (¶y:Y· Ùy)®,
(* *11.55 *) ñ[Y](¶x, y:Y· Æx ± Ù(x,y))
		¤ (¶x:Y· Æx ± (¶y:Y· Ù(x,y)))®,
(* *11.6  *) ñ[X](¶x:X· (¶y:Y· Æ(x,y) ± Ùy) ± Ñx)
		¤ (¶y:Y· (¶x:X· Æ(x,y) ± Ñx) ± Ùy)®,
(* *11.62 *) ñ(µx:X; y:Y· Æx ± Ù(x,y) ´ Ñ(x,y))
  		¤ (µx:X· Æx ´ (µy:Y· Ù(x,y) ´ Ñ(x,y)))®
];
=TEX
=SML
set_goal([],nth 0 PM11b);
a contr_tac;
a(z_spec_nth_asm_tac 5 ñ(x ¦ ¬x®, y ¦ ¬y®)®);
a(z_spec_nth_asm_tac 5 ñ(x ¦ ¬x®, y ¦ ¬y®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 1 PM11b);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x'®, y ¦ ¬y'®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®, y ¦ ¬y®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x'®, y ¦ ¬y'®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 2 PM11b);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(y ¦ ¬y®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®, y ¦ ¬y®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 3 PM11b);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®)®);
a(z_spec_nth_asm_tac 1 ñ(y ¦ ¬y®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®, y ¦ ¬y®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 4 PM11b);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 1 ñ(y ¦ ¬y®)®);
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(x ¦ ¬x®)®);
a(z_spec_nth_asm_tac 1 ñ(y ¦ ¬y®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 5 PM11b);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 6 ñ(x ¦ ¬x®, y ¦ ¬y®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 6 ñ(x ¦ ¬x®)®);
a(z_spec_nth_asm_tac 1 ñ(y ¦ ¬y®)®);
pop_thm();
=TEX
\subsection{Z Library Set Theory}
The following are selected results from the Z Notation reference manual 
\cite{spivey92}.
=SML
open_theory "z_library_ps";
set_merge_pcs ["z_predicates","'z_decl","'z__set_lang",
	"'z__set_lib","'z_sets_ext_lang","'z_sets_ext_lib"];
=TEX
=SML
(* results from ZRM provable by stripping *)
val ZRM1 = [
ña À a = a À {}®,
ña À {} = a ¡ a®,
ña ¡ a = a \ {}®,
ña \ {} = a®,
ña ¡ {} = a \ a®,
ña \ a = {} \ a®,
ñ{} \ a = {}®,
ña À b = b À a®,
ña ¡ b = b ¡ a®,
ña À (b À c) = (a À b) À c®,
ña ¡ (b ¡ c) = (a ¡ b) ¡ c®,
ña À (b ¡ c) = (a À b) ¡ (a À c)®,
ña ¡ (b À c) = (a ¡ b) À (a ¡ c)®,
ñ(a ¡ b) À (a \ b) = a®,
ñ((a \ b) ¡ b) = {}®,
ña \ (b \ c) = (a \ b) À (a ¡ c)®,
ñ(a \ b) \ c = a \ (b À c)®,
ña À (b \ c) = (a À b) \ (c \ a)®,
ña ¡ (b \ c) = (a ¡ b) \ c®,
ñ(a À b) \ c = (a \ c) À (b \ c)®];
=TEX
=SML
contr_prove ZRM1;
=TEX
=SML
val ZRM2 = [
ña \ (b ¡ c) = (a \ b) À (a \ c)®,
ñ³ x  {}®,
ña  a®,
ñ³ a   a®,
ñ{}  a®,
ñÞ {} = {}®,
ñ¥ {} = U®];
=TEX
=SML
contr_prove ZRM2;
=TEX
=SML
(* results from ZRM that can be proven automatically *)
val ZRM3 = [
ña  b ¤ a  ð b®,
ña  b ± b  a ¤ a = b®,
ñ³ (a   b ± b   a)®,
ña  b ± b  c ´ a  c®,
ña   b ± b   c ´ a   c®,
ñ{}   a ¤ ³ a = {}®,
ñÞ (a À b) = (Þ a) À (Þ b)®,
ñ¥ (a À b) = (¥ a) ¡ (¥ b)®,
ñ a  b ´ Þ a  Þ b ®,
ñ a  b ´ ¥ b  ¥ a ®];
=TEX
=SML
full_prove ZRM3;
=TEX
Now to do them by the two tactic method:
=SML
set_goal([],nth 0 ZRM3);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 3 ñ(x1 ¦ ¬x1®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 1 ZRM3);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 4 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 3 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 3 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "4" *** *)
a(z_spec_nth_asm_tac 3 ñ(x1 ¦ ¬x1®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 2 ZRM3);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 3 ñ(x1 ¦ ¬x1'®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 6 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 3 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "4" *** *)
a(z_spec_nth_asm_tac 3 ñ(x1 ¦ ¬x1®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 3 ZRM3);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 4 ñ(x1 ¦ ¬x1®)®);
a(z_spec_nth_asm_tac 4 ñ(x1 ¦ ¬x1®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 4 ZRM3);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 8 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 7 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 8 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "4" *** *)
a(z_spec_nth_asm_tac 7 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "5" *** *)
a(z_spec_nth_asm_tac 5 ñ(x1 ¦ ¬x1'®)®);
(* *** Goal "6" *** *)
a(z_spec_nth_asm_tac 4 ñ(x1 ¦ ¬x1'®)®);
(* *** Goal "7" *** *)
a(z_spec_nth_asm_tac 8 ñ(x1 ¦ ¬x1''®)®);
a(z_spec_nth_asm_tac 6 ñ(x1 ¦ ¬x1''®)®);
(* *** Goal "8" *** *)
a(z_spec_nth_asm_tac 1 ñ(x1 ¦ ¬x1'®)®);
a(z_spec_nth_asm_tac 8 ñ(x1 ¦ ¬x1'®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 5 ZRM3);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 1 ñ(x1 ¦ ¬x1®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(x1 ¦ ¬x1®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 6 ZRM3);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 2 ñ(S ¦ ¬S®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 1 ñ(S ¦ ¬S®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 1 ñ(S ¦ ¬S®)®);
(* *** Goal "4" *** *)
a(z_spec_nth_asm_tac 1 ñ(S ¦ ¬S®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 7 ZRM3);
a contr_tac;
(* *** Goal "1" *** *)
a(z_spec_nth_asm_tac 3 ñ(S ¦ ¬S®)®);
(* *** Goal "2" *** *)
a(z_spec_nth_asm_tac 3 ñ(S ¦ ¬S®)®);
(* *** Goal "3" *** *)
a(z_spec_nth_asm_tac 4 ñ(S ¦ ¬S®)®);
(* *** Goal "4" *** *)
a(z_spec_nth_asm_tac 3 ñ(S ¦ ¬S®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 8 ZRM3);
a contr_tac;
a(z_spec_nth_asm_tac 1 ñ(S ¦ ¬S®)®);
a(z_spec_nth_asm_tac 5 ñ(x1 ¦ ¬S®)®);
pop_thm();
=TEX
=SML
set_goal([],nth 9 ZRM3);
a contr_tac;
a(z_spec_nth_asm_tac 4 ñ(x1 ¦ ¬S®)®);
a(z_spec_nth_asm_tac 4 ñ(S ¦ ¬S®)®);
pop_thm();
=TEX

\section{DOCUMENT PROCESSING AND PRINTING}
The Z document preparation system, and the ability to strip material from sources files for various kinds of processing is heavily exercised
by the build and documentation of the system itself.
If the build is successful starting from an empty directory,
and the \ProductZ{} documentation can be printed in an acceptable form,
then this area can be considered tested.

To save reviewing the entire system documentation,
the evaluator is advised to check the following the printing of the following:

\begin{tabular}{| p{1.8in} | p{4.3in} |} \hline
Document & Checking for: \\ \hline
T.B.A. & whatever \\ \hline
\end{tabular}

=TEX
\section{FURTHER FORMATTING CHECKS}
Some module test documents indicate that their results file 
be checked for correct formatting of user messages.
This is not currently automatically tested.
These are module test documents:
T.B.A.

\end{document}
