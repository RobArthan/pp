=IGN
********************************************************************************
usr011T.doc: this file is part of the PPZed system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
% usr011T.doc   %Z% $Date: 2002/10/17 15:10:58 $ $Revision: 1.6 $ $RCSfile: usr011T.doc,v $
% this should form a chapter of the document
=TEX

\ignore{
=SML
open_theory "z_library";
=TEX
}%\ignore

This chapter introduces the theories forming the Z ToolKit.

The focus is on reasoning within the theories using the proof contexts supplied for the theories.

The Z ToolKit is split aross six theories in the {\Product} database, one for each of the main sections in Annex C to the draft Z standard \cite{zip/prg/92/121}.

Each of these theories is fully populated with appropriate definitions, in the form in which they appear in the standard.
In the development of the theories we have not felt it appropriate to populate the theories with collections of theorems such as those given as rules in the ZRM \cite{spivey92}.
In general we have found that the results required in applications are rarely found in these collections, and that these rules are not the most satisfactory basis from which to derive the required results.
The rules cited in the ZRM are nevertheless (when true) useful tests of whether our proof system is able to conveniently prove results in these theories, and similar results have been used extensively for examples and exercises.

The approach adopted has generally been to prove those results which are most helpful in providing an automatic proof capability in the relevant theory and to incorporate these results into proof contexts which facilitate their automatic application.
This may involve quite different techniques in different theories.

In the following descriptions we identify for each theory suitable proof contexts for proving results in that theory, and give a description of the proof methods which are effective in the theory (where these have been established).

A selection proof contexts are listed in the following table:

\begin{center}

\begin{tabular}{c}
z_predicates \\
z_language \\
z_language_ext \\
z_sets_alg \\
z_sets_ext \\
z_rel_ext \\
z_fun_ext \\
z_library \\
z_library_ext \\
\end{tabular}

\end{center}

For general purpose use $z_library$ is recommended.
Retreat to a context earlier in the list if your current proof context is doing too much.
To do proofs using extensionality results use one of the $_ext$ contexts.

\section{Sets}

The theory $z_sets$ contains those parts of the Z ToolKit corresponding to section C.1 of the draft Z standard \cite{zip/prg/92/121}.

A suitable proof context for establishing results in this theory is $z_sets_ext$.

This proof context attempts proofs of conjectures using the principles of extensionality of sets.
These enable relations over sets to be expressed in terms of logical relations between the membership conditions for the sets.
These are combined with principles which account for each of the defined operations defined in this theory for constructing sets expressed as elimination rules for claims about membership of the constructed sets.
The resulting collections of principles suffice to reduce statements in set theory to statements in the predicate calculus with equality, which can be proven by the established methods.

\section{Relations}

The theory $z_relations$ contains those parts of the Z ToolKit corresponding to section C.2 of the draft Z standard \cite{zip/prg/92/121}.

This theory is well supported, the principles of reasoning being straightforward.

This theory adds operators over sets which are specific to sets of ordered pairs, such as $dom$ and $ran$.
The main principles for reasoning automatically in this theory remain the same, viz: rewriting with extensionality results to reduce the problem to the predicate calculus.
The main source of extra complexity, in addition to the extra operators which must be eliminated, is the fact that definitions of these operations often involve ordered pairs, and the resulting predicate calculus results require equational reasoning to complete the proof.
We are more often faced with reduction only to predicate calculus with equality, which our resolution facilities do not support.


%A suitable proof context for proving results in this theory

\section{Functions}

The theory $z_functions$ contains those parts of the Z ToolKit corresponding to section C.3 of the draft Z standard \cite{zip/prg/92/121}.

Extensional reasoning suffices for automatic proof of many of the results required in this theory.
However, much reasoning in the system, particulary that concerning `set inference' (demonstrating that values lie in the domain of the functions applied to them, or within the range of applicability of some rewrite rule), is better done using rules about functions rather than eliminating the vocabulary in favour of set theory.
No specific support is as yet available for this latter sort of reasoning about functions, though general purpose facilities (particularly forward and backward chaining) are available which provide a measure of automation.

\section{Numbers and Finiteness}

The theory $z_numbers$ contains those parts of the Z ToolKit corresponding to section C.4 of the draft Z standard \cite{zip/prg/92/121}.

The basic theory of integers is reasonably well developed.
The kind of results needed to do more or less manual proofs in arithmetic are available.
Induction tactics of various kinds are available.
The proof context $z\_lin\_arith$ provides a proof procedure for linear arithmetic.
The proof context for this theory undertakes evaluation of expressions of numeric literals automatically during rewriting or stripping.

The theory of finiteness is not yet properly developed, though all the definitions are present.

\section{Sequences}

The theory $z_sequences$ contains those parts of the Z ToolKit corresponding to section C.5 of the draft Z standard \cite{zip/prg/92/121}.

By comparison with the theory of lists in HOL this theory is much more difficult to reason about.
This is because sequences are defined in terms of finite functions over natural numbers, by contrast with lists, which are a structured or free type for which induction results come more easily.

In addition to difficulties arising from the representation of sequeces in Z, further difficulties arise from the form of the definitions of the various operators.
Since these do not follow and general inductive pattern reasoning about them will not be straigtforwardly supported by induction principles.

Though the theory of sequences is relatively underdeveloped, the definitions are all present, and specifications may therefore be written using them.
The proof facilities are adequate for the development of these theories and the provision of a reasonable degree of automation for them.
However, the required development is non-trivial and has not yet been completed.

\section{Bags}

The theory $z_bags$ contains those parts of the Z ToolKit corresponding to section C.6 of the draft Z standard \cite{zip/prg/92/121}.

This theory is also present but not well developed.


