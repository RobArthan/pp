=IGN
********************************************************************************
dtd063.doc: this file is part of the PPZed system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
%  dtd063.doc  %Z% $Date: 2002/10/17 15:10:58 $ $Revision: 1.12 $ $RCSfile: dtd063.doc,v $
=TEX
% TQtemplate.tex
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Detailed Design of the Z Term Generator}  %% Mandatory field
\TPPref{DS/FMU/IED/DTD063}  %% Mandatory field
\def\SCCSversion{$Revision: 1.12 $%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date: 2002/10/17 15:10:58 $%
}}
%\TPPstatus{Approved}
\TPPstatus{Draft}
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{D.J.~King & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.~Arthan & FST Team Leader}
\TPPabstract{This document contains the detailed design of
the term generator for HOL/Z.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
      Library}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : Lemma 1 Ltd. \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}

\item[Issue 1.1-1.5, \FormatDate{92/02/06} ] Initial Drafts.
\item[Issue 1.6, \FormatDate{92/07/31} ] First Issue.
\item[Issue 1.8, \FormatDate{92/10/28} ] Amended treatment of nested quotation.
\item[Issue 1.9, \FormatDate{92/11/20} ]
\item[Issue 1.10, (16th February 1999)] Update for SML'97.
Changes in cache theory handling.
\item[Issue 1.11] Removed local declarations for Poly/ML port.
\item[Issue 1.12] Copyright and banner updates for open source release.
\item[Issue 1.13] PPZed-specific updates for open source release
\end{description}
\subsection{Changes Forecast}
The function $do\_in\_theory$ will be removed in due course
and the function will be provided by the underlying HOL system.
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document contains the detailed design
of the term generator for HOL/Z.
The high level design for this material is given in \cite{DS/FMU/IED/HLD018}.
\subsection{Introduction}

\subsection{Purpose and Background}
The purpose of the Z term generator is to convert a Z term 
(or a declaration or a schema text) represented as an
abstract syntax tree (of type $Z\_TM$ or $Z\_DEC$ or $Z\_SCH\_TEXT$)
into a HOL term according to the mapping specified in documents
\cite{DS/FMU/IED/ZED002} and \cite{DS/FMU/IED/ZED003}.

\subsection{Dependencies}

The signature $ZTermGenerator$ depends on the structure
$ZUserInterfaceSupport$ for the definition of the datatypes for
the abstract syntax of Z.

\subsection{Algorithms}

The point made in \cite{DS/FMU/IED/DTD062} concerning the communication
between the type inferrer and the term generator and its impact on
the permissible calling sequences should be stressed: when a type inference
has been performed, the resulting value should be passed to the term generator
before any further execution of the type inferrer. Chaos will ensue if this
protocol is not obeyed.
\subsection{Possible Enhancements}
None.
\subsection{Deficiencies}
None known.
\section{THE SIGNATURE $ZTermGenerator$}

=DOC
signature ÛZTermGeneratorÝ = sig
=DESCRIBE
This is the signature of the structure which contains the term generator
for HOL/Z.
=USES
For use by the Z paragraph processor.
=ENDDOC

\subsection{Term Generation Functions}

=DOC
val Ûterm_of_z_decÝ : ZUserInterfaceSupport.Z_DEC -> TERM;
val Ûlist_term_of_z_decÝ : ZUserInterfaceSupport.Z_DEC list -> TERM;
val Ûterm_of_z_schtextÝ : ZUserInterfaceSupport.Z_SCH_TEXT -> (TERM * TERM OPT);
val Ûterm_of_z_tmÝ : ZUserInterfaceSupport.Z_TM -> TERM;
val Ûlist_term_of_z_tmÝ : ZUserInterfaceSupport.Z_TM list -> TERM list;
=DESCRIBE
These functions are intended to be called by the Z
paragraph processor when it is necessary to convert a Z abstract
syntax tree representing a Z term, declaration or schema text
into a HOL term.
Two things happen when the term generator is called: Firstly,
semantic constants which are required to form the HOL term which
are not present in the current cache theory are generated
by calls to functions in the structure $ZGeneratedConstants$.
The Z abstract machine is then called for each of the constructions
in the abstract tree to produce the HOL term.
=USES
It is intended that the code which calls these functions
calls them indirectly using the function $do\_in\_theory$ to
ensure that the generated semantic constants are entered into
the current cache theory and not the current theory (if
they differ).
=EXAMPLE
fun local_generate_term tm =
	do_in_theory (force_get_cache_theory()) term_of_z_tm tm;
=SEEALSO
$do\_in\_theory$
=FAILURE
63001	The input has not been fully type-inferred 
63002	There is no abstract machine support for ?0 
63003	The input contains an invalid construct 
63004	Unexpected failure in type_match or inst 
=ENDDOC

\section{EPILOGUE}

=SML
end (* of structure ZTermGenerator *);
=TEX
\section{TEST POLICY}

The module tests for this module are to follow the guidelines
laid down in the quality plan~\cite{DS/FMU/IED/PLN008}.

\twocolumn[\section{INDEX}]
\small
\printindex

\end{document}


