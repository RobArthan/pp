%  dtd061.doc %Z% $Date$ $Revision$ $RCSfile$
=TEX
% TQtemplate.tex
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\def\Hide#1{}
\def\Bool{``$\it{:}bool\,$''}
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Detailed Design of the Z Parser}  %% Mandatory field
\TPPref{DS/FMU/IED/DTD061}  %% Mandatory field
\def\SCCSversion{$Revision$%
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date$%
}}
%\TPPstatus{Approved}
\TPPstatus{Draft}
\TPPtype{Specification}
\TPPkeywords{HOL}
\TPPauthor{D.J.~King & WIN01}  %% Mandatory field
%\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
\TPPauthorisation{R.D.~Arthan & HAT Manager}
\TPPabstract{
This document contains the detailed design for the
parser for HOL/Z.}
%\TPPabstractB{}
%\TPPabstractC{}
%\TPPabstractD{}
%\TPPabstractE{}
%\TPPabstractF{}
\TPPdistribution{\parbox[t]{4.0in}{%
	Library}}

%\TPPclass{CLASSIFICATION}
%\def\TPPheadlhs{}
%\def\TPPheadcentre{}
%def\TPPheadrhs{}
%\def\TPPfootlhs{}
%\def\TPPfootcentre{}
%\def\TPPfootrhs{}

\begin{document}
\TPPsetsizes
\makeTPPfrontpage

\vfill
\begin{centering}

\bf Copyright \copyright\ : International Computers Ltd \number\year

\end{centering}

\newpage
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}
\item[Issue \SCCSversion~\FormatDate{$Date$%
}) ] Initial Draft.

\end{description}
\subsection{Changes Forecast}
None.
\pagebreak
\section{GENERAL}
\subsection{Scope}
This document contains the detailed design for the parser for HOL/Z
as required in \cite{DS/FMU/IED/HLD018}.

\subsection{Introduction}

\subsubsection{Purpose and Background}

This document gives the detailed design for the parser for HOL/Z.
The interface specification is quite simple. The parser is
essentially a complex black box and is implemented using
the SLRP parser generator, see \cite{DS/FMU/IED/DTD017} using a grammar
based on that specified in \cite{DS/FMU/IED/DEF007}.

\subsubsection{Dependencies}
The parser is dependent on the Z lexical analyser, \cite{DS/FMU/IED/DTD060},
and on the HOL symbol table, \cite{DS/FMU/IED/DTD020}.
%\subsubsection{Possible Enhancements}
\subsubsection{Deficiencies}
None known.
\section{PREAMBLE}
=DOC
signature €ZParser› = sig
=DESCRIBE
This is the signature for the structure containing the parser for HOL/Z.
=ENDDOC

\section{DESIGN ISSUES}

It is a requirement that the parser gives helpful diagnostics
when the grammar recognises an error, and that it aims to point the
user directly to the location of the error.

It is sufficient in the Z parser to provide diagnostics which
are similar to those in HOL; namely that the tokens already recognised
are printed out, followed by a marker ``<?>'', and the symbol which
was reached but unrecognised.

The BNF grammar which has been chosen accepts a slightly larger language.
Checks are made in some reduction functions which effectively
restricts the accepted language. This technique is only used
in a small number of cases, but allows higher level diagnostics to be
produced. For example, if a predicate is provided in a place where
an expression is expected, then the predicate will be parsed completely
before a reduction function is called which prints an error. 

\subsection{Templates}

A function applied to an argument is represented either as a template
e.g., Ò(_ + _) (1, 2)Æ, or with the fixity rule applied; thus
Ò1 + 2Æ. It is necessary that diagnostic messages reproduce
the user's input verbatim. There are at least two ways of achieving
this.

\begin{itemize}
\itemize[1.]
A count of the number of characters read is maintained, and used to
print out the user's input upto the point where an error occurred.
Since it is intended that post-processing in the reduction functions
is carried out, it is necessary to maintain an up-to-date
record of the number of characters read at each point a
reduction is applied.

\itemize[2.]
The structural information necessary to reproduce the user's input
needs to be maintained in the data structure which represents a
parsed Z paragraph.

This requires that the grammar be analysed for productions where structural
information might be lost, and that information be recorded in the data
structure for parsed paragraphs.
\end{itemize}



=TEX
\section{DATA TYPES}
The first phase of the parser will return a value of type $ZTM$ defined
in \cite{DS/FMU/IED/DTD062}.
=TEX
\section{INTERFACE}
=DOC
val €zparser› : ZLex.ZTOKEN list -> ZTypeInference.ZTM;
=DESCRIBE
This is the context-free parser for HOL. It maps the lists of
tokens output by the lexical analyser onto the datatype used as input
to the type inferrer.

If an error is detected in the parsed input
error message 61001 is printed out.
The insert in message 61001 comprises the tokens up to and including
the one at which the error was detected.
The string `$<?>$' is placed in the insert just before the last token to
highlight it.
Note that in the case of an invalid local definition the `$<?>$' is
printed just after the failing $let$-term, since the check is not made
until the entire $let$-term has been read.
After this first line is printed one of message 61003 or 61004 is printed with
appropriate inserts and
error 61000 is raised.

Messages 61005, 61006 and 61007 indicate
an error in the parser itself.

=FAILURE
61000	Syntax error
61001	Syntax error in: ¨ ?0 
61003	?0 is not expected after ¨ ?1
61004	?0 is not a valid local definition
61005	Parser error: corrupt parsing stack detected in ?0
61006	Parser error: unexpected return value from slrp'gen_parser
61007	Parser error: ?0
=ENDDOC
=SML
end; (* of signature Parser *)
=TEX


\section{TEST POLICY}
The functions in this document are to be tested according to the
criteria identified in \cite{DS/FMU/IED/PLN008}.

\small
\twocolumn[\section{INDEX}]
\printindex

\end{document}


