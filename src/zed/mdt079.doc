=IGN
********************************************************************************
mdt079.doc: this file is part of the PPZed system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
%  mdt079.doc  %Z% $Date: 2002/10/17 15:10:58 $ $Revision: 1.4 $ $RCSfile: mdt079.doc,v $
=TEX
%%%%% YOU MAY WANT TO CHANGE POINT SIZE IN THE FOLLOWING:
\documentclass[a4paper,11pt]{article}

%%%%% YOU CAN ADD OTHER PACKAGES AS NEEDED BELOW:
\usepackage{A4}
\usepackage{Lemma1}
\usepackage{ProofPower}
\usepackage{latexsym}
\usepackage{epsf}
\makeindex

%%%%% YOU WILL WANT TO CHANGE THE FOLLOWING TO SUIT YOU AND YOUR DOCUMENT:

\def\Title{Module Tests for Z User Interface Support}

\def\AbstractText{This document comprises test cases and test code/data for testing the Z user interface support module described in the document DS/FMU/IED/DTD079.}

\def\Reference{DS/FMU/IED/MDT079}

\def\Author{R.D. Arthan}


\def\EMail{C/O {\tt rda@lemma-one.com}}

\def\Phone{C/O +44 7497 030682}

\def\Abstract{\begin{center}{\bf Abstract}\par\parbox{0.7\hsize}
{\small \AbstractText}
\end{center}}

%%%%% YOU MAY WANT TO CHANGE THE FOLLOWING TO GET A NICE FRONT PAGE:
\def\FrontPageTitle{ {\huge \Title } }
\def\FrontPageHeader{\raisebox{16ex}{\begin{tabular}[t]{c}
\bf Copyright \copyright\ : Lemma 1 Ltd \number\year\\\strut\\
\end{tabular}}}

%%%%% THE FOLLOWING DEFAULTS WILL GENERALLY BE RIGHT:

\def\Version{\VCVersion}
\def\Date{\FormatDate{\VCDate}}

%% LaTeX2e port: =TEX
%% LaTeX2e port: % TQtemplate.tex
%% LaTeX2e port: \documentstyle[hol1,11pt,TQ]{article}
%% LaTeX2e port: \ftlinepenalty=9999
\def\Hide#1{}
%% LaTeX2e port: \def\Bool{``$\it{:}bool\,$''}
%% LaTeX2e port: \makeindex
%% LaTeX2e port: \TPPproject{FST PROJECT}  %% Mandatory field
%% LaTeX2e port: %\TPPvolume{}
%% LaTeX2e port: %\TPPpart{}
%% LaTeX2e port: \TPPtitle{Module Tests for Z User Interface Support}  %% Mandatory field
%% LaTeX2e port: \TPPref{DS/FMU/IED/MDT079}  %% Mandatory field
%% LaTeX2e port: \def\SCCSversion{$Revision: 1.4 $
%% LaTeX2e port: }
%% LaTeX2e port: \TPPissue{\SCCSversion}  %% Mandatory field
%% LaTeX2e port: \TPPdate{\FormatDate{$Date: 2002/10/17 15:10:58 $
%% LaTeX2e port: }}  %% Mandatory field (with sensible default)
%% LaTeX2e port: \TPPstatus{Draft}			%% Mandatory field
%% LaTeX2e port: \TPPtype{Specification}
%% LaTeX2e port: \TPPkeywords{HOL}
%% LaTeX2e port: \TPPauthor{R.D.~Arthan & WIN01}  %% Mandatory field
%% LaTeX2e port: %\TPPauthors{Name 1&location 1\\Name 2&location 2\\Name 3&location 3}
%% LaTeX2e port: \TPPauthorisation{R.D.~Arthan & FST Team Leader}
%% LaTeX2e port: \TPPabstract{
%% LaTeX2e port: This document comprises test cases and test code/data for
%% LaTeX2e port: testing the Z user interface support module described in the document
%% LaTeX2e port: DS/FMU/IED/DTD079.}
%% LaTeX2e port: %\TPPabstractB{}
%% LaTeX2e port: %\TPPabstractC{}
%% LaTeX2e port: %\TPPabstractD{}
%% LaTeX2e port: %\TPPabstractE{}
%% LaTeX2e port: %\TPPabstractF{}
%% LaTeX2e port: \TPPdistribution{\parbox[t]{4.0in}{%
%% LaTeX2e port:       Library \\ R.D. Arthan\\ D.J. King}}
%% LaTeX2e port: 
%% LaTeX2e port: %\TPPclass{CLASSIFICATION}
%% LaTeX2e port: %\def\TPPheadlhs{}
%% LaTeX2e port: %\def\TPPheadcentre{}
%% LaTeX2e port: %def\TPPheadrhs{}
%% LaTeX2e port: %\def\TPPfootlhs{}
%% LaTeX2e port: %\def\TPPfootcentre{}
%% LaTeX2e port: %\def\TPPfootrhs{}
%% LaTeX2e port: 
%% LaTeX2e port: \begin{document}
%% LaTeX2e port: \TPPsetsizes
%% LaTeX2e port: \makeTPPfrontpage
%% LaTeX2e port: 
%% LaTeX2e port: \vfill
%% LaTeX2e port: \begin{centering}
%% LaTeX2e port: 
%% LaTeX2e port: \bf Copyright \copyright\ : Lemma 1 Ltd. \number\year
%% LaTeX2e port: 
%% LaTeX2e port: \end{centering}

\begin{document}

\headsep=0mm
\FrontPage
\headsep=10mm

\setcounter{section}{-1}

\pagebreak
\section{DOCUMENT CONTROL}
\subsection{Contents List}
\tableofcontents
\subsection{Document Cross References}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes History}  % to get section number `0.3'
\begin{description}
\item[Issues 1.1--1.3] Initial drafts.
\item[Issue 1.4 (2002/10/17)] Copyright and banner updates for open source release.
\item[Issue 1.5 (2002/10/17)] PPZed-specific updates for open source release
\item[2014/07/23]
Augmented old RCS version numbers in the changes history with dates.
Dates will be used in place of version numbers in future.

%%%% END OF CHANGES HISTORY %%%%
\end{description}
% \subsection{Changes Forecast}
\pagebreak
\section{GENERAL}
\subsection{Scope}

This document comprises test cases and test code/data for
testing the Z user interface support module specified in \cite{DS/FMU/IED/DTD079}.

\subsection{Introduction}

\subsubsection{Background and Purpose}
This document is intended to supply module tests for the HOL parser
analyser as defined in \cite{DS/FMU/IED/DTD079} and implemented
in \cite{DS/FMU/IED/IMP079}. The tests are intended to meet
the requirements for tests identified in the quality plan
\cite{DS/FMU/IED/PLN008}.

\subsubsection{Dependencies}

These tests depend on
the test harness as implemented in DS/FMU/IED/IMP013, and
its corresponding detailed design document, DS/FMU/IED/DTD013.

\subsubsection{Possible Enhancements}

None known.

\subsubsection{Deficiencies}

There are no known deficiencies.

\section{TEST CASES}
\begin{description}
\item[ZUIS.1] In this group of tests the operation of the template functions is tested.
\item[ZUIS.2] In this group of tests the basic correct operation of the fixity functions is tested.
\item[ZUIS.3] In this group of tests the error handling of the fixity functions is tested.
\item[ZUIS.4] In this group of tests the behaviour of the fixity functions
as the current theory changes are tested.
\end{description}
\section{PREAMBLE}
=SML
use_file "dtd013.sml";
use_file "imp013.sml";
open_theory "hol" handle (Fail _) => open_theory "misc";
=TEX
We set up a diamond-shaped lattice of theories for later use:
=SML
new_theory "079_test_top";
new_theory "079_test_left";
open_theory "079_test_top";
new_theory "079_test_right";
new_theory "079_test_bottom";
new_parent "079_test_left";
open_theory "079_test_top";
=TEX
=SML
init_mt_results();
open ZUserInterfaceSupport;
=IGN
(* The easy way to generate template test data is to use the Z parser if you
have one: *)
fun parse_tmpl s = (
	case ZParser.z_parser {is_quot=false, standard=true} (ZLex.z_lex[Lex.Text s]) of
		ZParaFixity (cl, tmpl) => hd tmpl
);
=SML
val non_fix = TmplNon ("non", Value ([], (StubUS, "fix")));
val in_fix = TmplIn (StubUS, ("infix", Nil), StubUS);
val pre_fix =
   TmplPre (("if", Value ([(StubUS, "then")], (StubUS, "else"))), StubUS);
val out_fix =
   TmplNon (("A", Value ([(StubUS, "i")], (StubUS, "B"))));
val out_fix1 =
   TmplNon (("A", Value ([(StubUS, "i")], (StubUS, "C"))));
val out_fix2 =
   TmplNon (("Z", Value ([(StubUS, "i")], (StubUS, "B"))));
val out_fix3 =
   TmplNon (("infix", Value ([(StubUS, "i")], (StubUS, "E"))));
val post_fix = TmplPost (StubUS, ("postfix", Nil));
val big_core = TmplIn
   (StubUS,
      ("b",
         Value
            ([(StubUS, "i"), (StubEll, "g"), (StubUS, "c"), (StubEll, "o"),
                  (StubUS, "r")],
               (StubEll, "e"))),
      StubUS);
=TEX
\section{THE TESTS}
\subsection{Group 1}
In this group of tests the template functions are tested.

We take them in the order they are given in the detailed design:
=SML
store_mt_results_show
mt_run
[
	("ZUIS.1.1.1", first_tmpl_id, big_core, "b"),
	("ZUIS.1.1.2", first_tmpl_id, non_fix, "non")
 ];
=TEX
=SML
val set_eq = (fn (s1, s2) => s1 diff s2 = [] andalso s2 diff s1 = []);
store_mt_results_show
(mt_runf set_eq)
[
	("ZUIS.1.2.1", tmpl_ids in_fix, ZClRel, [("infix", (ZFFInOp, ZClRel))]),
	("ZUIS.1.2.2", tmpl_ids pre_fix, ZClFun (42, RightAssoc), [
		("if", (ZFFBeginOp, ZClFun (42, RightAssoc))),
		("then", (ZFFThenOp, ZClFun (42, RightAssoc))),
		("else", (ZFFPreEndOp, ZClFun (42, RightAssoc)))
	])
 ];
=TEX
=SML
store_mt_results_show
mt_run
[
	("ZUIS.1.3.1", tmpl_stubs, in_fix, [StubUS, StubUS]),
	("ZUIS.1.3.2", tmpl_stubs, big_core, [
			StubUS, StubUS, StubEll,
			StubUS, StubEll, StubUS, StubEll, StubUS
		])
 ];
=TEX
=SML
val f = template_of_string o string_of_template;
store_mt_results_show
mt_run
[
	("ZUIS.1.4.1", f, in_fix, in_fix),
	("ZUIS.1.4.2", f, pre_fix, pre_fix),
	("ZUIS.1.4.3", f, post_fix, post_fix),
	("ZUIS.1.4.4", f, big_core, big_core),
	("ZUIS.1.4.5", f, non_fix, non_fix)
 ];
=TEX
\subsection{Group 2}
In this group of tests the basic correct operation of the fixity functions is tested.
=SML
open_theory"079_test_top";
set_zfixity_info(ZClRel, [in_fix]);
set_zfixity_info(ZClRel, [out_fix, big_core]);
store_mt_results_show
(mt_runf (fn (Value(a,b), Value(x,y)) => a = x andalso set_eq (b,y) | _ => false))
[
	("ZUIS.2.1.1", get_zfixity_info, "infix", Value(((ZFFInOp, ZClRel), [in_fix]))),
	("ZUIS.2.1.2", get_zfixity_info, "i", Value(((ZFFThenOp, ZClRel), [out_fix, big_core])))
];
=TEX
It should be ok to repeat the fixity setting provided the parameters are
identical:
=SML
set_zfixity_info(ZClRel, [in_fix]);
store_mt_results_show
(mt_runf (fn (Value(a,b), Value(x,y)) => a = x andalso set_eq (b,y) | _ => false))
[
	("ZUIS.2.2.1", get_zfixity_info, "infix", Value(((ZFFInOp, ZClRel), [in_fix]))),
	("ZUIS.2.2.2", get_zfixity_info, "i", Value(((ZFFThenOp, ZClRel), [out_fix, big_core])))
];
=TEX
=SML
delete_zfixity_info(ZClRel, big_core);
store_mt_results_show
(mt_runf (fn (Value(a,b), Value(x,y)) => a = x andalso set_eq (b,y) | _ => false))
[
	("ZUIS.2.3.1", get_zfixity_info, "infix", Value(((ZFFInOp, ZClRel), [in_fix]))),
	("ZUIS.2.3.2", get_zfixity_info, "i", Value(((ZFFThenOp, ZClRel), [out_fix])))
];
=TEX
=SML
store_mt_results_show
(mt_runf set_eq)
[
	("ZUIS.2.4.1", get_zfixity_infos, "hol", []),
	("ZUIS.2.4.2", get_zfixity_infos, "079_test_top", [
		(ZClRel, in_fix), (ZClRel, out_fix)
	])
];
=TEX
\subsection{Group 3}
In this group of tests the error handling of the fixity functions is tested.

It is considered excessive deliberately to corrupt the fixity database
so we do not test error message 79011.
=SML
store_mt_results_show
mt_run_fail
[
	("ZUIS.3.1.1", set_zfixity_info, (ZClFun (42, LeftAssoc), [in_fix]),
		gen_fail_msg "set_zfixity_info" 79012 ["infix", format_template in_fix, format_template in_fix]),
	("ZUIS.3.1.2", set_zfixity_info, (ZClFun (42, LeftAssoc), [out_fix1]),
		gen_fail_msg "set_zfixity_info" 79012 ["A", format_template out_fix1, format_template out_fix]),
	("ZUIS.3.1.3", set_zfixity_info, (ZClFun (42, LeftAssoc), [out_fix2]),
		gen_fail_msg "set_zfixity_info" 79012 ["B", format_template out_fix2, format_template out_fix]),
	("ZUIS.3.1.4", set_zfixity_info, (ZClFun (42, LeftAssoc), [out_fix3]),
		gen_fail_msg "set_zfixity_info" 79012 ["infix", format_template out_fix3, format_template in_fix])
];
=TEX

=SML
store_mt_results_show
mt_run_fail
[
	("ZUIS.3.3.1", delete_zfixity_info, (ZClRel, big_core),
		gen_fail_msg "delete_zfixity_info" 79013 [format_template big_core, format_class ZClRel])
];
=TEX
=SML
val unlikely = "There, surely, isn't a theory called TSIATCT";
store_mt_results_show
mt_run_fail
[
	("ZUIS.3.4.1", get_zfixity_infos, unlikely,
		gen_fail_msg "get_zfixity_infos" 79014 [unlikely])
];
=TEX
\subsection{Group 4}
In this group of tests the behaviour of the fixity functions
as the current theory changes are tested.
=SML
open_theory"079_test_left";
set_zfixity_info(ZClRel, [big_core]);
store_mt_results_show
(mt_runf (fn (Value(a,b), Value(x,y)) => a = x andalso set_eq (b,y) | _ => false))
[
	("ZUIS.4.1.1", get_zfixity_info, "i", Value(((ZFFThenOp, ZClRel), [out_fix, big_core])))
];
=TEX
=SML
open_theory"079_test_right";
store_mt_results_show
(mt_runf (fn (Value(a,b), Value(x,y)) => a = x andalso set_eq (b,y) | _ => false))
[
	("ZUIS.4.2.1", get_zfixity_info, "i", Value(((ZFFThenOp, ZClRel), [out_fix])))
];
set_zfixity_info(ZClFun (42, LeftAssoc), [big_core]);
=TEX
=SML
diag_line
"*** mdt079 speaking: this text should be followed by a comment message  about incompatible fixity paragraphs ***";
open_theory"079_test_bottom";
=TEX
\section{SUMMARY OF RESULTS}

=SML
diag_string(summarize_mt_results());
=TEX

\end{document}



