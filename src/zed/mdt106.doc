=IGN
********************************************************************************
mdt106.doc: this file is part of the PPZed system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
=TEX
\documentstyle[hol1,11pt,TQ]{article}
\ftlinepenalty=9999
\makeindex
\TPPproject{FST PROJECT}  %% Mandatory field
%\TPPvolume{}
%\TPPpart{}
\TPPtitle{Module Tests for Integer Arithmetic Proof Procedure}  %% Mandatory field
\TPPref{DS/FMU/IED/MDT106}  %% Mandatory field
\def\SCCSversion{$Revision: 1.6 $
}
\TPPissue{\SCCSversion}  %% Mandatory field
\TPPdate{\FormatDate{$Date: 2004/01/19 12:44:00 $%
}}
\TPPstatus{Draft}			%% Mandatory field
\TPPtype{SML Literate Script}
\TPPkeywords{}
%\TPPauthor{R.D.~Arthan & WIN01}  %% Mandatory field
\TPPauthors{R.D.~Arthan & WIN01\\K.~Blackburn & WIN01}
\TPPauthorisation{R.B.~Jones & FMU Manager}
\TPPabstract{This document contains tests for the material defined
in DS/FMU/IED/DTD105\cite{DS/FMU/IED/DTD106}.}
\TPPdistribution{\parbox[t]{4.0in}{%
	    Library
}}
\begin{document}
\makeTPPfrontpage
\vfill
\begin{centering}
\bf Copyright \copyright\ : Lemma 1 Ltd. \number\year
\end{centering}
\pagebreak
\section{Document control}
\subsection{Contents list}
\tableofcontents
\subsection{Document cross references}
\bibliographystyle{fmu}
\bibliography{fmu}

\subsection{Changes history}
\begin{description}
\item[Issue 1.1]
First draft.
\item[Issue 1.2]
Added $z\_lin\_arith1$.
\item[Issue 1.3]
Fixed {\LaTeX} errors.
\item[Issue 1.4] Copyright and banner updates for open source release.
\item[Issue 1.5] PPZed-specific updates for open source release
\item[Issue 1.6] The Z universal set is now called ƒ.
\item[Issue 1.7] Precedences and associativity of toolkit operators now follow \cite{ISO02}.
\end{description}
\subsection{Changes forecast}
None.
\section{GENERAL}
\subsection{Scope}
This document contains module tests for the module defined
in \cite{DS/FMU/IED/DTD106}.
\subsection{Introduction}
\subsubsection{Background and Purpose}
See \cite{DS/FMU/IED/DTD106}. The tests are intended to meet
the requirements for module tests identified in the quality plan
\cite{DS/FMU/IED/PLN008}.
\subsubsection{Dependencies}
These tests depend on
the test harness as implemented in DS/FMU/IED/IMP013, and
its corresponding detailed design document, DS/FMU/IED/DTD013.
\subsubsection{Possible Enhancements}
None known.
\subsubsection{Deficiencies}
None known.
\section{TEST CASES}
In addition to checking the theory design, we identify the following test cases:

\begin{description}
\item[zz.1]
$z\_ú\_conv$ and $ú\_z\_conv$ (successful operation)
\item[zz.2]
$z\_ú\_conv$ and $ú\_z\_conv$ (error cases)
\item[za.1]
$z\_anf\_conv$ (successful operation)
\item[za.2]
$z\_anf\_conv$ (error cases)
\item[pc.1]
the proof contexts (successful operation)
\end{description}
\section{CHECKING THE THEORY DESIGN}
The theory design:
=SML
use_file "dtd013.sml";
use_file "imp013.sml";
init_mt_results();
use_file "dtd106.tch";
store_mt_results mt_run [("theory design of Z Arithmetic Tools",
	theory_check_success,
	(),
	true)];
=TEX
\section{THE TESTS}
=SML
open_theory"z_arithmetic_tools";
set_pc"z_predicates";
force_delete_theory "mdt106" handle Fail _ => ();
new_theory"mdt106";
=TEX
\subsection{Group zz.1}
$z\_ú\_conv$ and $ú\_z\_conv$ (successful operation)
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("zz.1.1.1", z_ú_conv,
		¬z_úñ(a + b)®®,
		¬ñ¬z_ú a®® +‰Z ñ¬z_ú b®®®),
	("zz.1.1.2", z_ú_conv,
		¬z_úñ(a - b)®®,
		¬ñ¬z_ú a®® -‰Z ñ¬z_ú b®®®),
	("zz.1.1.3", z_ú_conv,
		¬z_úñ(a * b)®®,
		¬ñ¬z_ú a®® *‰Z ñ¬z_ú b®®®),
	("zz.1.1.4", z_ú_conv,
		¬z_úñ~a®®,
		¬~‰Z(z_ú a)®),
	("zz.1.1.5", z_ú_conv,
		¬z_úñ7®®,
		¬îú 7®),
	("zz.1.6", z_ú_conv,
		¬z_ú¬ú_z x®®,
		¬x:ú®)
];
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("zz.1.2.1", ú_z_conv,
		¬ú_z¬(a +‰Z b)®®,
		ñ¬ú_z a® + ¬ú_z b®®),
	("zz.1.2.2", ú_z_conv,
		¬ú_z¬(a -‰Z b)®®,
		ñ¬ú_z a® - ¬ú_z b®®),
	("zz.1.2.3", ú_z_conv,
		¬ú_z¬(a *‰Z b)®®,
		ñ¬ú_z a® * ¬ú_z b®®),
	("zz.1.2.4", ú_z_conv,
		¬ú_z¬~‰Z a®®,
		ñ~¬ú_z a® ®),
	("zz.1.2.5", ú_z_conv,
		¬ú_z¬~‰Z a®®,
		ñ~¬ú_z a® ®),
	("zz.1.2.6", ú_z_conv,
		¬ú_z¬îú 12®®,
		ñ12®),
	("zz.1.2.7", ú_z_conv,
		¬ú_z¬z_ú x®®,
		ñxºú®)
];
=TEX
\subsection{Group zz.2}
$z\_ú\_conv$ and $ú\_z\_conv$ (error cases)
=SML
store_mt_results_show
mt_run_fail [
("zz.2.1", z_ú_conv, ¬x:ú®,
		gen_fail_msg"z_ú_conv" 106001 [string_of_term ¬x:ú®]),
("zz.2.2", ú_z_conv, ¬x:ú®,
		gen_fail_msg"ú_z_conv" 106002 [string_of_term ¬x:ú®])
];
=TEX
\subsection{za.1}
$z\_anf\_conv$ (successful operation)
=SML
=TEX
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_eq o snd o dest_thm) ** Combinators.I))) [
	("za.1.1", z_anf_conv,
		ñ(1 + x)*(1 + x)®,
		ñ1 + (2*x + x*x)®),
	("za.1.2", z_anf_conv,
		ñ(1 + x)*(1 - x)®,
		ñ1 + ~x*x®)
];
=TEX
\subsection{za.2}
$z\_anf\_conv$ (error cases)
=SML
store_mt_results_show
mt_run_fail [
("za.2.1", z_anf_conv, ¬x:ú®,
		gen_fail_msg"z_anf_conv" 106010 [string_of_term ¬x:ú®])
];
=TEX
\subsection{pc.1}
the proof contexts (successful operation)
=SML
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_thm) ** Combinators.I))) [
	("pc.1.1", pc_rule1 "z_lin_arith" prove_rule[],
		ñx < y ± y < z ´ x < z®,
		ñx < y ± y < z ´ x < z®),
	("pc.1.2", pc_rule1 "z_lin_arith" prove_rule[],
		ñ³(¶x, y:ú·x > 0 ± x + a + b + y < b + y + a)®,
		ñ³(¶x, y:ú·x > 0 ± x + a + b + y < b + y + a)®)
];
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_thm) ** Combinators.I))) [
	("pca.1.1", pc_rule1 "z_lin_arith1" prove_rule[],
		ñx < y ± y < z ´ x < z®,
		ñx < y ± y < z ´ x < z®),
	("pca.1.2", pc_rule1 "z_lin_arith1" prove_rule[],
		ñ³(¶x, y:ú·x > 0 ± x + a + b + y < b + y + a)®,
		ñ³(¶x, y:ú·x > 0 ± x + a + b + y < b + y + a)®)
];
=TEX
=SML
val eg_thm = (
set_goal([], ñ{i, j : ú | 30*i = 105*j} = {i, j : ú | 2*i = 7*j}®);
a(MERGE_PCS_T1["z_sets_ext", "'z_lin_arith"]prove_tac[]);
pop_thm()
);
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_thm) ** Combinators.I))) [
	("pc.1.3", Combinators.I,
		eg_thm,
		ñ{i, j : ú | 30*i = 105*j} = {i, j : ú | 2*i = 7*j}®)
];
=SML
=TEX
=SML
val eg_thm1 = (
set_goal([], ñ{i, j : ú | 30*i = 105*j} = {i, j : ú | 2*i = 7*j}®);
a(MERGE_PCS_T1["z_sets_ext", "'z_lin_arith1"]prove_tac[]);
pop_thm()
);
store_mt_results_show
(mt_runf (op ~=$ o ((snd o dest_thm) ** Combinators.I))) [
	("pca.1.3", Combinators.I,
		eg_thm1,
		ñ{i, j : ú | 30*i = 105*j} = {i, j : ú | 2*i = 7*j}®)
];
=TEX
\section{SUMMARY OF RESULTS}
=SML
diag_string(summarize_mt_results());
=TEX

\end{document}

