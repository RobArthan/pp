=IGN
********************************************************************************
dtd118.doc: this file is part of the PPDev system

Copyright (c) 2002 Lemma 1 Ltd.

See the file LICENSE for your rights to use and change this file.

Contact: Rob Arthan < rda@lemma-one.com >
********************************************************************************
=TEX
%%%%% YOU MAY WANT TO CHANGE POINT SIZE IN THE FOLLOWING:
\documentclass[a4paper,12pt]{article}

%%%%% YOU CAN ADD OTHER PACKAGES AS NEEDED BELOW:
\usepackage{A4}
\usepackage{Lemma1}
\usepackage{ProofPower}
\usepackage{epsf}
\makeindex
\def\Slrp{{\bf SLRP}}
\def\Hide#1{\relax}

%%%%% YOU WILL USUALLY WANT TO CHANGE THE FOLLOWING TO SUIT YOU AND YOUR DOCUMENT:

\def\Title{ Generic SLRP Parser: Detailed Design }

\def\Abstract{\begin{center}
{\bf Abstract}\par
{The detailed design of a generic SLRP parser.}
\end{center}}

\def\Reference{DS/FMU/IED/DTD118}

\def\Author{R.D. Arthan}

\def\EMail{{\tt rda@lemma-one.com}}

\def\Phone{+44 118 958 4409}

\def\Fax{+44 118 956 1920}

%%%%% YOU MAY WANT TO CHANGE THE FOLLOWING TO GET A NICE FRONT PAGE:
\def\FrontPageTitle{ {\huge \Title } }
\def\FrontPageHeader{\raisebox{16ex}{\begin{tabular}[t]{c}
\bf Copyright \copyright\ : Lemma 1 Ltd \number\year\\\strut\\
\end{tabular}}}

%%%%% THE FOLLOWING DEFAULTS WILL GENERALLY BE RIGHT:

\def\Version{$Revision: 2.14 $%
}
\def\Date{\FormatDate{$Date: 2003/02/23 14:48:48 $%
}}

%%%%% NOW BEGIN THE DOCUMENT AND MAKE THE FRONT PAGE

\begin{document}
\headsep=0mm
\FrontPage
\headsep=10mm

%%%%% STANDARD RED-TAPE SECTIONS (MAY WANT TO INTERLEAVE SOME \newpage COMMANDS IN THESE)

%%%%% CONTENTS:

\subsection{Contents}

\tableofcontents

%%%%% REFERENCES:

\subsection{References}

\bibliographystyle{fmu}

%%%%% CHANGE THE FOLLOWING AS NECESSARY (E.G., TO PICK UP daz.bib):
{\raggedright
\bibliography{fmu}
}
%%%%% CHANGES HISTORY:
\subsection{Changes History}
\begin{description}

\item[Issues 1.1 to 1.12 ] First drafts.

\item[Issue 2.1, 3 September 1991 ] First approved version.

\item[Issue 2.2, \FormatDate{92/01/20} ] Updated to use new fonts.

\item[Issue 2.3, \FormatDate{92/04/16} ] Added description
of how to access the parsing stack $stk$, from the actions annotation.
The description has been introduced in the documentation box for
$Slrp.slrp$.
\item [Issue 2.4 26th May 1992]
Renamings from version 1.5 of DS/FMU/IED/WRK038.
\item [Issues 2.5-2.7 1st August 2000]
The examples have been updated to handle the revised Standard ML value polymorphism restriction.
A shell script to run the parser generator has been added and the error handling
of the ML interface has been rationalised to facilitate this.
\item[Issue 2.8] Copyright and banner updates for open source release.
\item[Issue 2.9] PPDev-specific updates for open source release
\item[Issues 2.10, 2.11] Now have LALR(1) algorithm as well as SLR(1).
\item[Issue 2.12] Can now identify a constructor to be applied to string literals.
in the action tables.
\item[Issue 2.13] Can now ask for execution timings.
\end{description}

%%%%%  CHANGES FORECAST:

\subsection{Changes Forecast}

None.

%%%%% DISTRIBUTION LIST

\subsection{Distribution}
\begin{center}
\begin{tabular}{ll}
{\Product} Development Library & Lemma 1\\
\end{tabular}
\end{center}
\newpage
\section{GENERAL}
\subsection{Scope}
This document contains the detailed design for a generic framework for a parser generated
by \Slrp. This is useful both for testing {\Slrp} and as a service to {\Slrp} users.

\subsection{Introduction}


The implementation is given in \cite{DS/FMU/IED/IMP118}.

\subsection{Purpose and Background}
See \cite{DS/FMU/IED/HLD013}.

\subsection{Dependencies}
The design is be dependent on \cite{DS/FMU/IED/DTD017} for the data types
used.  The ML code from \cite{DS/FMU/IED/DTD017} is included when this document
is processed.

\subsection{Possible Enhancements}


\subsection{Deficiencies}


\pagebreak
\section{ML INTERFACE}\label{MLINTERFACE}
=DOC
signature ÛGenericSlrpParserÝ = sig
include SlrpDriver;
=DESCRIBE
This is the signature of a structure containing a generic \Slrp\ parser.
=ENDDOC

=DOC
datatype ÛLEX_CLASSÝ =
		ÛLCIdentifierÝ of string
	|	ÛLCStringÝ of string
	|	ÛLCEosÝ;
datatype ÛLEX_VALUEÝ =
		ÛLVIdentifierÝ of (string * int)
	|	ÛLVStringÝ of (string * int)
	|	ÛLVEosÝ of int;
val ÛclassifierÝ : LEX_VALUE -> LEX_CLASS;
val Ûstring_of_lex_valueÝ : LEX_VALUE -> string;
val Ûline_number_of_lex_valueÝ : LEX_VALUE -> int;
=DESCRIBE
These are the types of lexical classes ($'lc$)  and
of lexical values ($'tok$) for the generic \Slrp\ parser with
the classifier function that maps the latter onto the former.
The numbers in the lexical values are line numbers.
=ENDDOC

=DOC
type ÛIN_CHAR_STREAMÝ;
val Ûin_char_stream_of_fileÝ : string -> IN_CHAR_STREAM;
val Ûin_char_stream_of_stringÝ : string -> IN_CHAR_STREAM;
val ÛreaderÝ  : IN_CHAR_STREAM ->  (LEX_VALUE, string list * bool) READER;
=DESCRIBE
=ENDDOC
=DOC
datatype ÛGEN_PARSE_TREEÝ =
		ÛLeafÝ of LEX_VALUE * LEX_CLASS
	|	ÛNodeÝ of (string * int) * GEN_PARSE_TREE list;
val Ûgeneric_reducerÝ  : string * int -> 
	(LEX_VALUE, LEX_CLASS, GEN_PARSE_TREE)
		INPUT_STACK_ITEM list ->
	(LEX_VALUE, LEX_CLASS, GEN_PARSE_TREE)
		INPUT_STACK_ITEM list ->
	GEN_PARSE_TREE;
val Ûprint_treeÝ : (string -> unit) -> GEN_PARSE_TREE -> unit;
=DESCRIBE
=ENDDOC
=DOC

=DESCRIBE
=ENDDOC
val Ûparse_fileÝ : string -> GEN_PARSE_TREE;
val Ûparse_stringÝ : string -> GEN_PARSE_TREE;
=SML
end; (* of signature GenericSlrpParser *)
=TEX
\section{TEST POLICY}
The code has been tested using LALR(1) grammars for C, Pascal, Java 1.1 and Ada 95.

\section{INDEX}
\small
\printindex

\end{document}


