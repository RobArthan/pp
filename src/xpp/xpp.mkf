
# #### #### #### #### #### #### #### #### #### #### #### ####
# makefile $Revision$ $Date$ 
#
# makefile for the X/Motif ProofPower Interface
#
# (c) ICL 1994
#
# #### #### #### #### #### #### #### #### #### #### #### #### #
CC = gcc
CDEBUG = -ggdb
CFLAGS = $(CDEBUG) -ansi -I$$MOTIFHOME/include -I$$OPENWINHOME/include

XPPOBJFILES= \
		cmdline.o \
		options.o \
		diag.o \
		help.o \
		files.o \
		mainw.o \
		menus.o \
		msg.o \
		palette.o \
		pixmaps.o \
		pterm.o \
		search.o \
		templates.o \
		undo.o \
		xmisc.o

XPPOFILES=	$(XPPOBJFILES) xpp.o

XPPCFILES=	$(XPPOFILES:.o=.c)

XPPCONTENTS=	$(XPPCFILES) pp_bitmap.h xpp.h makehelp.sh


default:
	@echo "The following are some of the more useful make commands:"
	@echo " "
	@echo "make all     - makes xpp, updating build log"
	@echo "make test    - makes a test version of xpp (called xpptest)"

test:	$(XPPOBJFILES) xpp.o_test_version
	$(CC) -o xpptest $(XPPOFILES) -lXm -lXt -lX11 -lgen

development_default: xpp


all: xpp

xpp: $(XPPOFILES)
	$(CC) -o xpp $(XPPOFILES) -lXm -lXt -lX11 -lgen

cmdline.o: cmdline.c xpp.h help.h
options.o: options.c xpp.h help.h
diag.o: diag.c xpp.h help.h
files.o: files.c xpp.h help.h
mainw.o: mainw.c xpp.h help.h
menus.o: menus.c xpp.h help.h
msg.o: msg.c xpp.h help.h
palette.o: palette.c xpp.h help.h
pixmaps.o: pixmaps.c pp_bitmap.h xpp.h
search.o: search.c xpp.h help.h
templates.o: templates.c xpp.h  help.h
undo.o: undo.c xpp.h help.h
xmisc.o: xmisc.c xpp.h help.h
xpp.o: xpp.c xpp.h build_log
	$(CC) $(CFLAGS) -c xpp.c -DBUILDVERSION=\"`sccs prs -d':I:' build_log`\"

build_log: $(XPPCFILES)
	sccs edit build_log
	sccs prs -d':M: :I: :D:' -l SCCS >build_log
	sccs delget -y'update by makefile' build_log

xpp.o_test_version: xpp.c xpp.h help.h
	$(CC) $(CFLAGS) -c xpp.c

help.h help.c: help.txt makehelp
	makehelp
clean:
	rm -f xpp $(XPPOFILES) help.c help.h makehelp


######################################################################
#
#	Making a release of the xpp tool
#
######################################################################


PPDIR=		/hat/projects/pp0.5
XPPDIR=		/hat/projects/ied/xpp
IEDDIR=		/hat/projects/ied
XPPSCCSDIR=	$(XPPDIR)/SCCS
IEDSCCSDIR=	$(IEDDIR)/SCCS


# directories in the release
RELEASE=	release
BIN=		$(RELEASE)/sun4bin
DOCS=		$(RELEASE)/docs
FONTS=		$(RELEASE)/fonts

# Makefiles
XPPMKF=		xpp.mkf
SCHEDULEMKF=	extension_schedules.mkf

# Filename of the XPP schedule
XPPSCHEDULE=    recorded_xpp_schedule

# contents of the XPP schedule
XPPSCHEDULECONTENTS=    $(XPPCONTENTS)

# XPP and IED sccs commands
XPPSCCS=	sccs -d $(XPPDIR)
IEDSCCS=	sccs -d $(IEDDIR)

$(SCHEDULEMKF): $(IEDDIR)/SCCS/s.imp102.doc
	$(IEDSCCS) get imp102.doc
	sieve sml < imp102.doc

xpp_setissue: $(SCHEDULEMKF)
	@usage="xpp_setissue FILE=$(FILE) :";\
	if test XX$(FILE) = XX;\
	then\
	  echo "$$usage Set the macro FILE to the filename required";\
	  exit 1;\
	fi;\
	make -f $(SCHEDULEMKF) setissue SCCS='$(XPPSCCS)' SCCSDIR=$(XPPSCCSDIR) FILE=$(FILE)

xpp_getissue: $(SCHEDULEMKF)
	@usage="xpp_getissue FILE=$(FILE) :";\
	if test XX$(FILE) = XX;\
	then\
	  echo "$$usage Set the macro FILE to the filename required";\
	  exit 1;\
	fi;\
	make -f $(SCHEDULEMKF) getissue SCCS='$(XPPSCCS)' SCCSDIR=$(XPPSCCSDIR) FILE=$(FILE)

xpp_make_schedule: $(SCHEDULEMKF)
	make -f $(SCHEDULEMKF) make_schedule SCHEDULE=$(XPPSCHEDULE) SCCS='$(XPPSCCS)' SCCSDIR=$(XPPSCCSDIR) CONTENTS='$(XPPSCHEDULECONTENTS)'

xpp_unedit_schedule: $(SCHEDULEMKF)
	make -f $(SCHEDULEMKF) unedit_schedule SCHEDULE=$(XPPSCHEDULE) SCCS='$(XPPSCCS)'

xpp_save_schedule: $(SCHEDULEMKF)
	make -f $(SCHEDULEMKF) save_schedule SCHEDULE=$(XPPSCHEDULE) SCCS='$(XPPSCCS)' COMMENT='saved by $(USER) using $(XPPMKF)'

releasebuild: $(SCHEDULEMKF) specials.ML xpp_init.ML
	@RELEASE=TRUE;\
	usage="releasebuild VERSION=$(VERSION) :";\
	if test XX$(VERSION) = XX;\
	then\
	  echo "$$usage set the macro VERSION to the version of the schedule to be used.";\
	  exit 1;\
	fi;\
# delete, and then make some directories for the release
	rm -rf $(RELEASE);\
	mkdir $(RELEASE);\
	mkdir $(BIN);\
	mkdir $(DOCS);\
# copy a securable database, initialise it and create a ldd file
	cp $(SECURABLEZEDDB) sun4xpp.db;\
 	pp -d xpp -f specials.ML;\
	touch $(ARCH)xpp.ldd;\
# extract all the needed files from SCCS using the schedule versions
	for i in $(XPPSMLDOCS) $(XPPWRKS);\
	do\
	  ver=`make -f $(SCHEDULEMKF) get_entry SCHEDULE=$(XPPSCHEDULE) SCCS='$(XPPSCCS)' VERSION=$(VERSION) FILE=$$i`;\
	  echo $$i;\
	  $(XPPSCCS) get -r$$ver $$i;\
	done;\
# make the files needed for the release
	make -f $(XPPMKF) $(XPPLDDFILES);\
	make -f $(XPPMKF) wrk001.sml;\
# compact the database, then load another initialisation script
	discgarb sun4xpp.db;\
 	pp -d xpp -f xpp_init.ML;\
# copy files into the release directory
	mv sun4xpp.db $(BIN);\
	mv wrk001.doc $(DOCS);\
	mv wrk001.sml $(DOCS)

