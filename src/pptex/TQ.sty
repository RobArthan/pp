% TQ.sty   $Date: 1999/04/25 10:09:12 $ $Revision: 1.11 $ $RCSfile: TQ.sty,v $

\typeout{Document Style `TQ'. Version $Revision: 1.11 $ $Date: 1999/04/25 10:09:12 $}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% TPP style file is in various parts:
%% **	to set page sizes large
%% **	to redefine some LaTeX article style commands
%% **	for defining frameworks for page headers and footers
%% **	for TPP style front page
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% For big pages
%% **	Uses more of the page for text.
%% **	No margins.
%% **	Have vertical space between paragraphs, and no hanging indents.
%% **	Alter table of contents and bibliography commands to not
%%	produce any section titles.
%% **	Make footnote separating rule full page width.
%% ** 	Show dates.
%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% To get vertical space between paragraphs, and no hanging indents.
\advance\parskip by 0.5\baselineskip
\parindent 0pt  % was 20pt, in `lplain.tex', and 15pt in `art10.sty'.

% From Article.sty, page size information.
% Original sizes from Article.sty are shown after the current values

\if@twoside
    \oddsidemargin 17pt   % was 44pt
    \evensidemargin 36pt  % was 82pt
    \marginparwidth 0pt   % was 107pt
\else
    \oddsidemargin 26pt   % was 63pt
    \evensidemargin 26pt  % was 63pt
    \marginparwidth 0pt   % was 90pt
\fi

\columnsep 10pt
\columnseprule 0pt
\footskip 30pt
\headheight 45pt
\headsep 10pt
\hoffset -0.3in
\marginparpush 5pt
\marginparsep 0pt
\textheight = 9.15in
\textwidth 6.6in
\topmargin 0pt
\topsep 0pt
\voffset -0.6in

%  Default is to use a large amount of the page, but this is not
%  compatible with programs like `dvisun' which expect `\hoffset=0pt'
%  and `\voffset=0pt'.  To allow viewing the file complete with its
%  headers and LHS margin use the macro `\TPPsmallpage'.  Note that page
%  boundaries will change if this macro is used, because of the changes
%  to `\textheight' and `\textwidth'.

\def\TPPsmallpage{%
\textheight = 8.5in
\textwidth 6in
\advance\hoffset by 0.3in
\advance\voffset by 0.6in
}

\setcounter{section}{-1}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Define new version of various commands.

% \tableofcontents and \thebibliography:  To omit the lines
% saying CONTENTS and REFERENCES.

\def\tableofcontents{{\parskip=0pt\@starttoc{toc}}}

\def\thebibliography#1{\list
 {[\arabic{enumi}]}{\settowidth\labelwidth{[#1]}\leftmargin\labelwidth
 \advance\leftmargin\labelsep
 \usecounter{enumi}}
 \def\newblock{\hskip .11em plus .33em minus -.07em}
 \sloppy\clubpenalty4000\widowpenalty4000
 \sfcode`\.=1000\relax}
\let\endthebibliography=\endlist

% \renewcommand:  To get a full width separating line.
\renewcommand{\footnoterule}{\kern-3pt
  \hrule \kern 2.6pt} % the \hrule is .4pt high

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% LaTeX default shows dates as (eg)  `May 26, 1989'
\def\today{\number\day\space\ifcase\month\or
January\or February\or March\or April\or May\or June\or
July\or August\or September\or October\or November\or December\fi
\space\number\year}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%  `\FormatDate{}' formats a date in the style: `YY/MM/DD', as
%	produced by sccs and similar, in the form `DD Monthname 19YY'.
%	If the argument is empty (as in `\FormatDate{}') then today's
%	date is used.  Thus a good way to use it in an sccs controlled
%	document is with the `percent E percent' keyword (for the
%	next few lines `%' will be shown as `*' so that sccs will not
%	expand `*E*' in this explanatory text):
%		\FormatDate{*E*
%		}
%	So that if the *E* macro has not been expanded you get today's
%	date, because the first `percent' is taken as TeX's start of
%	comment.
%
%	Note the `\number#3\relax\space' for the day.  The `\number#3'
%	part removes any leading zeroes and trailing spaces in argument
%	3.  Leading zeroes come from SCCS.  Trailing spaces may come
%	from the `*E*\n}' where the `\n' is treated as a space, in an
%	alternative form of `{*E**\n}' the extra `*' (actually `%')
%	means that there is no space.  The definition of `\number' is
%	that it allows, and consumes <one optional space> (see the
%	TeXbook, page 269), without the `\relax' then that space may be
%	the explicit one we give here.  The combination of `\number'
%	and `\relax' means that trailing spaces are suppressed, and
%	that one space is included between day and month.
%
%	This is now extended to cope with inputs of the form `YY/MM/DD'
%	or `YYYY/MM/DD' optionally followed by a space then something else.
%	The something else is discarded. This caters for RCS Date substitutions
%	which include a time after the date. FormatDateAux requires a space
%	after operand 3. FormatDate tacks on a date and a dummy operand 4
%	to cater for the SCCS format with no time field. If the time field
%	is their TeX matches the first space and so discards the time
%	along with the dummy operand.
%	To permit RCS style keywords in documents checked for editing
%	an argument beginning with a $ is also permitted and treated
%	the same as an empty argument. Use `co -kv' with RCS to get
%	the proper dates inserted when the document has been checked in.

\def\@FormatDateAuxA#1/#2/#3 #4.{%
	% Day
		\number#3\relax\space
	% Month
		\ifcase#2{}?#2?\or
		January\or February\or March\or April\or
		May\or June\or July\or August\or
		September\or October\or November\or December\else
		?#2?\fi\space
	% Year
		\ifnum#1>99{}#1\else\ifnum#1>9{}19#1\else190#1\fi\fi}

\def\@FormatDateAuxB#1$#2.{{%
	\def\arg{#1}%
	\def\cmp{}%
	\ifx\arg\cmp
		\@FormatDateAuxA{\number\year}/{\number\month}/{\number\day} X.%
	\else
		\expandafter\@FormatDateAuxA#1 X.\fi}}

\def\FormatDate#1{\@FormatDateAuxB#1$X.}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% Page numbering
%%
%% **	Define \TPPNumPages to be number of pages in the document,
%%	write it to the .aux file ready for the "next" run of LaTeX.
%%	Use a default of `??' for the first run.

\def\TPPNumPages{??}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% For page headers and footers
%%
%% Both are formed from: ``lhs     centre     rhs'' each having several
%% lines.  Below the head, and above the foot, there is a ruled line.
%%
%% Additionally we may have a document classification, which goes on a
%% line of its own above and below everything else, this is requested
%% by calling \TPPclass.
%%
%% Having got all the header and footer contents, use \TPPsetsizes to
%% set the actual heights of the header, footer, and rest of the page.
%% `\TPPsetsizes' is called by `\makeTPPfrontpage' so most documents
%% will have the correct sizes, for documents without ths standard
%% front page it must be called directly.

\let\TPPclass@head=\relax
\let\TPPclass@foot=\relax

\def\TPPclass#1{%
    \def\TPPclass@head{\hbox to \textwidth{\hfil #1\hfil}\vskip 6pt}%
    \def\TPPclass@foot{\vskip 6pt\hbox to \textwidth{\hfil #1\hfil}}%
    \advance\footheight by \baselineskip
    \advance\footskip by \baselineskip
    \advance\headheight by \baselineskip
    \advance\textheight by -2\baselineskip % allows for footheight
}

% Header.  Note `\vcenter' is only available in maths mode, hence
% the dollar signs.

\def\TPPheadlhs{$\vcenter{\halign{\hfill\strut ##\hfill\cr
	Lemma 1\cr}}$}
\def\TPPheadcentreproject{TECHNOLOGY PROJECTS}
\def\TPPheadcentre{$\vcenter{\halign{\hfill\strut ##\hfill\cr
	\TPPheadcentreproject\cr
	\TPPheadtitle\cr}}$}
\def\TPPheadrhs{$\vcenter{\halign{\hfill\strut ##\cr
	{\em Ref:} \TPPxref\cr
	{\em Issue:} \TPPxissue\cr
	{\em Date:} \TPPdocdate\cr}}$}

\def\TPPhe@d{%
    \TPPclass@head
    \hbox to \textwidth
	{\hbox to 0pt{\TPPheadlhs\hss}\hfil
	\TPPheadcentre\hfil\hbox to 0pt{\hss\TPPheadrhs}}}

% Footer

\def\TPPfootlhs{}
\def\TPPfootcentre{}
\def\TPPfootrhs{{\em Page\/} \thepage{ \em of\/} \TPPNumPages}

\def\TPP@write{%
    \if@filesw\immediate\write\@auxout{\string
	\gdef\string\TPPNumPages{\thepage}}\fi}

\def\TPPf@@t{%
	\vbox{\hbox to \textwidth{%
			\hbox to 0pt{\TPPfootlhs\hss}\hfill
			\TPPfootcentre\hfill
			\hbox to 0pt{\hss\TPPfootrhs}}%
		\TPPclass@foot
	}}

\def\ps@TPP{% This is the macro called by `\pagestyle{TPP}'
    \message{Pagestyle `TPP' is set autmatically by the `TQ' style.}
    \message{The `\ pagestyle{TPP}' should be deleted from the document.}
}
\def\ps@TPPrule{% This is the macro called by `\pagestyle{TPPrule}'
    \message{Pagestyle `TPPrule' is not available in `TQ' style.}
    \message{The pagestyle `TPP' is set autmatically by the `TQ' style.}
    \message{The `\ pagestyle{TPP}' should be deleted from the document.}
}

\let\@mkboth\@gobbletwo
\def\TPPfoot{\vbox{%
			\baselineskip 0pt
			\hbox to \textwidth
				{\vrule height 6pt depth 6pt width 0pt
				 \hrulefill}%
			\TPPf@@t}}%
\def\TPPhead{\vbox{%
			\TPPhe@d
			\hbox to \textwidth
				{\vrule height 6pt depth 6pt width 0pt
				\hrulefill}}}%
\def\@oddfoot{\TPP@write\TPPfoot}%
\def\@evenfoot{\TPP@write\TPPfoot}%
\let\@evenhead\TPPhead
\let\@oddhead\TPPhead


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%	Sets the head, text, and foot sizes based on the sizes
%	actually needed.
%
%	We do not care what the sizes start at, they will be
%	adjusted to preserve their total.

\def\TPPsetsizes{%
%   Add current head and foot heights into \textheight.
%   \footheight is not needed, it is part of \footskip.
%   We don't clear the head and foot heights, we
%   give them new values later on.
	\advance\textheight by \headheight
	\advance\textheight by \footskip
%   Set a box containing the header, put its total height
%   into \headheight, reduce \textheight by that height.
%   Note that \box0 can be used as a scratch box, see the
%   TeXbook page 122, top paragraph.
	\setbox0=\vbox{\TPPhead}%
	\headheight=\ht0\advance\headheight by \dp0%
	\advance\textheight by -\headheight
%   Set a box containing the footer, put its total height
%   into \footheight.  Add a little more to give \footskip,
%   then reduce \textheight by \footskip.
	\setbox0=\vbox{\TPPfoot}%
	\footheight=\ht0\advance\footskip by \dp0
%	\footskip=0pt
	\footskip=\footheight
	\advance\footskip by 5pt
	\advance\textheight by -\footskip
%  "latex.tex" says:
%  %   Page layout must also initialize \@colht and \@colroom to \textheight.
\@colht\textheight
\@colroom\textheight
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%%	Style to generate front pages of documents in the TPP
%%	document style.  Based on [AW...] issue ..., version...
%%
%% **	Defines lots of macros, general style is that macros with an
%%	`@' are used in creating the front page, and may be deleted
%%	when it is actually produced.  A few macros are left after the
%%	front page is produced, for use in (eg) page headers and
%%	footers, they are:
%%	      \TPPheadtitle
%%
%% **	The abstract is treated in a strange manner, the aim being to
%%	allow multi-paragraph abstracts.  This is done with a
%%	`TPPabstract' environment, it means a little more typing for
%%	the users of short abstracts, but gives the flexibility for
%%	long abstracts.
%%

% First set some default values for front page entries.  Default
% for many is to output almost nothing at all

\let\TPP@FPproject=\relax
\let\TPP@FPvolume=\relax
\let\TPP@FPpart=\relax
\let\TPPheadtitle=\relax
\let\TPP@FPtitle=\relax
\def\TPPxref{??}
\def\TPPxissue{??}
\def\TPPdocdate{\today}
\let\TPP@FPstatus=\relax
\let\TPP@FPtype=\relax
\let\TPP@FPkeywords=\relax
\let\TPP@FPauthor=\relax
\let\TPP@FPauthizn=\relax
\let\TPP@FPabstractA=\relax
\let\TPP@FPabstractB=\relax
\let\TPP@FPabstractC=\relax
\let\TPP@FPabstractD=\relax
\let\TPP@FPabstractE=\relax
\let\TPP@FPabstractF=\relax
\let\TPP@FPdist=\relax


% These macros are called by the user to set up parts of the front page
% Most are simple one parameter macros, the exceptions are:
%
%   Abstracts.  Use these macros,  \TPPabstractB to \TPPabstractF may
%   be omitted for short abstracts
%	\TPPabstract{text of the first paragraph of the abstract}
%	\TPPabstractB{text of the second paragraph of the abstract}
%	\TPPabstractC{text of the third paragraph of the abstract}
%	\TPPabstractD{text of the 4th paragraph of the abstract}
%	\TPPabstractE{text of the 5th paragraph of the abstract}
%	\TPPabstractF{text of the 6th paragraph of the abstract}
%   Authors:
%	Use either \TPPauthors{} or \TPPauthor{}.  They give
%	the same effect, except that \TPPauthors{} outputs the
%	line title ``Authors'' and \TPPauthor{} outputs ``Author''.
%	See also the section below on Authorisation and Authors.
%   Authorisation:
%	To get an authorisation entry use \TPPauthorisation{}.
%   Authorisation and Authors:
%	The  Authorisation, Author and Authors entries requires are a
%	four column LaTeX tabular environments, containing: name,
%	function, signature, and date.  (Author has location rather
%	than function).  Multiple authorisation entries can be obtained
%	by having several table rows.  Eg:
%		\TPPauthorisation{name1 & func1 & sig1 & date1\\
%			name2 & func2 & sig2 & date2}
%   Distribution:
%	This is a simple text field, to get multiple
%	distributions use some sort of table, eg:
%		\begin{tabular}{@{\hspace{1.1in}}l} ...
%	Or, for a distribution list with addresses etc, use
%	a table with several columns.
%
% These macros are called after the \begin{document}.

\def\TPPproject#1{\def\TPP@FPproject{{\em Project:}&#1\\}%
	\def\TPPheadcentreproject{\uppercase{#1}}}
\def\TPPvolume#1{\def\TPP@FPvolume{\em Volume:&#1\\}}
\def\TPPpart#1{\def\TPP@FPpart{\em Part:&#1\\}}
\def\TPPtitle#1{\def\TPP@FPtitle{#1}\let\TPPheadtitle=\TPP@FPtitle}
%% `\TPPheadtitle' may be redefined if the header title and
%% front page ttles should be different.
\def\TPPdate#1{\def\TPPdocdate{#1}}
\def\TPPref#1{\def\TPPxref{#1}}
\def\TPPissue#1{\def\TPPxissue{#1\unskip}}
\def\TPPstatus#1{\def\TPP@FPstatus{{\em Status:}&#1}}

%% \TPPtype is interesting.  If there is have a status field, then want
%%		\def\TPP@FPtype{\hfill {\em Type:\/} #1\\}
%% whereas if there is no status then want
%%		\def\TPP@FPtype{{\em Type:\/}&#1\\}
%% This must be achieved which ever order the status and
%% type fields are given.  The definition of `\TPP@FPAND' is used to protect
%% the `&' from the `\if...\fi' and to stop TeX from complaining.

\def\TPP@FPAND{&}
\def\TPPtype#1{\def\TPP@FPtype{%
	\ifx\TPP@FPstatus\relax		% No status field
		{\em Type:\/}\TPP@FPAND#1%
	\else				% Have a status field
		\hfill {\em Type:\/} #1%
	\fi}}
\def\TPPkeywords#1{\def\TPP@FPkeywords{{\em Keywords:}&#1\\}}
\def\TPPauthors#1{\def\TPP@FPauthor{\TPP@NamLocSig
	{Authors:}{Location}{#1}}}
\def\TPPauthor#1{\def\TPP@FPauthor{\TPP@NamLocSig
	{Author:}{Location}{#1}}}
\def\TPPauthorisation#1{\def\TPP@FPauthizn{\TPP@NamLocSig
	{\hbox to 0pt{Authorisation for Issue:\hss}}{Function}{#1}}}
\def\TPP@NamLocSig#1#2#3{%
		{\em #1}&\\%
		\multicolumn{2}{l}%
		{{\renewcommand{\arraystretch}{2}%
		\begin{tabular}[b]{@{}*4{p{0.22\textwidth}}@{}}%
		\em Name&\em #2&\em Signature&\em Date%
		\\#3\strut
		\end{tabular}}}\\[1.7ex]}
\def\TPPabstract#1{\def\TPP@FPabstractA{{\em Abstract:}&#1\\}}
\def\TPPabstractB#1{\def\TPP@FPabstractB{&#1\\}}
\def\TPPabstractC#1{\def\TPP@FPabstractC{&#1\\}}
\def\TPPabstractD#1{\def\TPP@FPabstractD{&#1\\}}
\def\TPPabstractE#1{\def\TPP@FPabstractE{&#1\\}}
\def\TPPabstractF#1{\def\TPP@FPabstractF{&#1\\}}
\def\TPPdistribution#1{\def\TPP@FPdist{{\em Distribution}:&#1}}

% This macro makes the front page itself

\def\makeTPPfrontpage{%
\TPPsetsizes
{\large\renewcommand{\arraystretch}{1.8}
\newlength{\RHScol}
\setlength{\RHScol}{\textwidth}
\addtolength{\RHScol}{-1in}
\begin{tabular}{@{}p{1in}@{}p{\RHScol}@{}}%
\TPP@FPproject
\TPP@FPvolume
\TPP@FPpart
{\em Title:}&\TPP@FPtitle\\
{\em Ref:}&\TPPxref \hfill
	{\em Issue:\/} \TPPxissue \hfill
	{\em Date:\/} \TPPdocdate\\
\TPP@FPstatus \TPP@FPtype\\
\TPP@FPkeywords
\TPP@FPauthor
\TPP@FPauthizn
\TPP@FPabstractA
\TPP@FPabstractB
\TPP@FPabstractC
\TPP@FPabstractD
\TPP@FPabstractE
\TPP@FPabstractF
\TPP@FPdist
\end{tabular}}%
% Now lose the large and unwanted definitions
\let\TPP@FPabstractA=\relax
\let\TPP@FPabstractB=\relax
\let\TPP@FPabstractC=\relax
\let\TPP@FPabstractD=\relax
\let\TPP@FPabstractE=\relax
\let\TPP@FPabstractF=\relax
\let\TPP@FPauthizn=\relax
\let\TPP@FPauthor=\relax
\let\TPP@FPdist=\relax
\let\TPP@FPkeywords=\relax
\let\TPP@FPpart=\relax
\let\TPP@FPproject=\relax
\let\TPP@FPstatus=\relax
\let\TPP@FPtype=\relax
\let\TPP@FPvolume=\relax
\let\TPPabstract=\relax
\let\TPPabstractB=\relax
\let\TPPabstractC=\relax
\let\TPPabstractD=\relax
\let\TPPabstractE=\relax
\let\TPPabstractF=\relax
\let\TPPauthor=\relax
\let\TPPauthorisation=\relax
\let\TPPauthors=\relax
\let\TPPdate=\relax
\let\TPPdistribution=\relax
\let\TPPissue=\relax
\let\TPPkeywords=\relax
\let\TPPpart=\relax
\let\TPPproject=\relax
%\let\TPPref=\relax		% keep this for page headers
\let\TPPstatus=\relax
\let\TPPtitle=\relax
\let\TPPtype=\relax
\let\TPPvolume=\relax
\let\TPPref=\relax
%\let\TPPheadtitle=\relax	% keep this for page headers
\let\TPP@FPtitle=\relax
\let\makeTPPfrontpage=\relax
}
