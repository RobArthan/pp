\documentstyle[TP,hol]{article}
%\tracingonline=1\tracingmacros=2\tracingcommands=2
\makeindex
\def\SCCSversion{$Revision$
}
\setcounter{section}{-1}
\setcounter{tocdepth}{1}
\setcounter{secnumdepth}{4}
\pagestyle{TPPrule}
\def\etc{{\it etc.\ }}
\def\eg{{\it e.g.}}
\def\Eg{{\it E.g.}}
\def\ie{{\it i.e.}}
\def\Ie{{\it I.e.}}
\begin{document}
\def\TPPheadcentre{\parbox{4in}{\centering TECHNOLOGY PROJECTS\\}}
\def\TPPfootlhs{}
\TPPsetsizes
\TPPproject{FORMAL METHODS UNIT}
\TPPtitle{Typesetting HOL and Z with \LaTeX}
\TPPref{DS/RDA/15}
\TPPissue{\SCCSversion}
\TPPdate{31 August 1989}
\TPPstatus{Draft}
\TPPtype{User Documentation}
\TPPkeywords{HOL, \LaTeX, Z}
\TPPauthor{R.D.~Arthan&WIN01
}
\TPPauthorisation{R.B.~Jones&FMU Manager
}
\TPPabstract{
}
\TPPdistribution{\hspace{2in}\begin{tabular}{l}
R.D.~Arthan\\
      R.B.~Jones\\
\end{tabular}
}
\makeTPPfrontpage
\vfill
\begin{centering}
\bf Copyright \copyright\ : International Computers Ltd \number\year
\end{centering}
\pagebreak
\section{Document Control}
\subsection{Contents List} \tableofcontents
\subsection{Document Cross References}
 
\bibliographystyle{fmu}
\bibliography{fmu}
\subsection{Changes History}
\begin{description}
\item[Issue 1.? (31 Aug 1989)] This is the first draft
to be issued. 
\end{description}
\subsection{Changes Forecast}
Any changes to the facilities described here will be
reflected in this document.
\pagebreak
\section{Introduction}
This document describes some facilities for
using \LaTeX\ to prepare documents
containing Z or HOL or similar formal material.
The facilities are similar in spirit to those
described in \cite{DS/FMU/infra/006},
for preparing such documents using {\tt ptroff}.

The package consists of a \LaTeX\ style file
(\ie, macro suite),
{\tt hol.sty}, and a preprocessor program, {\tt pretty2tex}.
The preprocessor allows the user to prepare a \LaTeX\
file using the extended (`pretty')
character set described in \cite{DS/FMU/infra/006}.
Thus the formal material appears on the screen much
as it does in the printed document, while the format of
the file is compatible with the HOL  system ({\it via}
the interfaces described in \cite{DS/FMU/infra/006}).

The package is currently rather easier to use
for HOL than for Z, because escape characters are not
defined for the various sorts of Z paragraph. This
deficiency will be easy to remedy if the necessary
pretty characters are defined.

The rest of this document describes the use of the
package, largely by example.
We assume some familiarity with \LaTeX, which is
described in \cite{lamport86} and with the HOL
infrastructure for supporting Z-like constructs
described in \cite{DS/FMU/infra/002}.

\section{Using the Package}

\subsection{Getting Started}
To use the package you prepare a file, say
{\tt myfile.doc}, using an editor which supports
the appropriate pretty font.
The form of the file is essentially that of a
\LaTeX\ file except that you can use pretty
(\ie, non-ASCII) characters to type Z or HOL constructs.
The \verb"\documentstyle" command line that you use should
include the option {\tt hol}. \eg, in this document
I used:

\begin{verbatim}
\documentstyle[TP,hol]{article}
\end{verbatim}

to get the options {\tt TP} (which gives our house style)
and {\tt hol}.

To print the file you run the preprocessor with
a command like:

\begin{verbatim}
pretty2tex <myfile.doc >myfile.tex
\end{verbatim}

and then run \LaTeX\ on {\tt myfile.tex} in the usual
way.

The basic job of {\tt pretty2tex} is to translate each
non-ASCII character into \LaTeX\ macro calls which
typeset that character. Some non-ASCII characters
control the way in which {\tt pretty2tex} does this
as we shall see.

\subsection{\LaTeX\ Environments}

The {\tt hol} style option makes available
the \LaTeX\ environments listed in the following table.
Each environment corresponds to a Z or HOL box.
The environments for HOL should not normally be invoked
by typing \verb"\begin{...}" and \verb"\end{...}".
Instead, you use the 
`opening' and `closing brackets' listed in the table.

\def\Sh#1{\hbox to 1.5em{\vrule
  width 0pt height 1.5\ht\strutbox depth 1.5\dp\strutbox
  \hfil#1\hfil}}
\begin{tabular}{|l|c|c|p{3in}|} \hline
Environment & Opening & Closing & Purpose \\ 
            & Bracket & Bracket & \\ \hline \hline
{\tt zschema}*& N/A & N/A &
Z schema definition \\
{\tt zgenconst}& N/A & N/A &
Z generic constant definition\\
{\tt zaxdes}& N/A & N/A &
Other Z paragraph forms: axiomatic description,
given type \etc \\
{\tt HOLaxdes}& \Sh{$\lceil$} & \Sh{$\lfloor$} &
HOL constant definition \\
{\tt HOLinfixaxdes}& \Sh{\Startinfixaxdes} & \Sh{$\lfloor$} &
HOL infix constant definition \\
{\tt HOLschema}*& \Sh{\Topleft} & \Sh{\Bottomleft} &
HOL schema definition \\
{\tt ML}& \Sh{\StartML} & \Sh{\EndML} &
ML code (\eg, a proof) \\
{\tt FT}*& N/A & N/A &
Any other formal text to be typeset in a similar style to
Z or HOL (\eg, HOL output)\\ \hline
\end{tabular}

The environments marked with an asterisk (*) take
a parameter giving the name of the schema or the title
for the formal text. For the HOL schema you give the
name and an abbreviation for it as ML strings. These
should be typed immediately after the `\Topleft'
character followed by optional padding (see below) and the
character `\Topright'.

The shape of the bracketing characters has been chosen
so that you can use them, together with the pretty
characters `\Vbar', `\Hbar', `\Bottomright', `\Topright'
and `\Bigturnstile', to draw boxes which look like
their printed form on the screen.
`\Vbar', `\Hbar', `\Bottomright' and `\Topright' are
merely padding and have no effect on the form of
printed document.
Within one of the three sorts of HOL box,
`\Bigturnstile' causes the bar between the
signature and predicate parts of 
the box to be printed. Only padding characters should
appear in the line after the `\Bigturnstile'.
You use the \LaTeX\ macro \verb"\crossbar" to
print the bar for Z.

Within any of the above environments, text is typeset
with each ``line of input'' corresponding to a line in the
printed document.
Here if one of the bracketing character pairs listed
above encloses the text ``line of input'' means
line of input; if not, then  a ``line of input''
must have its beginning and end marked with
\verb"\\" and \verb"\+" respectively.
Text within each line is typeset
in \LaTeX's math mode, which makes for neater formulae.
Tab characters may be used to control the layout.

\subsection{Quirks and Foibles}

The package is designed
on the assumption that text bracketed
with one of the
pretty character pairs listed above is actually
going to be processed by HOL ({\it via} the
interfaces described in \cite{DS/FMU/infra/006}).
Consequently, it is assumed {\it (a)} that this text will
not contain any \LaTeX\ formatting controls apart from
spaces, tabs and newlines and {\it (b)} that any \LaTeX\
special characters such as `\$' and `\_' are not
to be treated specially and are just to be printed.

Spaces are ignored in \LaTeX's math mode,
so {\tt pretty2tex} inserts
\LaTeX\ control characters to ensure space is inserted
between two adjacent identifier-forming characters
which are separated by a space in the input text.
It takes as identifier-forming characters the
alphanumeric characters together with
`\_', `.', `' ', `!', and `?'.
This may result in a necessary space not begin printed
if you use an unfortunate combination of pretty
characters as an identifier.

The package has also been designed on the assumption
that if you use \LaTeX\ \verb"\begin{...}" command
to invoke one of the above environments you are
doing it to use \LaTeX\ to get some special effect.
The package
therefore only serves to translate non-ASCII characters
in text which is not enclosed in a pair of the above
bracketing characters.
It does not put in controls
for extra spaces or for printing \LaTeX\ special characters,
on the assumption that you will want to set the
spacing yourself and to use the special characters
as special characters.
Currently this means that the Z user has to work
a little harder than the HOL user, since pretty characters
to act as brackets for the Z boxes are not provided. 

\subsection{Controlling the Layout}

The dimension registers \verb"\ftlmargin" and
\verb"\ftrmargin" may be used to adjust the additional
left and right margin space used for the boxes. These
are set to give no additional space by default.

The count register \verb"\ftlinepenalty" sets
the penalty which applies at the end of each line
of formal text in the various Z and HOL environments.
It is set to $10000$ by default.
This means value means that no pagebreaks will be
allowed within such an environment. If you want
to allow pagebreaks use \verb"\ftlinepenalty=0".

\subsection{Making an Index}

An additional pair of pretty characters, `\Startindex' and
`\Endindex' may be used to help make an index for the
document.
If you type, say, `\Startindex\verb"InterestingThing"\Endindex', somewhere in {\tt myfile.doc} then
‚InterestingThing·
will be printed in bold and the \LaTeX\ macro
\verb"\index" will be  called with `InterestingThing'
as parameter.
If, following the instructions in \cite{lamport86},
you have used \verb"\makeindex" earlier in your
document this will cause an entry of the form:

\begin{verbatim}
\indexentry{InterestingThing}
\end{verbatim}

to be written in the file {\tt myfile.idx}.

A macro \verb"\printindex" is supplied in the {\tt hol}
style option for
including the index in the printed document.
To use it type \verb"\printindex" in your
file where you want the index to appear.

You will usually want to do some form
of manipulation of the file {\tt myfile.idx}, such
as sorting it, before including it in the document.
The package adopts the convention that, in this example,
{\tt myfile.sid} is the name of the file holding
the sorted, or otherwise adjusted, index.
\verb"\printindex" reads this file in an
environment in which each \verb"\indexentry"
produces entries whose form may be seen in the
index to this document. 

\section{HOL Examples}

Here is an HOL schema:

«`‚STATE·``S`ﬂ
›	high : Ü , low : Ü
…
›	high à low
 ‡
% Macros for a tiny gap:
\def\Tg{\hskip 0.1em}

I typed the above approximately as follows:
{\tt
\begin{tabular}{l}
\Topleft\Tg`\Startindex STATE\Endindex` `S` \Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Topright\\
\Vbar\Tg\hskip 0.5in high : Ü, low : Ü\\
\Bigturnstile\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\\
\Vbar\Tg\hskip 0.5in high à low\\
\Bottomleft\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Hbar\Tg\Bottomright\\
\end{tabular}}

An example of the ML environment follows.
Note the font change for the HOL term. 

Â
›	new_theory`12`;;
›	new_parent`pf`;;
›	loadf`infra`;;
›	let tm="án:Üé1<nÄn<10";;
Ê

Terms may of course spread over many lines, as in:
Â
set_goal([],"É(in_f : INPUT_FILTER_TYPE)
		(out_m : OUTPUT_MERGER_TYPE)
		(prog : USER_PROGRAM_TYPE)é
		in_f ù input_filter_specification
	Ä	out_m ù output_merger_specification
	Ä	progùuser_program_specification
	ä	composite_construction(in_f,out_m,prog)
			ùsecure");;
Ê


The two sorts of constant definition:

»
›	‚secure· : SYSTEM_TYPEãbool
…
›	É(f:SYSTEM_TYPE)é
›	f  ù  secure Ç 
›	És∞ s¨:STATEé(s∞.S_low = s¨.S_low)ä((f s∞).S_low = (f s¨).S_low )
À

Á
›	‚ƒ· : bool ã bool ã bool
…
›	A ƒ B = A Ä åB
À

\section{Z Examples}

We give an example of each sort of Z paragraph
(using the terminology of Spivey's book).
We start with a given type definition.
This uses the {\tt zaxdes} environment.

\begin{zaxdes}
\+	[‚NAME·, ‚DATE·]\\
\end{zaxdes}

Now an axiomatic description box using {\tt zaxdes},
of course, together with the macro \verb"\crossbar" to
draw the cross-bar.

\begin{zaxdes}
\+	‚known·:ëNAME\\
\+	‚birthday·:NAMEñDATE\\
\crossbar
\+	known=dom birthday\\
\end{zaxdes}

Now a schema box using the {\tt zschema} environment
(and \verb"\crossbar" again).
{\tt zschema} has a parameter giving the name of the
schema.
\begin{zschema}{‚BirthdayBook1·}
\+	names:Ü∞ãNAME\\
\+	dates:Ü∞ãDATE\\
\+	hwm:Ü\\
\crossbar
\+	Éi,j: 1 .. hwm é\\
\+		iàjänames(i)ànames(j)\\
\end{zschema}
Generic boxes are made with the {\tt zgenconst}
environment (and \verb"\crossbar" again).
This takes a single parameter giving the list of formal
parameters.
\begin{zgenconst}{[X]}
\+	‚\#·:íX ãÜ\\
\crossbar
\+	És:íXé\\
\+		\#s=(án:ÜéÑf:1..ÜêSétrue)\\
\end{zgenconst}

The remaining three forms of paragraph (abbreviation
definition, free type definition and constraint), like
given type definitions don't need boxes. We give
them margin lines using {\tt zaxdes}:
\begin{zaxdes}
\+	‚DATABASE· ∂ ADDR ã PAGE\\
\+\\
\+	‚TREE·::=tip|forkæÜâTREEâTREEø\\
\+\\
\+	n\_disks<5\\
\end{zaxdes}

\section{Miscellaneous}
A final sort of environment may be used for HOL output
or anything similar. It is called {\tt FT} (for
Formal Text) and has a parameter which gives the label.
\begin{FT}{HOL output}
\+Goal\ Proved\\
\+...\\
\end{FT}
The dimension registers \verb"\ftlmargin" and
\verb"\ftrmargin" may be used to adjust the additional
left and right margin space used for the boxes. These
are set to give no additional space by default.
If you use, for example,
\begin{verbatim}
\ftlmargin=1.5in \ftrmargin=1.5in
\end{verbatim}
you get the following:
\ftlmargin=1.5in \ftrmargin=1.5in
\begin{zschema}{BirthdayBook1}
\+	names:Ü∞ãNAME\\
\+	dates:Ü∞ãDATE\\
\+	hwm:Ü\\
\crossbar
\+	Éi,j:1..hwmé\\
\+		iàjänames(i)ànames(j)\\
\end{zschema}
In all of the environments tab characters are
interpreted specially and give typewriter-style
tabstops at $1\over2$~inch intervals.
For instance, in the above example I have used one tab 
at the beginning of each line but the last, which has two.
By putting tabs in before the colons
in the signature part of the schema, I can get
the types to line up in columns:
\ftlmargin=0.0in \ftrmargin=0.0in
\begin{zschema}{BirthdayBook1}
\+	names	:Ü∞ãNAME\\
\+	dates	:Ü∞ãDATE\\
\+	hwm	:Ü\\
\crossbar
\+	Éi,j:1..hwmé\\
\+		iàjänames(i)ànames(j)\\
\end{zschema}
It may require some experiment to get the right
number of tabs.
You can change the tabstop interval by setting
the dimension register \verb"\tabstop" to the
interval you want. E.g., with
\begin{verbatim}
\tabstop=1.0in
\end{verbatim}
our example looks like:
\tabstop=1.0in
\begin{zschema}{BirthdayBook1}
\+	names	:Ü∞ãNAME\\
\+	dates	:Ü∞ãDATE\\
\+	hwm	:Ü\\
\crossbar
\+	Éi,j:1..hwmé\\
\+		iàjänames(i)ànames(j)\\
\end{zschema}

As a final example of the \verb"FT" environment
here are all the pretty characters (except those,
such as $\vert\sp{H}$, used for bracketing formal
text):
\tabstop=0.25in


\begin{FT}{Pretty Characters}
\+	Ä	Å	Ç	É	Ñ	Ö	Ü	á\\
\+	à	â	ä	ã	å	ç	é	è\\
\+	ê	ë	í	ì	î	ï	ñ	ó\\
\+	ò	ô	ö	õ	ú	ù	û	ü\\
\+	†	°	¢	£	§	•	¶	ß\\
\+	®	©	™	´	¨	≠	Æ	Ø\\
\+	∞	±	≤	≥	¥	µ	∂	∑\\
\+	∏	π	∫	ª	º	Ω	æ	ø\\
\+	¿	¡	¬	√	ƒ	≈	∆\\
\+						Œ	œ\\
\+	–	—	“	”	‘	’	÷	◊\\
\+	ÿ	Ÿ	⁄	€	‹		ﬁ\\
\+					„	‰\\
\+					Ï	Ì	Ó	Ô\\
\+		Ò	Ú		Ù	ı	ˆ	˜\\
\+	¯	˘	˙	˚		˝	˛	ˇ\\
\end{FT}


\end{document}



\pagebreak
\section{Index of Defined Terms}
\ftlmargin=1in \ftrmargin=1in
\printindex
\end{document}

